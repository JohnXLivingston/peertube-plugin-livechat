[{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/intro/","title":"Introduction","tags":[],"description":"Introduction","content":"Qu\u0026rsquo;est ce que le plugin livechat ? Ce plugin pour Peertube permet d\u0026rsquo;intégrer un système de «chat» (clavardage) à coté des vidéos.\nPar défaut, une fois le plugin installé sur votre instance Peertube, un salon de discussion sera automatiquement créé pour chaque diffusion en direct.\nSur la capture d\u0026rsquo;écran ci-dessous, vous pouvez voir une page classique de vidéo Peertube, avec un salon de discussion sur la droite (cliquez sur l\u0026rsquo;image pour la voir en plein écran) :\nLe salon sera accessible pour les spectateur⋅rices, même si celleux-ci n\u0026rsquo;ont pas de compte sur votre instance. Ces utilisateur⋅rices «anonymes» auront juste à choisir un pseudonyme avant de pouvoir parler dans le tchat.\nPar défaut, le chat est affiché à côté de la vidéo. Mais vous pouvez l\u0026rsquo;ouvrir dans un autre onglet du navigateur, en utilisant le bouton situé au-dessus :\nVous pouvez tester le plugin livechat via cette page de démo.\n Installation En tant qu\u0026rsquo;administrateur⋅rice Peertube, vous pouvez installer ce plugin sur votre instance simplement en utilisant la boutique de plugin incluse dans l\u0026rsquo;interface d\u0026rsquo;administration de Peertube. Cherchez «livechat», puis cliquez sur «installer» : et voilà !\nPossibilités du livechat Le plugin a de nombreuses fonctionnalités avancées. Il utilise le standard XMPP «sous le capot», ce qui permet aux adminstrateur⋅rices d\u0026rsquo;activer des fonctionnalités avancées (se connecter en utilisant des clients XMPP, bots de tchat, pont vers d\u0026rsquo;autres protocoles, \u0026hellip;). Plus d\u0026rsquo;informations dans les sections correspondantes de cette documentation.\nFédération Peertube fait parti du fédiverse : vous pouvez créer un réseau d\u0026rsquo;instances Peertube, en partageant le contenu entre elles.\nCe plugin est capable de gérer la fédération : quand vous regardez un direct d\u0026rsquo;une instance distante, vous rejoindrez le tchat avec votre compte local. Vous serez automatiquement connecté avec votre pseudonyme et votre avatar.\nBien sûr, pour que la fédération fonctionne, le plugin doit être installé sur les deux instances.\nModération Parfois, vous devez protéger votre communauté contre les personnes mal intentionnées. En tant qu\u0026rsquo;administrateur⋅rice d\u0026rsquo;instance, vous pouvez choisir de désactiver la fédération pour le plugin livechat. Si des acteur⋅rices distant⋅es se comportent mal, les streameur⋅euses, les modérateur⋅rices et les administrateur⋅rices peuvent bannir ou mettre en sourdine des utilisateur⋅ices.\nBot de tchat Ce plugin via avec un bot de tchat intégré. Veuillez vous référer à sa documentation pour plus d\u0026rsquo;informations.\nVous pouvez également brancher tout autre bot de tchat XMPP, en utilisant les Composants XMPP externes. Pour cela, vous avez juste à configurer les accès des composants externes via la page des paramètres du plugin.\nPersistance du tchat En rejoignant un salon, vous verrez les anciens messages. Même ceux envoyés avant que vous ne rejoignez le salon.\nCe comportement peut changer salon par salon, et la durée de rétention peut être choisie par les administrateur⋅rices de l\u0026rsquo;instance.\nIntégrer le tchat dans vos directs Lorsque vous utilisez un logiciel tel que OBS pour votre diffusion en direct, vous pouvez intégrer le tchat dans le flux vidéo. C\u0026rsquo;est par exemple utile pour les rediffusions.\nDans la capture d\u0026rsquo;écran suivante, vous pouvez voir une rediffusion de direct où le contenu du tchat est inclus dans le bas de la vidéo :\nDans la capture d\u0026rsquo;écran suivante, vous pouvez voir une configuration OBS, où le chat est inclus en tant que source dans la scène actuelle (la couleur de fond peut être modifiée et peut être transparente) :\nAutres usages Par défaut, chaque streameur⋅euse peut activer/désactiver le tchat pour leurs directs.\nMais au niveau de l\u0026rsquo;instance, les administrateur⋅rices peuvent choisir d\u0026rsquo;activer le tchat pour toutes les vidéos (directs et/ou vidéo à la demande).\nVous pouvez également activer le tchat pour des vidéos à la demande spécifiques. C\u0026rsquo;est comme cela que fonctionne la page de démo : ce n\u0026rsquo;est pas un direct, mais j\u0026rsquo;ai activé le tchat spécifiquement pour cette vidéo.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contributing/codeofconduct/","title":"Code de conduite","tags":[],"description":"Convention de Code de conduite Contributeur⋅rices","content":" Ce code de conduite est adapté du Contributor Covenant, version 2.1, disponible à l\u0026rsquo;adresse https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Les traductions sont disponibles à l\u0026rsquo;adresse https://www.contributor-covenant.org/translations. Les cas de comportements abusifs, harcelants ou tout autre comportement inacceptables peuvent être signalés aux dirigeant·e·s de la communauté responsables de l’application du code de conduite à git.[at].john-livingston.fr.\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/","title":"Documentation","tags":[],"description":"Documentation du plugin","content":"  Documentation utilisateur⋅rice  Documentation utilisateur⋅rice du plugin peertube-plugin-livechat\n  Pour les spectateur⋅rices  Comment tchater pour les spectateur⋅rices\n   OBS  Documentation pour diffuser le contenu du tchat à l\u0026#39;aide d\u0026#39;OBS.\n   Clients XMPP  Se connecter au tchat avec un client XMPP\n   Pour les streameur⋅euses  Comment mettre en place le tchat pour vos diffusions en direct\n  Quelques basiques  Quelques informations de base sur comment configurer et utiliser le tchat pour vos directs\n Configuration de la chaîne  Configuration des salons de discussion des chaînes Peertube\n Modération  Fonctions de modération avancées du plugin peertube-plugin-livechat\n Conditions d\u0026#39;utilisation  Configurer les conditions d\u0026#39;utilisation des tchats de la chaîne\n Mode lent  Mode lent du plugin peertube-plugin-livechat\n Délai de modération  Plugin peertube-plugin-livechat délai de modération\n Emojis personnalisés  Emojis personnalisés du plugin peertube-plugin-livechat\n Sondages  Vous pouvez créer des sondages pour demander l\u0026#39;avis des spectateur⋅rices.\n Tâches / listes de choses à faire  Vous pouvez gérer les tâches et les listes de tâches avec votre équipe de modération.\n Bot de tchat  Configuration du bot de tchat\n   Documentation d\u0026#39;installation  Installation du plugin peertube-plugin-livechat\n  En cas de problème  Quelques erreurs classiques, et solutions de contournement.\n   Problème connu : compatibilité CPU  Pour l\u0026#39;instant le plugin ne supporte de base que les architectures CPU x86_64 et arm64. Veuillez trouver ici des instructions pour le faire fonctionner sur d\u0026#39;autres architectures CPU.\n   Mise à jour depuis une version antérieure à 6.0.0  Notes importantes pour la mise à jour depuis une ancienne version du plugin.\n    Documentation administrateur⋅rice  Administration du Plugin Peertube Livechat\n  Paramètres  Paramètres du Plugin Peertube Livechat\n   Authentification externe  Paramètres du Plugin Peertube Livechat - Authentification Externe\n   Usage avancé  Quelques fonctionnalités avancées\n  Clients XMPP  Autoriser la connexion en utilisant des clients XMPP\n Utiliser Matterbridge  Utiliser Matterbridge pour faire un pont vers d\u0026#39;autres tchats\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/","title":"Documentation utilisateur⋅rice","tags":[],"description":"Documentation utilisateur⋅rice du plugin peertube-plugin-livechat","content":"  Pour les spectateur⋅rices  Comment tchater pour les spectateur⋅rices\n   OBS  Documentation pour diffuser le contenu du tchat à l\u0026#39;aide d\u0026#39;OBS.\n   Clients XMPP  Se connecter au tchat avec un client XMPP\n   Pour les streameur⋅euses  Comment mettre en place le tchat pour vos diffusions en direct\n  Quelques basiques  Quelques informations de base sur comment configurer et utiliser le tchat pour vos directs\n   Configuration de la chaîne  Configuration des salons de discussion des chaînes Peertube\n   Modération  Fonctions de modération avancées du plugin peertube-plugin-livechat\n   Conditions d\u0026#39;utilisation  Configurer les conditions d\u0026#39;utilisation des tchats de la chaîne\n   Mode lent  Mode lent du plugin peertube-plugin-livechat\n   Délai de modération  Plugin peertube-plugin-livechat délai de modération\n   Emojis personnalisés  Emojis personnalisés du plugin peertube-plugin-livechat\n   Sondages  Vous pouvez créer des sondages pour demander l\u0026#39;avis des spectateur⋅rices.\n   Tâches / listes de choses à faire  Vous pouvez gérer les tâches et les listes de tâches avec votre équipe de modération.\n   Bot de tchat  Configuration du bot de tchat\n  Mots interdits  Le bot peut automatiquement modérer les messages contenant des mots interdits.\n Messages pré-enregistrés  Le bot peut envoyer des messages périodiquement.\n Commandes  Le bot peut répondre à différentes commandes.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/installation/troubleshooting/","title":"En cas de problème","tags":[],"description":"Quelques erreurs classiques, et solutions de contournement.","content":"Je viens juste d\u0026rsquo;installer/mettre-à-jour le plugin, mais rien ne se passe Si vous venez juste d\u0026rsquo;installer/mettre-à-jour le plugin, et que rien ne se passe (pas de tchat, pas de paramètres, des boutons qui ne fonctionnent pas dans les paramètres, \u0026hellip;), essayez juste de recharger la page.\nOutil de diagnostic Si le tchat ne fonctionne pas, il y a un outil de diagnostic dans la page des paramètres du plugin.\nOuvrez les paramètres du plugin, et cliquez sur le bouton \u0026ldquo;lancer le diagnostique\u0026rdquo;.\nS\u0026rsquo;il y a une erreur sur la page de diagnostique, vous pouvez chercher une solution sur cette page, ou si vous ne trouvez pas de réponse, vous référer à la page de documentation «évolutions / bugs».\nLe tchat ne se charge pas Appels d\u0026rsquo;API interne Dans certains cas (comme par exemple les installation Peertube sous Docker), l\u0026rsquo;outil de diagnostique affiche une erreur appelée \u0026ldquo;API Prosody Peertube is KO\u0026rdquo;.\nDans ce cas, essayez de changer le paramètre \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;, en mettant http://127.0.0.1:9000 (si c\u0026rsquo;est bien le port 9000 qui est utilisé par votre Peertube, demandez aux administrateur⋅rices de votre instance si vous ne savez pas).\nVeuillez vous référer à la page d\u0026rsquo;aide pour ce paramètre.\nWebsocket Si tout est OK d\u0026rsquo;après l\u0026rsquo;outil de diagnostique, mais que la fenêtre de tchat reste vide : cela peut être un soucis Websocket. Depuis la version 5.0.0 de Peertube, il y a de la configuration supplémentaire à faire du côté du serveur. Vérifiez avec les administrateur⋅rices de votre instance s\u0026rsquo;iels n\u0026rsquo;ont pas oublié d\u0026rsquo;appliquer les changements listés dans les notes de version 5.0.0 de Peertube.\nVous pouvez confirmer si c\u0026rsquo;est un problème de Websocket en ouvrant la console de votre navigateur, et en vérifiant s\u0026rsquo;il y a des journaux d\u0026rsquo;erreur mentionnant une connexion Websocket échouée.\nSi vous ne pouvez pas corriger cela tout de suite, vous pouvez déactiver Websocket en décochant \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; dans la page des paramètres du plugin. En pareil cas, vous devriez aussi décocher \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;, car la fédération du tchat ne fonctionnera pas sans Websocket.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/bot/forbidden_words/","title":"Mots interdits","tags":[],"description":"Le bot peut automatiquement modérer les messages contenant des mots interdits.","content":"SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nVous pouvez remplir plusieurs champs «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;». Quand un⋅e utilisateur⋅rice envoie un message qui correspond à l\u0026rsquo;un des critère configuré, le message sera automatiquement supprimé.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nDans ce champs, vous pouvez mettre plusieurs mots, groupes de mots, ou «expressions régulières».\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nChaque fois qu\u0026rsquo;un⋅e utilisateur⋅rice envoi un message, ces mots seront testés. Si le message contient l\u0026rsquo;un d\u0026rsquo;entre eux, le message sera supprimé.\nVous pouvez par exemple remplir ce champs avec une liste d\u0026rsquo;insultes.\nPour avoir quelques exemples, merci de vous référer aux suggestions de mots interdits.\nSi vous avez des listes de mots utiles, vous êtes les bienvenu⋅es pour contribuer à cette page de suggestion. Elles sont dans le dossier support/forbidden_words du code source. Veuillez vous référer au guide de contribution pour plus d\u0026rsquo;informations.\nCes mots ne sont pas sensibles à la casse.\n Cette fonction est encore expérimentale. Il pourrait y avoir quelques problèmes avec les alphabets non-latin. Si c\u0026rsquo;est le cas, vous pouvez ouvrir un ticket pour signaler votre problème.\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nEn cochant cette option, chaque ligne du champs «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » sera considéré comme une expression régulière.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/admin/settings/","title":"Paramètres","tags":[],"description":"Paramètres du Plugin Peertube Livechat","content":"Cette section décrit la page de configuration du plugin.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nPour plus d\u0026rsquo;informations sur cette fonctionnalité, veuillez vous référer à la documentation des conditions d\u0026rsquo;utilisations de la chaîne.\nLa modification de ce paramètre redémarre le serveur de tchat et tous les utilisateur⋅rices seront déconnecté⋅es pendant une courte période.\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nLorsque vous appuyez sur le bouton \u0026ldquo;Lister les salles\u0026rdquo;, toutes les salles de chat existantes sont listées. Vous pouvez alors les trouver et les modérer.\nFédération Les paramètres suivants concernent la fédération avec d\u0026rsquo;autres instances Peertube et d\u0026rsquo;autres logiciels du fediverse.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nAuthentification SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSi vous avez des problèmes avec les jetons d\u0026rsquo;authentification à long terme, vous pouvez désactiver cette fonctionnalité ici.\nAuthentification externe Voir la page de documentation détaillée :\nAuthentification Externe\nConfiguration avancée de la chaîne Les paramètres suivants concernent les options de chaîne avancées : les utilisateur⋅rices pourront personnaliser leurs chaînes, activer le bot de modération, \u0026hellip;\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSi vous rencontrez un problème avec cette fonctionnalité, vous pouvez la désactiver.\nComportement en chat SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nCette fonctionnalité permet d\u0026rsquo;activer une fenêtre modale \u0026ldquo;partager le lien du chat\u0026rdquo;. Avec cette modale, vous pouvez générer des URL pour rejoindre le tchat. Le tchat peut être personnalisé (mode lecture seule, utilisation du thème actuel, \u0026hellip;).\nVous pouvez par exemple générer une URL en lecture seule et l\u0026rsquo;utiliser dans OBS pour intégrer le chat dans votre flux en direct !\nCe paramètre vous permet de choisir qui peut accéder à cette fenêtre modale.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nLe⋅a propriétaire de la vidéo pourra activer le tchat en ligne.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nNote : pour l\u0026rsquo;instant, c\u0026rsquo;est fonctionnalité masque simplement le tchat. Dans une future version, le tchat sera remplacé par un message précisant «merci de vous connecter [\u0026hellip;]». Voir les notes de publication de la version 5.7.0 pour plus d\u0026rsquo;informations.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nNote importante : Si vous activez cette fonctionnalité, et que vous utilisez un reverse proxy personnalisé devant Peertube, merci de vous assurer que vous avez correctement configuré celui-ci pour faire suivre les IPs réelles des utilisateur⋅rices à Peertube. Sinon cela pourrait bloquer tous les utilisateur⋅rices anonymes d\u0026rsquo;un coup.\nPersonnalisation de l\u0026rsquo;apparence SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nVous pouvez choisir parmi plusieurs jeux différents les avatars par défaut qui seront utilisés pour les utilisateurs du tchat.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only : Générateur d\u0026rsquo;avatars Peertube de David Revoy, Licence CC-By\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only : Générateur d\u0026rsquo;avatar de chat de David Revoy, Licence CC-By\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only : Générateur d\u0026rsquo;avatar d\u0026rsquo;oiseaux de David Revoy, Licence CC-By\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only : Générateur d\u0026rsquo;avatar fénnec/mobilizon de David Revoy, licence CC-By\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only : Générateur d\u0026rsquo;avatar abstrait de David Revoy, licence CC-By\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only : Basé sur le travail de David Revoy, licence AGPL-v3\nSi vous ne voyez pas le changement immédiatement, cela peut être dû au cache de votre navigateur. Effacez le stockage de session de votre navigateur ou redémarrez-le.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nVous pouvez choisir le thème à utiliser pour ConverseJS :\n Thème Peertube : il s\u0026rsquo;agit d\u0026rsquo;un thème spécial, conçu spécialement pour l\u0026rsquo;intégration dans Peertube. Thème ConverseJS par défaut : c\u0026rsquo;est le thème ConverseJS par défaut. Thème ConverseJS concord : il s\u0026rsquo;agit d\u0026rsquo;un thème fourni par ConverseJS.  SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nParamètres avancés du tchat SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nLe plugin est livré avec une AppImage qui est utilisée pour exécuter le serveur XMPP Prosody. Si cet AppImage ne fonctionne pas, vous pouvez vous rabattre sur la version de Prosody qui est packagé pour votre serveur. Installez simplement le paquet prosody.\nCe paramètre ne devrait être utilisé que si le plugin est cassé et en attente d\u0026rsquo;un correctif.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSi ce paramètre est laissé vide, et que vous utilisez Peertube \u0026gt;= 5.1, le plugin va utiliser les valeurs de votre fichier de configuration Peertube pour devenir sur quelle interface et quel port les requêtes doivent être faites.\nEn dernier recours, cela utilisera l\u0026rsquo;URI publique de votre instance. Donc les appels d\u0026rsquo;API passeront à traver Nginx. Cela peut échouer dans certains cas : par exemple si vous êtes dans un conteneur Docker pour lequel le hostname publique ne résoud pas sur la bonne IP. Dans ce cas, essayez de changer le paramètre \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;, en mettant http ://127.0.0.1 :9000 (si c\u0026rsquo;est bien le port 9000 qui est utilisé par votre Peertube, demandez aux administrateur⋅rices de votre instance si vous ne savez pas).\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nCe paramètre permet aux clients XMPP de se connecter au serveur Prosody intégré. Pour l\u0026rsquo;instant, cette option n\u0026rsquo;autorise que les connexions des clients sur le localhost.\nPar exemple, cette option peut permettre à une instance Matterbridge (une fois qu\u0026rsquo;elle pourra utiliser une connexion anonyme) sur la même machine de faire le lien entre votre tchat et d\u0026rsquo;autres services tels qu\u0026rsquo;une salle Matrix.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nCe paramètre permet aux composants externes XMPP de se connecter au serveur. Par défaut cette option n\u0026rsquo;autorise que les connexions des composants sur localhost. Vous devez changer la valeur du paramètre «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » pour écouter sur d\u0026rsquo;autres interfaces réseau.\nCette fonction pourrait être utilisée pour connecter des ponts ou des robots.\nPlus d\u0026rsquo;informations sur les composants externes de Prosody [ici] (https://prosody.im/doc/components).\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/viewers/","title":"Pour les spectateur⋅rices","tags":[],"description":"Comment tchater pour les spectateur⋅rices","content":"Rejoindre les salons de discussion Quand vous regardez une vidéo Peertube qui a le tchat activé, vous le verrez à coté de celle-ci :\nIl y a deux cas d\u0026rsquo;usages légèrement différents, dépendant de si vous avez un compte sur l\u0026rsquo;instance Peertube ou non. Voir plus bas pour plus d\u0026rsquo;informations.\nSi vous n\u0026rsquo;avez pas de compte Peertube Cette fonction peut être désactivée par les administrateur⋅rices de l\u0026rsquo;instance.\n Si vous n\u0026rsquo;êtes pas identifié⋅e sur l\u0026rsquo;instance Peertube où vous regardez la vidéo, vous allez automatiquement rejoindre le tchat. Un pseudonyme aléatoire vous sera assigné (quelque chose de la forme «Anonyme 12345»).\nAvant de pouvoir parler dans le salon, vous allez devoir choisir un pseudonyme dans le champ au bas de la fenêtre.\nSe connecter à l\u0026rsquo;aide d\u0026rsquo;un fournisseur d\u0026rsquo;authentification externe Cette fonction peut être désactivée par les administrateur⋅rices de l\u0026rsquo;instance.\n L\u0026rsquo;instance Peertube peut configurer des fournisseurs d\u0026rsquo;authentification externes (comptes Mastodon, comptes Google, \u0026hellip;). Dans ce cas, vous verrez un bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;, qui ouvrira une boîte de dialogue modale. Dans cette modale de dialogue, il y aura des boutons pour se connecter en utilisant un compte distant.\nUne fois que vous vous êtes connecté au compte distant et que l\u0026rsquo;accès vous a été accordé, votre pseudonyme et votre avatar (le cas échéant) seront automatiquement récupérés. Aucune autre donnée ne sera stockée. Ces données seront automatiquement supprimées quelques heures après que vous ayez quitté le tchat.\nSi vous avez un compte Peertube Si vous êtes connecté avec votre compte Peertube, vous allez automatiquement rejoindre le salon, en utilisant votre pseudonyme Peertube et votre avatar.\nSi vous regardez un direct sur une instance où vous n\u0026rsquo;avez pas de compte, mais que vous avez un compte Peertube sur une autre instance : sous réserve que le plugin livechat soit installé sur les deux instances, vous pouvez rejoindre le tchat avec votre compte. Pour cela, ouvrez la vidéo sur votre instance (vous pouvez par exemple copier/coller l\u0026rsquo;url de la vidéo dans le champs de recherche de votre instance).\n Si vous avez un compte Peertube sur une autre instance Peertube Cette fonctionnalité arrive avec le plugin livechat version 9.0.0.\n Si vous avez un compte Peertube, mais pas sur l\u0026rsquo;instance courante, il y a un bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;. Ce bouton va ouvrir un fenêtre de dialogue où vous pourrez entrer l\u0026rsquo;URL de votre instance Peertube. Une fois celle-ci entrée, cela vérifiera sur le plugin livechat est disponible sur l\u0026rsquo;instance distante, et si la vidéo y est disponible. Dans ce cas, vous serez redirigé vers la vidéo sur l\u0026rsquo;instance distante.\nTchatter Pour envoyer des messages, saisissez les simplement dans le champ «message» en bas de l\u0026rsquo;écran. Vous pouvez les envoyer en tapant la touche entrée de votre clavier, ou en cliquant sur le bouton «envoyer».\nSi vous voulez ajouter des retours à la ligne à vos messages, vous pouvez utiliser la combinaison de touche «shift + entrée».\nVous pouvez ajouter des emojis à vos messages. Vous pouvez par exemple utiliser le menu emojis, ou directement taper les raccourcis du type :smiley:.\nVous pouvez mentionner d\u0026rsquo;autres participant⋅es. Pour cela, vous pouvez taper les premières lettres du pseudo, puis appuyer sur la touche tabulation. Vous pouvez aussi taper le caractère @ : cela ouvrira directement un menu. Vous pouvez également cliquer sur un pseudonyme dans la liste des participant⋅es pour insérer celui-ci dans le champs de saisie de message.\nListe des participant⋅es Pour voir la liste des participant⋅es, ouvrez juste le menu droit :\nVous pouvez constater que certain⋅es participant⋅es ont des droits spéciaux (modérateur⋅rice, propriétaire, \u0026hellip;).\nMenu déroulant du tchat Il y a un menu déroulant au dessus du tchat, comprenant quelques fonctionnalités avancées. Cela est particulièrement utile pour les fonctions de modération. Les fonctionnalités disponibles dépendent de votre niveau d\u0026rsquo;accès.\nOuvrir en plein écran Au dessus du tchat, il y a un bouton qui permet de l\u0026rsquo;ouvrir en plein écran. Cela l\u0026rsquo;ouvrira dans un nouvel onglet du navigateur avec le contenu suivant :\nCela peut être plus facile de tchatter en utilisant un onglet de navigateur complet.\nChanger de pseudonyme Vous pouvez changer de pseudonyme en tapant /nick votre_nouveau_pseudo dans le champs de message.\nVous pouvez également changer votre pseudonyme en utilisant le menu déroulant du tchat.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/sourcecode/","title":"Source code","tags":[],"description":"Source code organization","content":"This page describes the different source code folders and their content.\nbuild files Files in the root dir that begins with build- are files used to build the plugin. See the package.json file for more information.\nassets assets/images The assets/images folder contains all icons files used by the plugin.\nThere is also the assets/images/avatars folders, which contains avatars used for anonymous chat users. These files are used to generate multiple avatars (see the build-avatars.js script for more information).\n assets/images/avatars/legacy contains legacy avatar set (livechat versions until 8.1.0 included) assets/images/avatars/sepia contains new sepia avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/cat contains new cats avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/bird contains new birds avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/fenec contains new fenecs avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/abstract contains new abstract avatar set, based on the work of David Revoy (see copyright informations)  assets/styles The assets/styles folder contains the livechat plugin SCSS source files.\nbuild The build folder is not part of the source code, but is used to put some files during the build process.\nFor example, build-conversejs.js use the folder build/conversejs to build a customized ConverseJS version.\nclient The client folder contains the front-end source code.\nFiles like client/common-client-plugin.ts, admin-plugin-client-plugin.ts, \u0026hellip; are the base files that are loaded by Peertube for different \u0026ldquo;scopes\u0026rdquo; (common, videowatch, \u0026hellip;). Please refer to the Peertube plugin documentation for more information.\nconversejs The conversejs folder contains code relative to the use of ConverseJS.\nconversejs/custom The conversejs/custom folder contains some files that are used to customize ConverseJS. See the build-conversejs.sh script for more information.\ndist The dist folder is where goes all files created during the build process. It is not part of the source code.\ndocumentation The folder documentation is deprecated. We only keep files in this folder to avoid dead links (links to these files were shared on many websites or social media posts).\nThe source code for the new documentation is in support/documentation/content/en, and is used to generate the documentation web site.\nlanguages The folder languages contains the languages files. These files are translated using Weblate).\nprosody-modules The prosody-modules folder contains some modules used by Prosody.\nSome of them are \u0026ldquo;officials\u0026rdquo; plugins, others are specific to this plugin.\nserver The server folder contains the backend source code.\nshared The shared folder contains comme code that will be used both on frontend and backend.\nsupport/documentation The support/documentation contains the documentation source code.\nvendor The vendor folder is not part of the source code. It is used during the build process to download some external source code.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/admin/external_auth/","title":"Authentification externe","tags":[],"description":"Paramètres du Plugin Peertube Livechat - Authentification Externe","content":"Les utilisateur⋅rices qui ne sont pas connecté⋅es à votre instance Peertube rejoignent le chat en utilisant des \u0026ldquo;comptes anonymes\u0026rdquo; (iels peuvent librement choisir un surnom, et se verront attribuer un avatar aléatoire).\nVous pouvez activer des méthodes d\u0026rsquo;authentification externes pour permettre aux utilisateur⋅rices de créer des comptes pour tchater. Dans ce cas, leur pseudo et leur avatar seront automatiquement initialisés avec les informations du compte distant.\nCes \u0026ldquo;utilisateur⋅rices de comptes externes\u0026rdquo; seront plus faciles à modérer que les comptes anonymes.\nCela permet également à l\u0026rsquo;utilisateur⋅ice de rejoindre le tchat sans créer de compte Peertube (dans le cas où votre instance a fermé l\u0026rsquo;enregistrement par exemple, ou sans attendre l\u0026rsquo;approbation du compte).\nCette page décrit les méthodes d\u0026rsquo;authentification disponibles.\nPour la documentation utilisateur⋅rice, veuillez vous référer à la page de documentation utilisateur⋅rice\nOpenID Connect Cette fonctionnalité est encore expérimentale. Cette fonctionnalité arrive avec le plugin livechat version \u0026gt;= 9.0.0.\n Vous pouvez configurer un fournisseur externe compatible avec OpenID Connect.\nAinsi, vous pouvez par exemple utiliser votre site web pour l\u0026rsquo;authentification unique (Single Sign-On).\nLes logiciels CMS les plus répandus (Wordpess, \u0026hellip;) proposent des modules implémentant OpenID Connect.\nPour activer cette fonctionnalité, vous devez d\u0026rsquo;abord créer un client du côté de votre fournisseur (consultez la documentation relative à l\u0026rsquo;activation d\u0026rsquo;OpenID Connect). Ensuite, allez dans les paramètres du plugin, et activez \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;.\nNote : si vous souhaitez restreindre les urls de redirection autorisées du côté du fournisseur (bonne pratique de sécurité), le plugin vous indiquera l\u0026rsquo;url à autoriser. Il suffit de la copier dans la configuration de votre application OpenID Connect.\nVous devez maintenant remplir certains paramètres.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nIl s\u0026rsquo;agit du libellé du bouton dans la capture d\u0026rsquo;écran suivante :\nPour l\u0026rsquo;instant il n\u0026rsquo;est pas possible de localiser ce libellé.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nVotre fournisseur OpenID Connect doit implémenter l'URL de découverte (discovery URL). Définissez ici l\u0026rsquo;url de découverte, qui devrait être quelque chose comme https://example.com/.well-known/openid-configuration.\nNote : si votre fournisseur utilise le chemin standard /.well-known/openid-configuration, vous pouvez l\u0026rsquo;omettre. Par exemple, https://accounts.google.com fonctionnera.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nL\u0026rsquo;identifiant du client de votre application (Client ID).\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nLa clé secrète de votre application (Client secret).\nGoogle, Facebook, \u0026hellip; En plus de cela, vous pouvez également configurer un ou plusieurs fournisseurs Open ID Connect \u0026ldquo;standards\u0026rdquo; (Google, Facebook, \u0026hellip;).\nPour ces fournisseurs, l\u0026rsquo;url de découverte et l\u0026rsquo;étiquette du bouton sont prédéfinies. Il suffit de créer une application OAuth2 du côté du fournisseur et de configurer l\u0026rsquo;ID et le secret du client.\nSi vous pensez à un fournisseur standard qui n\u0026rsquo;est pas disponible, vous pouvez en demander la mise en œuvre en ouvrant un nouveau ticket.\nEn cas de problème Si le bouton n\u0026rsquo;apparaît pas pour les utilisateur⋅rices finaux, il se peut qu\u0026rsquo;il y ait un problème de configuration. Vous pouvez essayer l'outil de diagnostic pour obtenir plus d\u0026rsquo;informations.\nNote : si vous êtes connecté⋅e à votre compte Peertube, le bouton ne s\u0026rsquo;affichera jamais. Utilisez une fenêtre de navigation privée pour tester.\nSi le bouton s\u0026rsquo;affiche mais ne fonctionne pas, vérifiez les journaux de Peertube. Cela peut être dû au fait que le service distant n\u0026rsquo;utilise pas des scopes ou des noms d\u0026rsquo;attributs standard.\nPlus à venir\u0026hellip; D\u0026rsquo;autres méthodes d\u0026rsquo;authentification seront mises en œuvre à l\u0026rsquo;avenir.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/installation/","title":"Documentation d&#39;installation","tags":[],"description":"Installation du plugin peertube-plugin-livechat","content":" Avant de mettre à jour le plugin vers une nouvelle version majeure, merci de lire les notes de version, et la liste des éventuelles modifications non rétro-compatibles : CHANGELOG.\n Pour installer ou mettre à jour ce plugin, utilisez simplement l\u0026rsquo;interface web d\u0026rsquo;administration de votre Peertube.\n Vous trouverez ci-dessous d\u0026rsquo;autres instructions :\n En cas de problème  Quelques erreurs classiques, et solutions de contournement.\n   Problème connu : compatibilité CPU  Pour l\u0026#39;instant le plugin ne supporte de base que les architectures CPU x86_64 et arm64. Veuillez trouver ici des instructions pour le faire fonctionner sur d\u0026#39;autres architectures CPU.\n   Mise à jour depuis une version antérieure à 6.0.0  Notes importantes pour la mise à jour depuis une ancienne version du plugin.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/bot/quotes/","title":"Messages pré-enregistrés","tags":[],"description":"Le bot peut envoyer des messages périodiquement.","content":"SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nS\u0026rsquo;il n\u0026rsquo;y a pas d\u0026rsquo;utilisateur⋅rice dans le salon, le bot n\u0026rsquo;enverra pas de message.\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/installation/cpu_compatibility/","title":"Problème connu : compatibilité CPU","tags":[],"description":"Pour l&#39;instant le plugin ne supporte de base que les architectures CPU x86_64 et arm64. Veuillez trouver ici des instructions pour le faire fonctionner sur d&#39;autres architectures CPU.","content":"L\u0026rsquo;AppImage Prosody inclue dans le plugin ne fonctionne que sur des CPU x86_64 et arm64. Elle n\u0026rsquo;est pas compatible avec d\u0026rsquo;autres architectures CPU.\nPour utiliser le plugin, vous allez devoir installer manuellement Prosody sur votre serveur (voir plus bas).\nNote : la version de Prosody devrait être supérieure ou égale à 0.12.0. Si vous utilisez une version plus ancienne, il pourrait y avoir des bugs sur la fédération du tchat, et d\u0026rsquo;autres comportements inattendus.\nUne fois cela fait, vous aurez à cocher le paramètre Use system Prosody du plugin.\nInstallation autres que Docker Pour les installations standard, vous avez juste à installer le paquet prosody officiellement disponible pour votre distribution linux.\nPar exemple, sur Debian/Ubuntu :\nsudo apt install prosody Vous pouvez alors désactiver le service qui démarre automatiquement quand vous installé le paquet (le plugin va lancer son propre processus Prosody, et n\u0026rsquo;a pas besoin que le service tourne sur le serveur). Par exemple, sur Debian/Ubuntu (et les autres distributions se basant sur Systemd) :\nsudo systemctl disable prosody \u0026amp;\u0026amp; sudo systemctl stop prosody Attention : ne désactivez pas Prosody s\u0026rsquo;il est utilisé par un autre service sur votre serveur, par exemple pour Jitsi.\nDocker Vous allez devoir générer une image de Peertube qui inclu Prosody dans le même conteneur que Peertube. Je sais que ce n\u0026rsquo;est pas la façon de faire standard avec Docker, mais gardez en tête que ceci est une solution de contournement temporaire.\nPour générer cette image, merci de vous référer à la documentation de Docker. Le fichier Docker pour générer l\u0026rsquo;image devrait être :\nFROMchocobozzz/peertube:production-bullseyeRUN apt -y update \u0026amp;\u0026amp; apt install -y prosody \u0026amp;\u0026amp; apt -y cleanYunohost Vous avez à désactiver metronome (le serveur XMPP utilisé par Yunohost), et installerprosody.\nCeci est déjà fait par l\u0026rsquo;application Yunohost Peertube, étant donné que c\u0026rsquo;était un pré-requis pour les version du plugin antérieures à la v6.0.0.\nMais il se pourrait que ce soit retiré de l\u0026rsquo;application Yunohost Peertube dans un futur proche (pour éviter les inconvénients de cette méthode). Je dois discuter avec l\u0026rsquo;équipe Yunohost, pour décider de la bonne façon de faire pour minimiser les inconvénients et maximiser la compatibilité.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/thirdparty/","title":"Third party","tags":[],"description":"Displaying the livechat with 3rd party software.","content":" This page describes experimental features. These features are available with the plugin version \u0026gt;= 7.2.0.\n Introduction Peertube is part of the Fediverse. So Peertube video can be watched from other Peertube instances, and from various other softwares:\n from a Mastodon (or other fediverse application) instance, from a mobile app (Fedilab, Tusky, \u0026hellip;), from desktop fediverse app, \u0026hellip;  This livechat plugin is using well known standards, so it is possible to join chat rooms even when not viewing the video on Peertube.\nThere are basically 2 ways to join the chat room associated to a video:\n opening a web page (with an url like https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535), using a XMPP client (and joining a room like xmpp://8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld?join)  Joining the chat using a XMPP client is not always possible. It requires some DNS and server configuration. It will only be possible if instance\u0026rsquo;s admins have correctly setup the external XMPP clients connection feature.\n Don\u0026rsquo;t try to gues these url and connection methods yourself. Please report to next chapters.\n Chat discovery Using ActivityPub The livechat plugin adds some data in Video ActivityPub objects, so that the chat can be discovered.\nThis requires Peertube \u0026gt;= 5.1\n This follows the FEP-1970 recommendations.\nAt the time of the writing, this FEP is in draft status, and the livechat plugin is a Proof-of-concept. Until the FEP is adopted, the specification can change, and the livechat plugin will be adapted accordingly.\n Basically, the chat will be declared as attachments on the Video object, using the discussion relation.\nBy default, here is an example of what you will get:\n{ \u0026#34;@context\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams\u0026#34;, \u0026#34;https://w3id.org/security/v1\u0026#34;, { \u0026#34;RsaSignature2017\u0026#34;: \u0026#34;https://w3id.org/security#RsaSignature2017\u0026#34; }, { // ...  } ], \u0026#34;to\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams#Public\u0026#34; ], \u0026#34;cc\u0026#34;: [ \u0026#34;https://yourinstance.tld/accounts/root/followers\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;Video\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;The video title\u0026#34;, // ...  \u0026#34;url\u0026#34;: [ /* ... */ ], \u0026#34;attachment\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; } ] } In case the instance has activated the external XMPP clients connection feature:\n{ \u0026#34;@context\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams\u0026#34;, \u0026#34;https://w3id.org/security/v1\u0026#34;, { \u0026#34;RsaSignature2017\u0026#34;: \u0026#34;https://w3id.org/security#RsaSignature2017\u0026#34; }, { // ...  } ], \u0026#34;to\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams#Public\u0026#34; ], \u0026#34;cc\u0026#34;: [ \u0026#34;https://yourinstance.tld/accounts/root/followers\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;Video\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;The video title\u0026#34;, // ...  \u0026#34;url\u0026#34;: [ /* ... */ ], \u0026#34;attachment\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;xmpp://8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld?join\u0026#34; } ] } Algorithm If you want to display the chat in a web page or in an iframe, here is what you should do:\n get the Video ActivityPub object, if there is no attachment key, stop. loop through the attachment values (if attachment is not an array, just iterate on this single value) search for an entry with rel === discussion, and with href using the https scheme (that begins with https://) if found, open this href  If you want to open the chat room using the XMPP protocol:\n get the Video ActivityPub object, if there is no attachment key, stop. loop through the attachment values (if attachment is not an array, just iterate on this single value) search for an entry with rel === discussion, and with href using the xmpp scheme (that begins with xmpp://) if found, open this xmpp uri with your client, or connect to the XMPP room at that address  Additional notes In the ActivityPub object, there is also a peertubeLiveChat entry. Don\u0026rsquo;t use the content of this entry. This is specific to the livechat plugin, and can be changed or removed in a near future. It is currently required for some endpoint discovery.\nUsing Podcast RSS feed The livechat plugin adds some data in Podcast RSS feeds under the \u0026lt;podcast:liveItem\u0026gt;, so that the chat can be discovered for live streams.\nThis requires Peertube \u0026gt;= 5.2\n The \u0026lt;podcast:chat\u0026gt; element is currently only supported for live streams.\n This follows the \u0026lt;podcast:chat\u0026gt; proposal.\nAt the time of the writing, this proposal is in draft status, and the livechat plugin is a Proof-of-concept. Until the proposal is adopted, the specification can change, and the livechat plugin will be adapted accordingly.\n Basically, the chat will be declared as tag under on the \u0026lt;podcast:liveItem\u0026gt; element.\nBy default, here is an example of what you will get:\n\u0026lt;podcast:liveItem status=\u0026#34;live\u0026#34; start=\u0026#34;2023-07-06T18:00:00.000Z\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The video title\u0026lt;/title\u0026gt; \u0026lt;guid isPermaLink=\u0026#34;false\u0026#34;\u0026gt;e32b4890-983b-4ce5-8b46-f2d6bc1d8819_2023-07-06T18:00:00.000Z\u0026lt;/guid\u0026gt; \u0026lt;link\u0026gt;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026lt;/link\u0026gt; \u0026lt;podcast:socialInteract uri=\u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; protocol=\u0026#34;activitypub\u0026#34; accountUrl=\u0026#34;https://yourinstance.tld/a/youraccount\u0026#34; /\u0026gt; \u0026lt;enclosure url=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; type=\u0026#34;application/x-mpegURL\u0026#34; /\u0026gt; \u0026lt;podcast:alternateEnclosure type=\u0026#34;application/x-mpegURL\u0026#34; lang=\u0026#34;en\u0026#34; title=\u0026#34;HLS\u0026#34; default=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;podcast:source uri=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; /\u0026gt; \u0026lt;/podcast:alternateEnclosure\u0026gt; \u0026lt;itunes:image href=\u0026#34;https://yourinstance.tld/lazy-static/previews/8df24108-6e70-4fc8-b1cc-f2db7fcdd535.jpg\u0026#34; /\u0026gt; \u0026lt;podcast:chat server=\u0026#34;yourinstance.tld\u0026#34; protocol=\u0026#34;xmpp\u0026#34; embedUrl=\u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; /\u0026gt; \u0026lt;/podcast:liveItem\u0026gt; In case the instance has activated the external XMPP clients connection feature:\n\u0026lt;podcast:liveItem status=\u0026#34;live\u0026#34; start=\u0026#34;2023-07-06T18:00:00.000Z\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The video title\u0026lt;/title\u0026gt; \u0026lt;guid isPermaLink=\u0026#34;false\u0026#34;\u0026gt;e32b4890-983b-4ce5-8b46-f2d6bc1d8819_2023-07-06T18:00:00.000Z\u0026lt;/guid\u0026gt; \u0026lt;link\u0026gt;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026lt;/link\u0026gt; \u0026lt;podcast:socialInteract uri=\u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; protocol=\u0026#34;activitypub\u0026#34; accountUrl=\u0026#34;https://yourinstance.tld/a/youraccount\u0026#34; /\u0026gt; \u0026lt;enclosure url=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; type=\u0026#34;application/x-mpegURL\u0026#34; /\u0026gt; \u0026lt;podcast:alternateEnclosure type=\u0026#34;application/x-mpegURL\u0026#34; lang=\u0026#34;en\u0026#34; title=\u0026#34;HLS\u0026#34; default=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;podcast:source uri=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; /\u0026gt; \u0026lt;/podcast:alternateEnclosure\u0026gt; \u0026lt;itunes:image href=\u0026#34;https://yourinstance.tld/lazy-static/previews/8df24108-6e70-4fc8-b1cc-f2db7fcdd535.jpg\u0026#34; /\u0026gt; \u0026lt;podcast:chat server=\u0026#34;yourinstance.tld\u0026#34; protocol=\u0026#34;xmpp\u0026#34; space=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld\u0026#34; embedUrl=\u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; /\u0026gt; \u0026lt;/podcast:liveItem\u0026gt; Algorithm If you want to display the chat in a web page or in an iframe, here is what you should do:\n get the Podcast RSS feed for the channel, if there is no \u0026lt;podcast:liveItem\u0026gt; element under the \u0026lt;channel\u0026gt;, stop. find the \u0026lt;podcast:liveItem\u0026gt; you are looking for  \u0026lt;podcast:socialInteract\u0026gt; can be used to cross-reference the items with ActivityPub   if there is no \u0026lt;podcast:chat\u0026gt; element under the \u0026lt;podcast:liveItem\u0026gt;, stop. loop through the \u0026lt;podcast:chat\u0026gt; values (if \u0026lt;podcast:chat\u0026gt; is not an array, just iterate on this single value)  there should only be one, but you should expect to handle several just in case   search for the first entry protocol === xmpp and an embedUrl attribute if found, open this embedUrl  If you want to open the chat room using the XMPP protocol:\n get the Podcast RSS feed for the channel, if there is no \u0026lt;podcast:liveItem\u0026gt; element under the \u0026lt;channel\u0026gt;, stop. find the \u0026lt;podcast:liveItem\u0026gt; you are looking for  \u0026lt;podcast:socialInteract\u0026gt; can be used to cross-reference the items with ActivityPub   loop through the \u0026lt;podcast:chat\u0026gt; values (if \u0026lt;podcast:chat\u0026gt; is not an array, just iterate on this single value)  there should only be one, but you should expect to handle several just in case   search for the first entry protocol === xmpp and a space attribute  space should be an XMPP JID for a MUC   if found, open this XMPP JID with your client after converting it to a join URI, or connect to the XMPP room at that address  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contributing/translate/","title":"Traduction","tags":[],"description":"Traduire le plugin","content":"Vous pouvez contribuer à la traduction de ce plugin Peertube. Les traductions sont gérées par le logiciel Weblate, via l\u0026rsquo;instance Weblate de Framasoft.\nNe modifiez jamais directement les fichiers dans le dossier languages du plugin, vous risqueriez de créer des conflits.\n Comment faire  Créez-vous un compte : https://weblate.framasoft.org/accounts/register/ Validez votre email en cliquant sur le lien reçu Choisissez votre mot de passe, et configurez votre compte Allez sur le projet du plugin de tchat : https://weblate.framasoft.org/projects/peertube-livechat/peertube-plugin-livechat/ Choisissez la langue que vous voulez traduire Il ne vous reste plus qu\u0026rsquo;à ajouter les traductions manquantes, ou corriger celles qui vous semblent erronées.  Il peut y avoir des chaînes «assez techniques». Si vous n\u0026rsquo;êtes pas sûr⋅e à 100% du sens, ou de la traduction, il vaut mieux ne pas la traduire du tout ; ainsi la version anglaise s\u0026rsquo;affichera.\n Traductions de ConverseJS Ce plugin s\u0026rsquo;appuie sur ConverseJS pour l\u0026rsquo;affichage du tchat. ConverseJS a ses propres traductions, sur sa propre instance Weblate. Vous pouvez également traduire directement dans le dépôt de code. Pour plus d\u0026rsquo;information, veuillez vous référer à la documentation de traduction de ConverseJS.\nAjouter une nouvelle langue Si la langue qui vous intéresse n\u0026rsquo;est pas présente, assurez-vous d\u0026rsquo;abord qu\u0026rsquo;elle est bien supportée par Peertube. Si c\u0026rsquo;est le cas, vous pouvez ouvrir un ticket pour en demander l\u0026rsquo;ajout.\nAjout de nouveau segment / utilisation dans le code Si vous travaillez sur une nouvelle fonctionnalité, et que vous avez besoin de nouveaux segments, créez les directement dans Weblate. La version anglaise est obligatoire, commencez par celle-ci.\nChaque segment est lié à une clé (par exemple use_chat). Choisissez une clé en anglais, suffisamment explicite, et en minuscule.\nSi vous avez besoin de tester vos localisations sans attendre la fusion venant de Weblate, vous pouvez modifier les fichiers languages/*.yml, mais évitez de les commit (pour minimiser le risque de conflits).\nUtiliser un segment dans le code front-end Avant d\u0026rsquo;utiliser une chaîne en front-end, il faut déclarer une nouvelle constante dans client/@types/global.d.ts. La constante doit :\n commencer par le préfixe \u0026ldquo;LOC_\u0026rdquo; utiliser la clé de la chaîne, en majuscule vous ne devez déclarer que son type, pas sa valeur  Par exemple, pour utiliser \u0026ldquo;use_chat\u0026rdquo;, vous devez déclarer :\ndeclare const LOC_USE_CHAT: string Le script build-client.js va lire ce fichier client/@types/global.d.ts, chercher pour de telles constantes, et charger leurs valeurs depuis le fichier de langue.\nVous pouvez maintenant utiliser peertubeHelpers.translate(LOC_USE_CHAT) dans votre code.\nUtiliser un segment dans le code back-end En théorie, les seules parties du code qui ont besoin de traductions sont les déclarations de paramètres et la génération de données standardisées (ActivityPub, RSS, \u0026hellip;). Ici on a besoin de récupérer les chaînes anglaises à partir des clés de traduction.\nNote : vous ne devriez jamais avoir besoin d\u0026rsquo;autres langues que l\u0026rsquo;anglais pour le code backend. Les traductions doivent se faire coté front-end.\nIl y a un module lib/loc.ts qui fourni une function loc(). Passez juste la clé pour récupérer la phrase anglaise : loc('diagnostic').\nTraduction de la documentation La traduction de la documentation est faite en utilisant le composant Weblate correspondant.\nIl y a un «shortcode Hugo» spécifique qui vous permet d\u0026rsquo;afficher une chaîne issue de l\u0026rsquo;application. Si vous voulez par exemple afficher le libellé du bouton «open_chat_new_window», vous pouvez utiliser le code suivant dans le fichier markdown de la documentation :\n{{% livechat_label open_chat_new_window %}} Vous pouvez également empêcher qu\u0026rsquo;une page entière ne soit traduite en ajoutant livechatnotranslation:true dans la section Yaml Font Matter du fichier :\n--- title: \u0026#34;Third party\u0026#34; description: \u0026#34;Displaying the livechat with 3rd party software.\u0026#34; weight: 20 chapter: false livechatnotranslation: true --- Ne traduisez jamais une chaîne dans le fichier livechat.en.pot, ce serait ignoré. À la place, éditez directement le fichier markdown.\nSi une chaîne contient un lien, vous pouvez le changer pour le lien correct dans la langue cible. Par exemple, si c\u0026rsquo;est un lien vers la documentation, vous pouvez ajouter le code langue dans l\u0026rsquo;url.\nCertaines chaînes sont des blocs de code. Ne les traduisez pas. Toutefois vous pouver traduire les commentaires, ou les paramètres si c\u0026rsquo;est pertinent.\nSi vous avez un doute, ne traduisez pas, et demandez plutôt quoi faire.\nL\u0026rsquo;outils utilisé pour gérer les traductions de la documentation peut avoir des comportements étranges. Quand j\u0026rsquo;ajoute une phrase qui ressemble à une phrase existante, il va parfois copier les traductions. Donc quand vous avez des traductions marquées comme «à vérifier», veuillez vous assurer qu\u0026rsquo;il n\u0026rsquo;a pas copié une traduction qui n\u0026rsquo;a rien à voir avec la version anglaise avant de valider.\nSi vous n\u0026rsquo;êtes pas sûr du contexte d\u0026rsquo;une chaîne de texte, vous pouvez vérifier l\u0026rsquo;emplacement de la chaîne source dans le panneau droit de Weblate, et ouvrir la page de documentation correspondante. Par exemple, pour une chaîne localisée dans le fichier support/documentation/content/en/documentation/user/streamers.md, l\u0026rsquo;url correspondante est https://livingston.frama.io/peertube-plugin-livechat/documentation/user/streamers/.\nRecommandations génériques Merci d\u0026rsquo;être inclusif⋅ve dans vos phrasés, et merci de respecter le code de conduite.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/admin/advanced/","title":"Usage avancé","tags":[],"description":"Quelques fonctionnalités avancées","content":"  Clients XMPP  Autoriser la connexion en utilisant des clients XMPP\n   Utiliser Matterbridge  Utiliser Matterbridge pour faire un pont vers d\u0026#39;autres tchats\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/admin/advanced/xmpp_clients/","title":"Clients XMPP","tags":[],"description":"Autoriser la connexion en utilisant des clients XMPP","content":"Ce module de tchat repose sur le protocole XMPP, aussi connu sous le nom de Jabber. Il est donc possible de se connecter aux tchats en utilisant des logiciels clients XMPP. Cela peut par exemple être utile pour faciliter les opérations de modération.\nPour la documentation utilisateur⋅rice associé à ces fonctionnalités, veuillez vous référer à la page de documentation utilisateur⋅rice.\nL\u0026rsquo;activation de ces fonctionnalités demande des changements de configuration sur le serveur, et sur les enregistrements DNS. Il n\u0026rsquo;est pas possible de les activer uniquement depuis l\u0026rsquo;interface de Peertube, et cela demande d\u0026rsquo;avoir quelques compétences basiques d\u0026rsquo;admin système.\n Connexion à votre compte Peertube Cette fonctionnalité n\u0026rsquo;est pas encore disponible, et viendra dans une prochaine version du plugin.\n Connexion en utilisant un compte XMPP externe Pour activer cette fonctionnalité, il va falloir paraméter votre serveur et vos enregistrements DNS, de sorte que les clients XMPP puissent trouver et accéder au serveur Prosody que ce plugin utilise en interne.\nParamètres du plugin Commencez par aller dans les paramètres du plugin livechat de votre instance, puis activez le paramètre «Autoriser les connexions aux salons via des comptes XMPP externes». En cochant celui-ci, de nouveaux champs apparaissent en dessous.\nTout d\u0026rsquo;abord, le champs «Port Prosody serveur vers serveur». Celui-ci prend par défaut la valeur 5269, qui est le port standard pour ce service. Vous pouvez toutefois changer pour un autre port, si celui-ci est déjà utilisé sur votre serveur.\nEnsuite, le champs «Interfaces réseau pour les connexions serveur vers serveur» vous permet d\u0026rsquo;indiquer sur quelles interfaces réseau le serveur doit écouter. La valeur par défaut «*, ::» indique d\u0026rsquo;écouter sur toutes les addresses IP. Vous pouvez changer ces valeurs, si vous souhaiter n\u0026rsquo;écouter que sur certaines IP. La syntaxe est expliquée à coté du champs.\nPour le champs «Dossiers des certificats», vous pouvez le laisser vide. Dans ce cas là, le plugin va générer automatiquement des certificats auto-signés. Il se pourrait que certains serveurs XMPP refusent de se connecter, cela dépendant de leur paramétrage. Dans ce cas, vous pouvez indiquer ici un chemin sur le serveur, dans lequel vous placerez des certificats à utiliser par le module. Charge à vous de les générer et de les renouveller. Voir plus loin pour une explication plus détaillée.\nPare-feu Vous devez ouvrir le port configuré (5269 par défaut) sur votre pare-feu.\nSi vous utilisez Docker pour votre Peertube, il faut modifier le fichier docker-compose.yml pour ouvrir le port 5269 du conteneur peertube au monde extérieur.\nDNS Vous devez ajouter des enregistrements DNS permettant aux serveurs distant de trouver les composants «room.votre_instance.tld» et «external.votre_instance.tld».\nLe plus simple pour cela est d\u0026rsquo;ajouter des enregistrements SRV pour les sous-domaines «room» et «external» :\n  nom de l\u0026rsquo;enregistrement : _xmpp-server._tcp.room.votre_instance.tld. (remplacez «votre_instance.tld» par la valeur adéquate)\n  TTL: 3600\n  class: IN\n  SRV: 0\n  priority: 0\n  weight: 5\n  port: 5269 (adaptez si vous avez changé le port)\n  target: votre_instance.tld. (remplacez par la valeur adéquate)\n  nom de l\u0026rsquo;enregistrement : _xmpp-server._tcp.external.votre_instance.tld. (remplacez «votre_instance.tld» par la valeur adéquate)\n  TTL: 3600\n  class: IN\n  SRV: 0\n  priority: 0\n  weight: 5\n  port: 5269 (adaptez si vous avez changé le port)\n  target: votre_instance.tld. (remplacez par la valeur adéquate)\n  Attention à bien conserver le point après «votre_instance.tld».\nEn utilisant la commande dig pour vérifier vos enregistrements, vous devriez obtenir un résultat similaire à celui-ci :\n$ dig +short _xmpp-server._tcp.room.videos.john-livingston.fr. SRV 0 5 5269 videos.john-livingston.fr. $ dig +short _xmpp-server._tcp.external.videos.john-livingston.fr. SRV 0 5 5269 videos.john-livingston.fr. Si vous n\u0026rsquo;utilisez pas le port standard 5269, vous devez ajouter un autre enregistrement SRV pour _xmpp-server._tcp.votre_instance.tld. (pareil que précédemment, mais en enlevant le préfixe room.). Bien sûr, vous pouvez l\u0026rsquo;ajouter même si vous utilisez le port standard. Cela fonctionnera également.\nUtilisation de certificats de confiance Les certificats auto-signés que le plugin utilise par défaut peuvent ne pas convenir à tous les serveurs distants. En effet, ceux-ci peuvent les refuser pour raison de sécurité.\nIl est possible d\u0026rsquo;utiliser des certificats validés par une autorité de certification. Cependant cela demande des connaissances d\u0026rsquo;administration système avancées. En effet, devant la multitude de cas possibles, il est impossible de documenter ici toutes les situations. La présente documentation va donc se contenter de vous expliquer le but à atteindre, et donner un example qui ne conviendra qu\u0026rsquo;à une situation «basique» (installation manuelle de Peertube, avec utilisation de letsencrypt). Si vous êtes dans une autre situation (installation Docker, certificats signés par une autre autorité, etc\u0026hellip;), il vous faudra adapter la démarche.\nPrincipe de base À vous de générer des certificats valides pour les domaines votre_instance.tld et room.votre_instance.tld. Vous pouvez utiliser n\u0026rsquo;importe quelle méthode supportées par Prosody.\nVous devez ensuite placer ces certificats dans un dossier qui sera accessible au user peertube, puis indiquer ce dossier dans le paramètre du plugin «Dossiers des certificats».\nSi vous voulez utiliser l\u0026rsquo;utilitaire ProsodyCtl (pour importer des certificats letsencrypts, générer des certificats, etc\u0026hellip;), cet utilitaire est disponible (une fois Peertube démarré) en utilisant la commande qui suit (en adaptant le chemin vers votre dossier data Peertube, et en remplaçant «xxx» par les arguments que vous souhaitez passer à prosodyctl) : sudo -u peertube /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun prosodyctl xxx\n Le plugin va vérifier une fois par jour si des fichiers ont été modifiés dans ce dossier, et recharger Prosody le cas échéant.\nMéthode dans le cas simple Nous supposons ici que votre installation de Peertube est «classique» (pas d\u0026rsquo;utilisation de Docker), et que les certificats sont générés par letsencrypt, en utilisant l\u0026rsquo;outils certbot.\nTout d\u0026rsquo;abord, on va devoir créer un certificat pour le sous-domain room.votre_instance.tld : c\u0026rsquo;est l\u0026rsquo;uri du composant MUC (salons de discussion XMPP). Même si les connections se font sur votre_instance.tld, il va nous falloir un certificat valide pour ce sous-domaine.\nCommencez donc par paramétrer une entrée DNS pour room.votre_instance.tld, qui pointe sur votre serveur. Vous pouvez tout à fait faire une entrée CNAME (ou une entrée A et une entrée AAAA).\nEnsuite, nous allons utiliser nginx (déjà installé pour votre Peertube) pour générer le certificat certbot. On va créer un nouveau site. Dans le fichier /etc/nginx/site-available/room.peertube, ajoutez :\nserver { listen 80; listen [::]:80; server_name room.votre_instance.tld; location /.well-known/acme-challenge/ { default_type \u0026#34;text/plain\u0026#34;; root /var/www/certbot; } location / { return 301 https://votre_instance.tld; } } Ensuite on active ce site :\nln -s /etc/nginx/sites-available/room.peertube /etc/nginx/sites-enabled/ systemc reload nginx On prépare ensuite le dossier dans lequel on va plus tard importer les certificats. On suppose ici que vous avez déjà le plugin actif. On va créer le dossier suivant (s\u0026rsquo;il n\u0026rsquo;existe pas déjà), avec le user peertube pour être sûr qu\u0026rsquo;il n\u0026rsquo;y a pas de problème de droits :\nsudo -u peertube mkdir /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosody/certs Il faut maintenant configurer ce dossier dans les paramètres du plugin, pour «Dossiers des certificats». C\u0026rsquo;est important de le faire avant la suite, sinon le script d\u0026rsquo;import des certificats va les placer au mauvais endroit.\nOn va configurer certbot pour qu\u0026rsquo;il importe les certificats générés dans le dossier de Prosody. On va pouvoir utiliser l\u0026rsquo;utilistaire ProsodyCtl packagé dans le plugin.\nNote : pour qu\u0026rsquo;il soit disponible, il faut que le plugin ai démarré au moins une fois.\nOn va créer un fichier /etc/letsencrypt/renewal-hooks/deploy/prosody.sh contenant :\n#!/bin/sh /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun prosodyctl \\  --root \\  --config /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosody/prosody.cfg.lua \\  cert import \\  room.votre_instance.tld votre_instance.tld /etc/letsencrypt/live Puis on demande à générer le certificat :\ncertbot -d room.videos.john-livingston.fr Si certbot vous propose plusieurs méthodes pour générer le certificat, choisissez «nginx».\nNormalement vous devriez maintenant trouver les certificats dans le dossier configuré.\nNote : la première fois que vous faites tout ça, il va falloir recharger Prosody. Le plus simple pour cela est de redémarrer Peertube.\nMéthode en cas d\u0026rsquo;utilisation de Docker Cette méthode marche avec le guide Docker officiel de Peertube.\nTout d\u0026rsquo;abord, assurez-vous de créer une entrée DNS pour room.your_instance.tld, qui pointe vers votre serveur. Vous pouvez utiliser une entrée CNAME (ou une entrée A et une entrée AAAA). Ceci est nécessaire pour que Let\u0026rsquo;s Encrypt valide le domaine pour la génération du certificat.\nEntrez le répertoire où se trouve votre fichier docker-compose.yml.\nOuvrez un shell dans le conteneur certbot :\ndocker exec -it certbot /bin/sh Lancez certbot :\ncertbot Une série d\u0026rsquo;invites vous sera présentée. Entrez 2 pour le type d\u0026rsquo;authentification :\nHow would you like to authenticate with the ACME CA? Select the appropriate number [1-2] then [enter] (press \u0026#39;c\u0026#39; to cancel): 2 Enter the domain name room.your_instance.tld:\nPlease enter the domain name(s) you would like on your certificate (comma and/or space separated) (Enter \u0026#39;c\u0026#39; to cancel): room.your_instance.tld Enter the directory where the PeerTube webserver serves requests for Let\u0026rsquo;s Encrypt, /var/www/certbot:\nInput the webroot for \u0026lt;room.your_instance.tld\u0026gt;: (Enter \u0026#39;c\u0026#39; to cancel): /var/www/certbot Vous devriez obtenir un résultat semblable à celui qui suit :\nSuccessfully received certificate. Certificate is saved at: /etc/letsencrypt/live/room.your_instance.tld/fullchain.pem Key is saved at: /etc/letsencrypt/live/room.your_instance.tld/privkey.pem Exécutez la commande suivante à l\u0026rsquo;intérieur du conteneur certbot pour donner un accès en lecture aux nouveaux certificats et clés privées au groupe peertube. Note : Cette commande rendra également les fichiers accessibles en lecture au groupe dont l\u0026rsquo;identifiant est 999 sur le système hôte. Vérifiez les groupes sur votre système pour évaluer le risque avant d\u0026rsquo;exécuter cette commande.\nchown -R root:999 /etc/letsencrypt/live; \\ chmod 750 /etc/letsencrypt/live; \\ chown -R root:999 /etc/letsencrypt/archive; \\ chmod 750 /etc/letsencrypt/archive; \\ find /etc/letsencrypt/ -name \u0026#39;privkey*\u0026#39; -exec chmod 0640 {} \\; Sortez du conteneur certbot :\nexit Modifiez votre fichier docker-compose.yml, en changeant la ligne entrypoint sous le service certbot par ce qui suit. C\u0026rsquo;est la même chose que ci-dessus, mais elle doit être exécutée automatiquement après chaque renouvellement de certificat.\nentrypoint: /bin/sh -c \u0026#34;trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; chown -R root:999 /etc/letsencrypt/live; chmod 750 /etc/letsencrypt/live; chown -R root:999 /etc/letsencrypt/archive; chmod 750 /etc/letsencrypt/archive; find /etc/letsencrypt/ -name \u0026#39;privkey*\u0026#39; -exec chmod 0640 {} +; sleep 12h \u0026amp; wait $${!}; done;\u0026#34; En continuant à modifier docker-compose.yml, ajoutez le volume certbot dans le conteneur peertube. Il devrait ressembler à ceci :\nvolumes: - ./docker-volume/certbot/conf:/etc/letsencrypt Redémarrez vos services :\ndocker-compose down; docker-comopse up -d Dans les paramètres du plugin livechat à partir des paramètres d\u0026rsquo;administration de PeerTube, définissez le répertoire des certificats comme suit :\n/etc/letsencrypt/live Sauvegardez les paramètres du plugin et vérifiez que Prosody peut voir les certificats :\ndocker-compose exec -u peertube \\  peertube \\  /data/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun \\  prosodyctl \\  --config /data/plugins/data/peertube-plugin-livechat/prosody/prosody.cfg.lua \\  check certs En cas de problème Si cela ne fonctionne pas, vous pouvez utiliser l\u0026rsquo;outils de diagnostic (un bouton se trouve en haut de la page des paramètres du plugin), et notamment regarder ce que dit la section «Prosody check».\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/admin/","title":"Documentation administrateur⋅rice","tags":[],"description":"Administration du Plugin Peertube Livechat","content":"  Paramètres  Paramètres du Plugin Peertube Livechat\n   Authentification externe  Paramètres du Plugin Peertube Livechat - Authentification Externe\n   Usage avancé  Quelques fonctionnalités avancées\n  Clients XMPP  Autoriser la connexion en utilisant des clients XMPP\n   Utiliser Matterbridge  Utiliser Matterbridge pour faire un pont vers d\u0026#39;autres tchats\n    "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contributing/feedback/","title":"Donnez vos retours","tags":[],"description":"Donnez vos retours","content":"Vous n\u0026rsquo;avez pas besoin de coder pour commencer à contribuer à ce plugin ! Les autres formes de contributions sont également précieuses, parmis lesquelles : vous pouvez tester le plugin et remonter les bugs que vous rencontrez, partager vos retours d\u0026rsquo;expérience, proposer des fonctionnalités qui vous intéressent, remonter vos remarques sur l\u0026rsquo;interface, le design, etc.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/bot/commands/","title":"Commandes","tags":[],"description":"Le bot peut répondre à différentes commandes.","content":"SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nVous pouvez paramétrer différentes commandes.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contributing/develop/","title":"Développer","tags":[],"description":"Développer","content":"Toujours annoncer les fonctionnalités sur lesquelles vous voulez travailler en créant un ticket ou en commentant un ticket existant, avant de commencer à travailler dessus.Et annoncez clairement à la communauté que vous commencez à travailler dessus. Ceci afin d\u0026rsquo;éviter que plusieurs personnes travaillent sur la même chose et entrent en conflit.\nLes Pull Request sont à faire sur la branche main.\nJusqu\u0026rsquo;à mars 2023, il fallait contribuer sur la branche develop. Cette procédure est désormais obsolète.\n Pré-requis pour compiler le plugin Il est hautement recommandé d\u0026rsquo;être familier avec les concepts suivants :\n Git NodeJS NPM Typescript  Pour construire le module, vous avez besoin d\u0026rsquo;avoir installé les paquets suivants :\n git npm (\u0026gt;=8.x) nodejs (\u0026gt;=14.x) build-essential coreutils wget reuse  Veuillez noter que ce plugin a besoin d\u0026rsquo;une AppImage du serveur XMPP Prosody. Cette AppImage est fournie par le project Prosody AppImage. Le script build-prosody.sh télécharge les binaires attachés à ce dépôt distant, et vérifie que les sommes de contrôles sha256 sont correctes.\nDévelopper Clonez le dépôt, construisez le plugin, et créez votre branche de fonctionnalité :\n# Cloner le dépot. N\u0026#39;oubliez pas le --recursive, pour clôner les sous-modules. git clone https://github.com/JohnXLivingston/peertube-plugin-livechat.git --recursive cd peertube-plugin-livechat # Installer les dépendances NPM et compiler le plugin pour la première fois : npm install # Compiler le plugin après une modification : npm run build # Si vous avez un fork du dépot, ajoutez le en remote (exemple) : git remote add me git@github.com:MON_COMPTE_GITHUB/peertube-plugin-livechat.git # Créez une branche locale pour vos développements et placez vous dessus (exemple) : git checkout mon_developpement # NB: si un ticket y est associé, utilisé le nom fix_1234 (où 1234 est le numéro du ticket) # Pour proposer vos modifications, poussez votre branche sur votre dépot (exemple) : git push --set-upstream me mon_developpement # Rendez-vous ensuite sur votre dépot github avec votre navigateur web pour proposer la Pull Request (voir les instructions complémentaires ci-dessous) Quand vous êtes prêt⋅e à montrer votre code pour avoir un retour, soumettez une Pull Request draft. Quand vous êtes prêt⋅e pour une relecture de code avant merge, soumettez une Pull Request. Dans tous les cas, merci de lier votre Pull Request au ticket concerné en utilisant la syntax de GitHub : «fixes #issue_number».\nLe code du front-end est dans le dossier client. Le code backend dans server. Il y a du code partagé entre les deux dans shared.\nPour les instructions génériques concernant le développement de plugins (building, installation, \u0026hellip;), merci de vous référer à la documentation Peertube.\nVous pouvez builder le plugin avec des infos de debug supplémentaires en utilisant :\nNODE_ENV=dev npm run build Ce plugin est conforme à la norme REUSE : il utilise des en-têtes SPDX pour identifier les informations de licence de son code source. Plus d\u0026rsquo;informations sur le site REUSE. Vous pouvez utiliser l\u0026rsquo;outil en ligne de commande reuse pour vous aider à mettre à jour les en-têtes. La commande npm run lint utilisera la commande reuse pour vérifier la conformité. N\u0026rsquo;oubliez pas d\u0026rsquo;ajouter vos informations de copyright dans les en-têtes SPDX lorsque vous modifiez du code.\nESBuild versus Typescript Ce plugin utilise ESBuild pour compiler le code front-end, comme le plugin peertube-plugin-quickstart officiel. ESBuild peut gérer Typescript, mais ne vérifie pas les types (voir la documentation ESBuild). C\u0026rsquo;est pourquoi on compile d\u0026rsquo;abord Typescript avec l\u0026rsquo;option -noEmit, juste pour vérifier les types (check:client:ts dans le fichier package.json). Ensuite, si tout est ok, on lance ESBuild pour générer le javascript compilé.\nDebug Mode Il existe un mode de debug pour le plugin, qui va raccourcir le délais de certaines actions. Par exemple, il va faire tourner les journaux toutes les deux minutes, au lieu de tous les jours. Cela permet de tester plus facilement certaines actions, pour lesquelles il faudrait normalement attendre des heures ou des jours.\nPour activer ce mode, il suffit de créer un fichier /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/debug_mode (en adaptant /var/www/peertube/storage/ à votre installation le cas échéant).\nLa simple existance de ce fichier suffit à déclencher le mode debug. Pour être sûr qu\u0026rsquo;il est pris en compte, vous pouvez redémarrer votre instance Peertube.\nCe fichier peut également contenir du JSON qui pourra activer d\u0026rsquo;autres options. Pour en avoir la liste, vous pouvez regarder le code de server/lib/debug.ts. Redémarrez Peertube après chaque modification de son contenu.\nN\u0026rsquo;activer jamais ce mode sur un serveur de production, ni même sur un serveur public. Cela pourrait poser des problèmes de sécurité.\n Redémarrer Prosody Pour redémarrer Prosody quand le mode debug est activé, vous pouvez appeler l\u0026rsquo;API http://votre_instance.tld/plugins/livechat/router/api/restart_prosody. Cet appel n\u0026rsquo;a pas besoin d\u0026rsquo;authentification. Il peut se faire depuis une ligne de commande, par exemple avec `curl http://votre_instance.tld/plugins/livechat/router/api/restart_prosody.\ndebugger Prosody Il est possible de connecter l\u0026rsquo;AppImage Prosody à un debugger distant en utilisant MobDebug.\nPour cela, placer MobDebug dans un dossier accessible par le user peertube. Ensuite, ajouter cela dans le fichier debug_mode du plugin :\n{ \u0026#34;debug_prosody\u0026#34;: { \u0026#34;debugger_path\u0026#34;: \u0026#34;/le_chemin_vers_mobdebug/src\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;localhost\u0026#34;, \u0026#34;port\u0026#34;: \u0026#34;8172\u0026#34; } } host et port sont optionnels. debugger_path doit pointer vers le dossier où se trouve le fichier .lua de MobDebug.\nRedémarrer Peertube.\nLancer votre serveur de debug.\nPour que Prosody se connecte au debugger, appelez l\u0026rsquo;API http://votre_instance.tld/plugins/livechat/router/api/restart_prosody?debugger=true. Cet appel n\u0026rsquo;a pas besoin d\u0026rsquo;authentification. Il peut se faire depuis une ligne de commande, par exemple avec curl http://votre_instance.tld/plugins/livechat/router/api/restart_prosody?debugger=true. Vous pouvez même configurer votre serveur de debuggage pour lancer cette commande automatiquement.\nProsody va alors redémarrer en se connectant au debugger.\nEnvironnement de développement rapide via Docker Un tutoriel est disponible sur le forum Peertube pour expliquer comment monter rapidement un environnement de développement en utilisant Docker.\nUn dépot a été crée sur la base de ce tutoriel : pt-plugin-dev.\nNote : pour une raison obscure, Prosody n\u0026rsquo;arrive pas à résoudre les adresses DNS des conteneurs quand la librairie lua-unbound est utilisée. Pour contourner cela, il y a un «dirty hack» : il suffit de créer une fichier /data/plugins/data/peertube-plugin-livechat/no_lua_unbound dans vos docker-volumes, puis de les redémarrer.\nReconstruire et installer rapidement le plugin Lorsque vous faites des modifications, vous n\u0026rsquo;avez pas besoin de reconstruire le projet complet, et de réinstaller le plugin sur votre environnement de développement. Vous pouvez ne construire que la partie modifiée (par exemple, si vous n\u0026rsquo;avez modifié que les fichiers clients : npm run build:client). Vous trouverez la liste des scripts de construction disponibles dans le fichier package.json.\nLorsque le plugin est déjà installé sur votre instance de développement, et que vous n\u0026rsquo;avez modifié aucune dépendance, vous pouvez installer rapidement votre travail en suivant les étapes suivantes :\n reconstruire les parties nécessaires du plugin (client, styles, \u0026hellip;), écraser le contenu de data/plugins/node_modules/peertube-plugin-livechat/dist/ de votre instance de développement par le contenu du dossier dist du plugin, changer récursivement le propriétaire des fichiers plugins/node_modules/peertube-plugin-livechat/dist/ pour votre utilisateur peertube, Redémarrez votre instance.  Tests de performance Le dépôt livechat-perf-test contient quelques outils pour effectuer des tests de performance. Ils peuvent être utilisés pour évaluer les améliorations du code source, ou trouver les goulots d\u0026rsquo;étranglement.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/obs/","title":"OBS","tags":[],"description":"Documentation pour diffuser le contenu du tchat à l&#39;aide d&#39;OBS.","content":"OBS est un logiciel populaire de diffusion en direct, libre et open source, avec des capacités avancées pour vos diffusions. Dans la présente page, vous allez trouver quelques conseils pour gérer les tchats de vos directs en utilisant OBS.\nOverlay OBS Vous pouvez facilement inclure le tchat dans votre flux vidéo.\nVous pouvez utiliser la fonction «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » pour générer une URL vers votre tchat. Le bouton devrait se trouver près du tchat si vous êtes le⋅a propriétaire de la vidéo (à moins qu\u0026rsquo;il n\u0026rsquo;ait été désactivé par les administrateur⋅rices de votre serveur).\nCochez la case à cocher «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » dans la modale.\nUtilisez alors ce lien en tant que «source navigateur web» dans OBS.\nVous pouvez utiliser l\u0026rsquo;option «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » pour obtenir un fond transparent dans OBS. Si vous souhaitez personnaliser la transparence de l\u0026rsquo;arrière-plan, vous pouvez ajouter ce CSS dans les paramètres de la source navigateur dans OBS :\n:root { --livechat-transparent: rgba(255 255 255 / 90%) !important; } Dans l\u0026rsquo;extrait CSS précédent, vous pouvez bien sûr changer la couleur ou la transparence, en adaptant les valeurs de couleur.\nRemarque : vous pouvez personnaliser les couleurs. Ce n\u0026rsquo;est pas encore documenté, mais vous pouvez essayer ceci : dans la fenêtre modale, cochez «utiliser les couleurs actuelles du thème», puis essayez de modifier manuellement les valeurs de couleur dans l\u0026rsquo;URL. Vous devez utiliser des valeurs de couleur CSS valides, et elles doivent être correctement encodées dans l\u0026rsquo;URL.\nDock OBS Cette fonctionnalité arrive avec le plugin livechat version 10.1.0.\n Cette fonction peut être désactivée par les administrateur⋅rices de l\u0026rsquo;instance.\n Vous pouvez utiliser les \u0026ldquo;Dock internet personnalisés\u0026rdquo; d\u0026rsquo;OBS pour intégrer le tchat dans votre OBS pendant le direct. Le plugin livechat offre la possibilité de créer un jeton à long terme qui peut vous identifier automatiquement pour rejoindre le tchat, de sorte que vous n\u0026rsquo;ayez pas à entrer votre mot de passe dans OBS.\nPour ce faire, il suffit d\u0026rsquo;utiliser la fonctionnalité \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; et d\u0026rsquo;ouvrir l\u0026rsquo;onglet \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;. À partir de là, vous pouvez créer un nouveau jeton en utilisant le bouton \u0026ldquo;+\u0026rdquo;.\nEnsuite, copiez l\u0026rsquo;URL et utilisez le menu \u0026ldquo;Docks / Docks internet personnalisés\u0026rdquo; de votre OBS pour ajouter un dock avec cette URL.\nUne fois que vous l\u0026rsquo;aurez fait, vous aurez un nouveau dock connecté au tchat avec votre compte.\nLes jetons sont valables pour rejoindre n\u0026rsquo;importe quel salon de discussion. Vous n\u0026rsquo;avez pas besoin de générer des tokens séparés pour chacun de vos salons. Vous pouvez également personnaliser le pseudo qui sera utilisé en changeant le paramètre n dans l\u0026rsquo;url.\n Ne communiquez ces liens à personne, car ils leur permettraient de se connecter en tant que vous-même.\nSi un jeton est compromis ou n\u0026rsquo;est plus nécessaire, vous pouvez le révoquer.\nCes jetons peuvent être utilisés à d\u0026rsquo;autres fins, comme la connexion à votre compte avec des robots ou des clients XMPP. Cette fonctionnalité n\u0026rsquo;est pas encore documentée et n\u0026rsquo;est pas officiellement supportée. Il convient donc de l\u0026rsquo;utiliser avec précaution.\n Mélanger plusieurs tchats dans votre flux en direct Vous pouvez utiliser l\u0026rsquo;extension social_stream browser extension pour mélanger plusieurs sources de tchat (Peertube, Twitch, Youtube, Facebook, \u0026hellip;) et inclure leurs contenus dans votre flux en direct. La compatibilité avec ce plugin a été ajoutée dans les versions récentes.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contributing/document/","title":"Documentation","tags":[],"description":"Documenter le plugin, ou traduire la documentation.","content":"Généralités Toujours vous annoncer avant de commencer à travailler (en créant un ticket ou en commentant un ticket existant). Ceci afin d\u0026rsquo;éviter que plusieurs personnes travaillent sur la même chose et entrent en conflit.\nLe travail de documentation se fait sur la branche main.\nLe code source de la documentation se trouve dans le dossier support/documentation/content du dépot de code.\nLa documentation est générée via l\u0026rsquo;outils Hugo. Celui-ci doit être installé sur votre machine pour pouvoir prévisualiser la documentation.\nLe thème utilisé est hugo-theme-learn. Il est recommandé d\u0026rsquo;en lire la documentation avant de commencer.\nQuand une version du plugin est publiée, ou quand la documentation est mise à jour, les mainteneur⋅euses du plugin fusionnerons la branche main dans la branche documentation. Ce qui aura pour effet de déclencher les pipelines github et gitlab pour mettre à jour les versions publiées.\nTraductions La langue principale est l\u0026rsquo;anglais (code en).\nLe dossier support/documentation/content/enne contient que les fichiers de documentation en anglais.\nLa documentation est traduite en utilisant Weblate (voir la documentation sur la traduction). Pour cela, on utilise l\u0026rsquo;outils po4a, comme nous le verrons plus loin dans cette page.\nAjout d\u0026rsquo;une nouvelle langue Dans le fichier support/documentation/config.toml, inspirez vous de la section [Languages.fr] pour déclarer la nouvelle langue.\nSi les traductions ne sont pas complètes, ce n\u0026rsquo;est pas grave, la version anglaise sera utilisée pour les chaînes manquantes.\nPrévisualiser Pour prévisualiser vos modification, il suffit de lancer :\nhugo serve -s support/documentation/ Puis d\u0026rsquo;ouvrir votre navigateur à l\u0026rsquo;adresse http://localhost:1313/peertube-plugin-livechat/. Cette page se raffraichira automatiquement à chaque modification.\nMettre à jour les fichiers de localisation et générer les traductions de la documentation Pour l\u0026rsquo;instant, vous n\u0026rsquo;avez que la version anglaise. Pour mettre à jour les chaînes et générer les traductions, vous devez lancer le script doc-translate.sh.\nPour cela, assurez vous d\u0026rsquo;avoir po4a (version \u0026gt;= 0.69) installé sur votre ordinateur.\nCertaines distributions linux (comme Debian Bullseye par exemple) ont une version trop ancienne de po4a. Veillez à installer une version compatible. Si vous utilisez Debian Bullseye par exemple, vous pouvez télécharger le fichier Bookworm po4a.deb depuis https://packages.debian.org, et l\u0026rsquo;installer manuellement.\n Pour gérer les traductions, il suffit de faire :\nnpm run doc:translate Vous pouvez ensuite prévisualiser le résultat en utilisant hugo serve -s support/documentation/, et en utilisant le sélecteur de langue.\nÉcrire la documentation Éditez seulement les fichiers anglais dans support/documentation/content/en.\nEnsuite, avant de commiter, lancez toujours npm run doc:translate, afin que les changements dans les fichiers anglais puissent être propagés dans le fichier support/documentation/po/livechat.en.pot.\nVous pouvez utiliser le code court livechat_label pour utiliser des chaînes de l\u0026rsquo;application. Voir ici : Traduction de la documentation.\nIl est possible d\u0026rsquo;empêcher un fichier d\u0026rsquo;être traduit, en utilisant livechatnotranslation : true dans la section Yaml Font Matter. Voir ici : Traduction de la documentation.\nVeuillez utiliser l\u0026rsquo;option livechatnotranslation pour la documentation technique. Nous ne voulons pas traduire la documentation technique, afin d\u0026rsquo;éviter les problèmes liés à une mauvaise traduction.\nPour faciliter le travail des traducteur⋅rices, évitez de faire des paragraphes trop longs.\nPour l\u0026rsquo;instant il n\u0026rsquo;est pas possible d\u0026rsquo;utiliser des tableaux Markdown : les outils de translation ne savent pas les gérer.\nIl peut y avoir des liens vers la documentation ailleurs sur le web. Essayez de ne pas changer les urls des pages de documentation. Ou au moins, mettez des liens vers les nouvelles pages dans les anciennes urls.\n Que faire si je ne peux pas utiliser hugo et/ou po4a ? Il suffit d\u0026rsquo;éditer les fichiers markdown en anglais, et de spécifier que vous ne pouvez pas compiler les traductions lorsque vous faites votre Pull Request.\nPublication La publication de la documentation est automatique, dès que les modifications sont fusionnées dans la branche documentation.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/installation/upgrade_before_6.0.0/","title":"Mise à jour depuis une version antérieure à 6.0.0","tags":[],"description":"Notes importantes pour la mise à jour depuis une ancienne version du plugin.","content":"IMPORTANT NOTE Depuis la version v6.0.0, ce plugin ne nécessite plus l\u0026rsquo;installation de Prosody.\nSi vous utilisiez ce plugin avant, et que vous aviez installé Prosody manuellement, vous pouvez le désinstaller en tout sécurité.\nSi vous utilisiez l\u0026rsquo;image docker spéciale de Peertube (qui incluais Prosody), vous pouvez basculer sur l\u0026rsquo;image officielle de Peertube.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/data/","title":"Plugin storage","tags":[],"description":"Data files and folders used on the server","content":"The livechat plugin stores some data on the server, in the /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/ folder. This page describes these data.\nprosody The prosody folder is used by the Prosody XMPP server to store its data and logs.\nprosodyAppImage This plugin uses the Prosoxy XMPP server in background. This server code is embedded as an AppImage.\nWhen the plugin starts, it deflate this AppImage in the prosodyAppImage folder.\nserverInfos To handle federation between Peertube instances, the plugin needs to store some information concerning remote instances (available protocols, \u0026hellip;).\nThe plugin stores these data in the serverInfos/instance_uri folder (where instance_uri is replaced by the instance uri).\nIn each instance\u0026rsquo;s folder, there can be these files:\n last-update: json file containing the timestamp of the last information update. So we can avoid refreshing too often. ws-s2s: if the server allows XMPP S2S Websocket connections, here are the endpoint information s2s: if the server allows direct XMPP S2S connections, here are the port and url information  videoInfos To handle federation the plugin needs to store some information about remote videos.\nSo, each time we open a new remote chat, a file videoInfos/remote/instance_uri/video_uuid.json is created (where instance_uri is the origin instance uri, and video_uuid is the video uuid).\nThis JSON files contain some data about the remote chat (is it enabled, are anonymous users authorized, which protocol can we use, \u0026hellip;). These data can then be read by the Prosody server to connect to the remote chat.\nMoreover, when the current instance builds such data for local videos, it stores it in videoInfos/local/video_uuid.json (where video_uuid is the video uuid).\nchannelConfigurationOptions The channelConfigurationOptions folder contains JSON files describing channels advanced configuration. Filenames are like 1.json where 1 is the channel id. The content of the files are similar to the content sent by the front-end when saving these configuration.\nroom-channel/muc_domain.json Some parts of the plugin need a quick way to get the channel id from the room Jabber ID, or the all room Jabber ID from a channel id. We won\u0026rsquo;t use SQL queries, because we only want such information for video that have a chatroom.\nSo we will store in the room-channel/muc_domain.json file (where muc_domain is the current MUC domain, something like room.instance.tld) a JSON object representing these relations).\nIn the JSON object, keys are the channel ID (as string), values are arrays of strings representing the rooms JIDs local part (without the MUC domain).\nWhen a chatroom is created, the corresponding entry will be added.\nHere is a sample file:\n{ \u0026#34;1\u0026#34;: [ \u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; ] } This file is loaded at the plugin startup into an object that can manipulate these data.\nSo we can easily list all rooms for a given channel id or get the channel id for a room JID (Jabber ID).\nNote: we include the MUC domain (room.instance.tld) in the filename in case the instance domain changes. In such case, existing rooms could get lost, and we want a way to ignore them to avoid gettings errors.\nNote: there could be some inconsistencies, when video or rooms are deleted. The code must take this into account, and always double check room or channel existence. There will be some cleaning batch, to delete deprecated files.\nbot/muc_domain The bot/muc_domain (where muc_domain is the current MUC domain) folder contains configuration files that are read by the moderation bot. This bot uses the xmppjs-chat-bot package.\nNote: we include the MUC domain (room.instance.tld) in the dirname in case the instance domain changes. In such case, existing rooms could get lost, and we want a way to ignore them to avoid gettings errors.\nbot/muc_domain/moderation.json The bot/muc_domain/moderation.json file contains the moderation bot global configuration. This bot uses the xmppjs-chat-bot package, see it\u0026rsquo;s README file for more information.\nNote: this includes the bot username and password. Don\u0026rsquo;t let it leak.\nbot/muc_domain/rooms The bot/muc_domain/rooms folder contains room configuration files. See the xmppjs-chat-bot package help for more information.\nemojis/channel The emojis/channel folder contains custom emojis definitions for channels.\nFor example, the channel 1 will contain:\n emojis/channel/1/definition.json: the JSON file containing the emojis definitions emojis/channel/1/files/42.png: N image files (png, jpg, \u0026hellip;), using numbers as filenames.  tokens The tokens folder contains long term token to connect to the chat. See the LivechatProsodyAuth class for more information.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/admin/advanced/matterbridge/","title":"Utiliser Matterbridge","tags":[],"description":"Utiliser Matterbridge pour faire un pont vers d&#39;autres tchats","content":"Ce qui suit est basé sur un tutoriel pour utiliser Matterbridge avec le plugin : Matterbridge + Peertube\nPré-requis  Plugin PeerTube livechat version 3.2.0 ou supérieure. Matterbridge version 1.22.4 ou supérieure.  La solution la plus simple consiste à faire tourner l\u0026rsquo;instance PeerTube et Matterbridge sur le même serveur.\nConnexions internes uniquement (version simple) Vous devez activer `SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only ` dans les paramètres du plugin livechat.\nCela permettra aux clients XMPP de l\u0026rsquo;hôte local de se connecter au serveur XMPP Prosody.\nVous devrez peut-être ajouter une ligne à votre /etc/hosts :\n127.0.0.1 anon.example.org room.example.org Remplacez example.org par le nom de domaine de votre instance. Vous pouvez ensuite poursuivre avec la configuration de Matterbridge ci-dessous.\nAutoriser les connexions externes (avancé) Par défaut, le serveur interne XMPP Prosody n\u0026rsquo;écoute que sur localhost (127.0.0.1).\nSur les versions de livechat \u0026gt;= 10.1.0, un nouvel appel d\u0026rsquo;option interfaces client vers serveur a été ajouté pour permettre de changer cela.\nCela permet d\u0026rsquo;ajouter une liste d\u0026rsquo;adresses IP sur lesquelles écouter, séparées par des virgules (les espaces seront supprimés).\nVous pouvez également utiliser * pour écouter sur toutes les interfaces IPv4, et :: pour toutes les interfaces IPv6. Cela permet un accès externe à l\u0026rsquo;interface client-serveur.\nEnsuite, vous devez ouvrir le port C2S (par défaut 52822, mais vérifiez les paramètres du plugin pour obtenir la valeur actuelle) dans votre pare-feu afin qu\u0026rsquo;il soit accessible depuis l\u0026rsquo;internet. Si vous ne souhaitez pas utiliser les connexions C2S pour autre chose que votre service Matterbridge, vous devriez restreindre l\u0026rsquo;accès à ce port à l\u0026rsquo;IP de votre serveur Matterbridge.\nVous devez également ajouter des enregistrements DNS (A et AAAA) pour anon.example.org et room.example.org (remplacez example.org par votre nom de domaine actuel).\nSi vous utilisez un port autre que 5222 (port standard XMPP), vous devez également définir l\u0026rsquo;enregistrement SRV xmpp-client sur le port correct.\nConfigurer Matterbridge Dans la version 1.22.4, Matterbridge a ajouté la prise en charge des connexions anonymes XMPP, nécessaires pour se connecter au serveur Prosody intégré.\nAinsi, dans le fichier de configuration TOML, il faut mettre :\n[xmpp.mypeertube] Anonymous=true Server=\u0026#34;anon.example.org:52822\u0026#34; Muc=\u0026#34;room.example.org\u0026#34; Nick=\u0026#34;Matterbridge\u0026#34; RemoteNickFormat=\u0026#34;[{PROTOCOL}] \u0026lt;{NICK}\u0026gt; \u0026#34; NoTLS=true  Remplacez example.org par le nom de domaine de votre instance. Remplacez 52822 par le port actuel si vous l\u0026rsquo;avez changé. mypeertube peut être remplacé par un autre nom. L\u0026rsquo;utilisation de peertube comme pseudonyme (Nick) fournira l\u0026rsquo;icône PeerTube pour les messages superposés, ce qui peut également être fait avec la modification de la configuration de la superposition. Le paramètre NoTLS=true permet de se connecter à un serveur avec des certificats auto-signés.  Vous pouvez désormais ajouter ce compte aux passerelles et faire le pont des canaux de tchat.\nCette documentation utilise un compte anonyme pour connecter la passerelle au tchat. Mais depuis la version 10.1.0 de livechat, il existe une nouvelle façon de générer un jeton d\u0026rsquo;authentification à long terme, qui permet de se connecter en utilisant son compte. Ceci est utilisé pour les docks OBS. L\u0026rsquo;utilisation de cette fonctionnalité à d\u0026rsquo;autres fins n\u0026rsquo;est pas documentée et n\u0026rsquo;est pas encore officiellement supportée. Si vous voulez l\u0026rsquo;utiliser quand même, vous pouvez demander un jeton en appelant le point de terminaison /plugins/livechat/router/api/auth/tokens. Pour obtenir les en-têtes et le corps de requête nécessaires, regardez simplement ce qui se passe lorsque vous générez un nouveau jeton pour les docks OBS.\n "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/xmpp_clients/","title":"Clients XMPP","tags":[],"description":"Se connecter au tchat avec un client XMPP","content":"Ce module de tchat repose sur le protocole XMPP, aussi connu sous le nom de Jabber. Il est donc possible de se connecter aux tchats en utilisant des logiciels clients XMPP. Cela peut par exemple être utile pour faciliter les opérations de modération.\nLes fonctions décrites dans cette page doivent être activées et configurées par les administrateur⋅rices de votre instance Peertube. Il se peut donc que vous n\u0026rsquo;y ayez pas accès.\n Connexion à votre compte Peertube Cette fonctionnalité n\u0026rsquo;est pas encore disponible, et viendra dans une prochaine version du plugin.\n Connexion en utilisant un compte XMPP externe Si cette fonctionnalité est activée sur votre instance, vous pouvez vous connecter aux tchats Peertube en utilisant un compte XMPP quelconque.\nPour obtenir l\u0026rsquo;adresse du salon à rejoindre, vous pouvez utiliser la fenêtre de «partage» du tchat, dont le bouton est situé au dessus du tchat :\nPar défaut, le bouton de partage n\u0026rsquo;est visible que pour le ou la propriétaire de la vidéo, et les admins/modérateur⋅rices de l\u0026rsquo;instance. Toutefois, les admins peuvent décider d\u0026rsquo;afficher ce bouton pour tout le monde.\n Ensuite, dans la modale qui s\u0026rsquo;affiche, choississez «Connexion avec un client XMPP» :\nIl vous suffit ensuite, soit de cliquer sur «ouvrir», soit de copier/coller l\u0026rsquo;adresse du salon dans votre client XMPP (en utilisant la fonctionnalité «rejoindre un salon»).\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contributing/","title":"Contribuer","tags":[],"description":"Contribuer","content":"Intéressé⋅e pour contribuer ? Super !\n Code de conduite  Convention de Code de conduite Contributeur⋅rices\n   Traduction  Traduire le plugin\n   Donnez vos retours  Donnez vos retours\n   Développer  Développer\n   Documentation  Documenter le plugin, ou traduire la documentation.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/slow_mode/","title":"MUC Slow mode","tags":[],"description":"MUC Slow mode XEP","content":"The livechat plugin includes a \u0026ldquo;slow mode\u0026rdquo; feature, to rate limit the number of messages that a user can send to a given MUC room. At time of writing, there were no XEP to describe such feature. Please find below a XEP draft, that will be submitted for review.\nWork In Progress, this page is not done yet. For an updated version of this document, you can check the draft XEP XMP file.\n XEP: MUC Slow Mode Abstract: This specification describes a way to rate limit messages a single user can send to a MUC room, from the room configuration to the server and client handling of such a feature.\nAuthor: John Livingston\n1. Introduction There are some contexts in which you want to be able to rate limit MUC messages. This could have multiple motivations: avoid flooding, garantee a better readability of the room when there are hundreds of active users, \u0026hellip;\nThis specification propose a new option to MUC rooms, allowing room owners to fix a duration that users MUST wait between two messages. We will also specify how the server MUST reject messages send too quickly, and how clients SHOULD handle this feature (by preventing users to send messages without waiting the delay to be over).\n2. Terminology Clients: the client software used by end-users to join MUC rooms.\nModerator: A room role that is usually associated with room admins but that can be granted to non-admins.\nMUC: The multi-user chat protocol for text-based conferencing.\nParticipant: An occupant who does not have admin status; in a moderated room, a participant is further defined as having voice (in contrast to a visitor). A participant has a role of \u0026ldquo;participant\u0026rdquo;.\nRole: A temporary position or privilege level within a room, distinct from a user\u0026rsquo;s long-lived affiliation with the room; the possible roles are \u0026ldquo;moderator\u0026rdquo;, \u0026ldquo;participant\u0026rdquo;, and \u0026ldquo;visitor\u0026rdquo; (it is also possible to have no defined role). A role lasts only for the duration of an occupant\u0026rsquo;s visit to a room. See XEP-0045.\nRoom administrator: A user empowered by the room owner to perform administrative functions such as banning users; however, a room administrator is not allowed to change the room configuration or to destroy the room. An admin has an affiliation of \u0026ldquo;admin\u0026rdquo;. See XEP-0045.\nRoom owner: users that have special access to a room, and that can edit room configuration. See XEP-0045 - Owner Use Cases.\nService Discovery Extensions: XEP-0128: Service Discovery Extensions.\nSlow Mode: feature allowing to rate limit user messages in a MUC room.\nSlow Mode duration: when the Slow Mode feature is active, specifies the duration, in seconds, users must wait between two text messages.\n3. Requirements This document addresses the following requirements:\n How to allow room owners to enable and configure the feature by editing the MUC room discovery information. How to enable and configure the feature without allowing room owners to change the configuration. How the server MUST reject messages that does not respect the parameters. How clients SHOULD handle rooms with such feature enabled.  4. MUC configuration 4.1 Activating Slow Mode in the MUC Room configuration Your implementation MAY allow the Slow Mode feature to be set room by room, by its owners.\nIf room owners can configure the Slow Mode feature, the server MUST add a muc#roomconfig_slow_mode_duration field in the room configuration form.\nThis field MUST have its type equal to text-single.\nThis field SHOULD use Data Forms Validation, having its datatype equal to xs:integer.\nThe value of the field MUST be a positive integer, so you MUST add a range validation, as described in RFC-0122.\n0 value means that the slow mode is disabled for this room. Any positive value is the duration, in seconds, users must wait between two messages.\nHere is an example of response the server could send when a client is querying room configuration form:\n\u0026lt;iq from=\u0026#39;coven@chat.shakespeare.lit\u0026#39; id=\u0026#39;config1\u0026#39; to=\u0026#39;crone1@shakespeare.lit/desktop\u0026#39; type=\u0026#39;result\u0026#39;\u0026gt; \u0026lt;query xmlns=\u0026#39;http://jabber.org/protocol/muc#owner\u0026#39;\u0026gt; \u0026lt;x xmlns=\u0026#39;jabber:x:data\u0026#39; type=\u0026#39;form\u0026#39;\u0026gt; \u0026lt;title\u0026gt;Configuration for \u0026#34;coven\u0026#34; Room\u0026lt;/title\u0026gt; \u0026lt;instructions\u0026gt; Complete this form to modify the configuration of your room. \u0026lt;/instructions\u0026gt; \u0026lt;field type=\u0026#39;hidden\u0026#39; var=\u0026#39;FORM_TYPE\u0026#39;\u0026gt; \u0026lt;value\u0026gt;http://jabber.org/protocol/muc#roomconfig\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;field var=\u0026#39;muc#roomconfig_slow_mode_duration\u0026#39; type=\u0026#39;text-single\u0026#39; label=\u0026#39;Slow Mode (0=disabled, any positive integer= users can send a message every X seconds.)\u0026#39; \u0026gt; \u0026lt;validate xmlns=\u0026#39;http://jabber.org/protocol/xdata-validate\u0026#39; datatype=\u0026#39;xs:integer\u0026#39;\u0026gt; \u0026lt;range min=\u0026#39;0\u0026#39;/\u0026gt; \u0026lt;/validate\u0026gt; \u0026lt;value\u0026gt;20\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;!-- and any other field... --\u0026gt; \u0026lt;/x\u0026gt; \u0026lt;/query\u0026gt; \u0026lt;/iq\u0026gt; If the configuration is changed, the server SHOULD send a status code 104, as specified in XEP-0045 - Notification of configuration changes.\n4.2 Client discovering The feature can be enabled on a room:\n by the room owner, if your implementation allow them to set this option by a server-wide parameter  In other words: you can enable this feature, without adding the field in the room configuration form. This allows for example server admins to apply a rate limit server-wide, or to set the slow mode programmatically on any wanted criteria (number of users in the room, current server load, room context, \u0026hellip;).\nIn any case, to allow clients to discover that the feature is active, the server MUST respond on room information queries by adding a muc#roominfo_slow_mode_duration field. This field type MUST be text-single, and its value MUST be a positive integer.\n0 value means that the slow mode is disabled for this room. Any positive value is the duration, in seconds, users must wait between two messages. Any invalid (non-positive integer) value sent by the server MUST be considered as equal to 0 (in case of a bad implementation).\nHere is an example of response the server could send when a client is querying room information:\n\u0026lt;iq from=\u0026#39;coven@chat.shakespeare.lit\u0026#39; id=\u0026#39;ik3vs715\u0026#39; to=\u0026#39;hag66@shakespeare.lit/pda\u0026#39; type=\u0026#39;result\u0026#39;\u0026gt; \u0026lt;query xmlns=\u0026#39;http://jabber.org/protocol/disco#info\u0026#39;\u0026gt; \u0026lt;identity category=\u0026#39;conference\u0026#39; name=\u0026#39;The place to be\u0026#39; type=\u0026#39;text\u0026#39;/\u0026gt; \u0026lt;feature var=\u0026#39;http://jabber.org/protocol/muc\u0026#39;/\u0026gt; \u0026lt;x xmlns=\u0026#39;jabber:x:data\u0026#39; type=\u0026#39;result\u0026#39;\u0026gt; \u0026lt;field var=\u0026#39;FORM_TYPE\u0026#39; type=\u0026#39;hidden\u0026#39;\u0026gt; \u0026lt;value\u0026gt;http://jabber.org/protocol/muc#roominfo\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;field var=\u0026#39;muc#roominfo_slow_mode_duration\u0026#39; type=\u0026#39;text-single\u0026#39;\u0026gt; \u0026lt;value\u0026gt;2\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;!-- and any other field... --\u0026gt; \u0026lt;/x\u0026gt; \u0026lt;/query\u0026gt; \u0026lt;/iq\u0026gt; If the slow mode duration has changed (either because the room configuration was modified, or because a server parameter has changed), the server SHOULD send a status code 104, as specified in XEP-0045 - Notification of configuration changes.\n5. Server-side rate limiting When the Slow Mode is enabled, server MUST NOT accept two consecutive messages from the same user, to the same room, until the slow mode duration has elapsed. Only messages containing at least one \u0026lt;body/\u0026gt; element must be taking into account (to avoid counting chatstate messages for example).\nRoom administrators and owners MUST NOT be rate limited.\nIf a user bypass the limit, the server MUST reply an error stanza, that respects RFC 6120, especially:\n error_type MUST be wait, as described in RFC 6120 - Stanzas error - Syntax, error_condition MUST be policy-violation, as described in RFC 6120 - Stanzas error - Defined Stream Error Conditions, the stanza SHOULD contain a \u0026lt;text\u0026gt; element explaining why the message was rejected, and this message SHOULD mention the slow mode duration so that user can understand why they can\u0026rsquo;t post their message.  Here is an example or error stanza:\n\u0026lt;message xmlns=\u0026#34;jabber:client\u0026#34; type=\u0026#34;error\u0026#34; to=\u0026#34;crone1@shakespeare.lit/desktop\u0026#34; id=\u0026#34;528df978-aa6b-422a-b987-056a810c4733\u0026#34; from=\u0026#34;coven@chat.shakespeare.lit\u0026#34; \u0026gt; \u0026lt;error type=\u0026#34;wait\u0026#34;\u0026gt; \u0026lt;policy-violation xmlns=\u0026#34;urn:ietf:params:xml:ns:xmpp-stanzas\u0026#34; /\u0026gt; \u0026lt;text xmlns=\u0026#34;urn:ietf:params:xml:ns:xmpp-stanzas\u0026#34;\u0026gt; You have exceeded the limit imposed by the slow mode in this room. You have to wait 2 seconds between messages. Please try again later \u0026lt;/text\u0026gt; \u0026lt;/error\u0026gt; \u0026lt;/message\u0026gt; 6. Client handling When a participant joins a room, the client SHOULD request room information as described in section \u0026ldquo;4.2 Client discovering\u0026rdquo;, and look for the muc#roominfo_slow_mode_duration field.\nIf this field is present, and contains a valid strictly positive integer value, the client SHOULD display an information somewhere, to tell users that there is a slow mode limitation that applies to this room. This information MAY also be displayed to users for which the rate limit does not apply (administrators, owners, \u0026hellip;).\nMoreover, each time a participant sends a text message, the client SHOULD prevent the user to send another message before the timeout is passed. This MAY be done either by disabling the input field, or the submit button. If the user has at least the administrator acces level, the client SHOULD NOT disable the input field or the submit button.\nTo avoid some frustrating behaviour, in case there is some lag on the server for example, the client MAY start counting time after receiving the message echo. Indeed, if the first message is processed with some delay by the server, it could consider that the duration is not passed yet when receiving the next one.\n7. Security Considerations As a same user can join a room with multiple sessions and/or nicknames, the server MUST use the appropriate key to identify the account, and apply the same limits to all user\u0026rsquo;s sessions.\nAppendices Appendix A: Document information TO BE DONE\nAppendix B: Author Information John Livingston\nWebsite: https://www.john-livingston.fr\nAppendix C: Legal Notices TO BE DONE\nAppendix D: Relation to XMPP The Extensible Messaging and Presence Protocol (XMPP) is defined in the XMPP Core (RFC 6120) and XMPP IM (RFC 6121) specifications contributed by the XMPP Standards Foundation to the Internet Standards Process, which is managed by the Internet Engineering Task Force in accordance with RFC 2026. Any protocol defined in this document has been developed outside the Internet Standards Process and is to be understood as an extension to XMPP rather than as an evolution, development, or modification of XMPP itself.\nAppendix E: Discussion Venue TO BE DONE\nAppendix F: Requirements Conformance The following requirements keywords as used in this document are to be interpreted as described in RFC 2119: \u0026ldquo;MUST\u0026rdquo;, \u0026ldquo;SHALL\u0026rdquo;, \u0026ldquo;REQUIRED\u0026rdquo;; \u0026ldquo;MUST NOT\u0026rdquo;, \u0026ldquo;SHALL NOT\u0026rdquo;; \u0026ldquo;SHOULD\u0026rdquo;, \u0026ldquo;RECOMMENDED\u0026rdquo;; \u0026ldquo;SHOULD NOT\u0026rdquo;, \u0026ldquo;NOT RECOMMENDED\u0026rdquo;; \u0026ldquo;MAY\u0026rdquo;, \u0026ldquo;OPTIONAL\u0026rdquo;.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/polls/","title":"Sondages","tags":[],"description":"Polls technical documentation","content":"The poll system relies on two thinks:\n mod_muc_polls Prosody module on the backend polls Converse plugin on the frontend  Backend mod_muc_polls is a Prosody modules that implements polls in MUC. This module could be used on any Prosody server, and has no code specific to the livechat plugin.\nThe way this module works could be standardized one day, by writing a XEP.\nPoll creation This module adds the http://jabber.org/protocol/muc#x-poll disco features on muc-disco#info.\nRoom\u0026rsquo;s owner and admin can retrieve a http://jabber.org/protocol/muc#x-poll form by sending the relevant iq query. This forms contains relevant fields (the poll question, the duration, choices, \u0026hellip;). Once the form submitted, a new poll is created. Any previous existing poll will end (if not already ended).\nThe current poll is stored in room._data.current_poll.\nFor now, any ended poll is not kept.\nPoll starts When a poll is started, a groupchat message is broadcasted in the MUC room. This message is sent in the name of the poll creator (same from, same occupant-id). This message contains the question, the different choices, and some instructions (in english).\nThis message also contains some specific XML tags. These tags could be use by any compatible client to display the poll as they want.\nHere an Example of this start message:\n\u0026lt;message id=\u0026#39;25Plgjj2TdemFuomNuKZ9bxRQFLbiVHwc8_4\u0026#39; to=\u0026#39;root@p1.localhost/converse.js-117702469\u0026#39; xmlns=\u0026#39;jabber:client\u0026#39; from=\u0026#39;5dd144b2-3c24-4cbc-a34e-143e951ecf50@room.p1.localhost/Root\u0026#39; type=\u0026#39;groupchat\u0026#39;\u0026gt; \u0026lt;body\u0026gt;The poll question 1: Choice 1 label 2: Choice 2 label Send a message with an exclamation mark followed by your choice number to vote. Example: !1 \u0026lt;/body\u0026gt; \u0026lt;occupant-id id=\u0026#39;yoXY0/DaHd03MpGsc+ayjEFZ5UIWt6JmrxC+6HPz4qM=\u0026#39; xmlns=\u0026#39;urn:xmpp:occupant-id:0\u0026#39;/\u0026gt; \u0026lt;x-poll id=\u0026#39;_eZQ4j4YLHTK\u0026#39; xmlns=\u0026#39;http://jabber.org/protocol/muc#x-poll-message\u0026#39; end=\u0026#39;1720177157\u0026#39; votes=\u0026#39;0\u0026#39;\u0026gt; \u0026lt;x-poll-question\u0026gt;The poll question\u0026lt;/x-poll-question\u0026gt; \u0026lt;x-poll-choice choice=\u0026#39;1\u0026#39; votes=\u0026#39;0\u0026#39;\u0026gt;Choice 1 label\u0026lt;/x-poll-choice\u0026gt; \u0026lt;x-poll-choice choice=\u0026#39;2\u0026#39; votes=\u0026#39;0\u0026#39;\u0026gt;Choice 2 label\u0026lt;/x-poll-choice\u0026gt; \u0026lt;/x-poll\u0026gt; \u0026lt;stanza-id xmlns=\u0026#39;urn:xmpp:sid:0\u0026#39; id=\u0026#39;dOASuopT9kW5OgAKvhZo0Irm\u0026#39; by=\u0026#39;5dd144b2-3c24-4cbc-a34e-143e951ecf50@room.p1.localhost\u0026#39;/\u0026gt; \u0026lt;/message\u0026gt; Note: the end attribute is the poll end date timestamp. The votes attributes are the number of votes (total on x-poll and per choice on each x-poll-choice tag). The choice attribute is the key to use to vote for this choice (choice='1' can by voted by sending !1).\nPoll votes Users can then vote by sending messages in the room, using the format \u0026ldquo;!1\u0026rdquo;.\nThese groupchat messages will be intercepted by the module, and counted as votes.\nIf the \u0026ldquo;anonymous votes\u0026rdquo; feature is enabled, vote will be taken into account, but the message will be bounced with an error saying: \u0026ldquo;Your vote is taken into account. Votes are anonymous, they will not be shown to other participants.\u0026rdquo;\nThis means that you can vote with any XMPP clients!\nIf an occupant votes multiple times, their vote will be updated.\nIf an occupant is muted (has visitor role), votes won\u0026rsquo;t be counted.\nWhen there are new votes, messages are broadcated so that compatible clients can update the current vote progress. These messages are debounced: the module waits 5 seconds after a vote to send the update message, and only send one for all votes that were done in those 5 seconds. These messages are groupchat message without body, and with some specific urn:xmpp:hints. They contains the x-poll tag with same meta data as above. The message is also sent as the poll creator (from and occupant-id).\nHere is an example:\n\u0026lt;message id=\u0026#39;jm9dsXD73eXxlAP2M4dOhay7oXBlQb91LVBf\u0026#39; to=\u0026#39;root@p1.localhost/converse.js-117702469\u0026#39; xmlns=\u0026#39;jabber:client\u0026#39; from=\u0026#39;5dd144b2-3c24-4cbc-a34e-143e951ecf50@room.p1.localhost/Root\u0026#39; type=\u0026#39;groupchat\u0026#39;\u0026gt; \u0026lt;occupant-id id=\u0026#39;yoXY0/DaHd03MpGsc+ayjEFZ5UIWt6JmrxC+6HPz4qM=\u0026#39; xmlns=\u0026#39;urn:xmpp:occupant-id:0\u0026#39;/\u0026gt; \u0026lt;no-copy xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;no-store xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;no-permanent-store xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;x-poll id=\u0026#39;06yCKW_hoZSx\u0026#39; xmlns=\u0026#39;http://jabber.org/protocol/muc#x-poll-message\u0026#39; end=\u0026#39;1720177925\u0026#39; votes=\u0026#39;1\u0026#39;\u0026gt; \u0026lt;x-poll-question\u0026gt;The poll question\u0026lt;/x-poll-question\u0026gt; \u0026lt;x-poll-choice choice=\u0026#39;1\u0026#39; votes=\u0026#39;1\u0026#39;\u0026gt;Choice 1 label\u0026lt;/x-poll-choice\u0026gt; \u0026lt;x-poll-choice choice=\u0026#39;2\u0026#39; votes=\u0026#39;0\u0026#39;\u0026gt;Choice 2 label\u0026lt;/x-poll-choice\u0026gt; \u0026lt;/x-poll\u0026gt; \u0026lt;/message\u0026gt; Note: Standards XMPP clients won\u0026rsquo;t be able to show the progress.\nWhen a user joins the MUC, a similar message will be sent to this user (and this user only, to the new occupant session to be more specific). This is done so that any compatible client can immediatly show the poll.\nNote: clients should ignored x-poll data from archived messages, and only consider data coming from unarchived messages. Otherwise they could show some outdated data.\nPoll end When the poll ends, a new groupchat message is broadcasted in the room.\nHere is an example:\n\u0026lt;message id=\u0026#39;GVqv1YcwI0GZb0myKhmtEqRa9fvWlCbDdF7R\u0026#39; to=\u0026#39;root@p1.localhost/converse.js-117702469\u0026#39; xmlns=\u0026#39;jabber:client\u0026#39; from=\u0026#39;5dd144b2-3c24-4cbc-a34e-143e951ecf50@room.p1.localhost/Root\u0026#39; type=\u0026#39;groupchat\u0026#39;\u0026gt; \u0026lt;body\u0026gt;The poll question This poll is now over. 1: Choice 1 label 2: Choice 2 label \u0026lt;/body\u0026gt; \u0026lt;occupant-id id=\u0026#39;yoXY0/DaHd03MpGsc+ayjEFZ5UIWt6JmrxC+6HPz4qM=\u0026#39; xmlns=\u0026#39;urn:xmpp:occupant-id:0\u0026#39;/\u0026gt; \u0026lt;x-poll id=\u0026#39;_eZQ4j4YLHTK\u0026#39; votes=\u0026#39;5\u0026#39; xmlns=\u0026#39;http://jabber.org/protocol/muc#x-poll-message\u0026#39; end=\u0026#39;1720177157\u0026#39; over=\u0026#39;\u0026#39; \u0026gt; \u0026lt;x-poll-question\u0026gt;The poll question\u0026lt;/x-poll-question\u0026gt; \u0026lt;x-poll-choice choice=\u0026#39;1\u0026#39; votes=\u0026#39;3\u0026#39;\u0026gt;Choice 1 label\u0026lt;/x-poll-choice\u0026gt; \u0026lt;x-poll-choice choice=\u0026#39;2\u0026#39; votes=\u0026#39;2\u0026#39;\u0026gt;Choice 2 label\u0026lt;/x-poll-choice\u0026gt; \u0026lt;/x-poll\u0026gt; \u0026lt;stanza-id xmlns=\u0026#39;urn:xmpp:sid:0\u0026#39; id=\u0026#39;CwiijSxawB8QOP4NN-Li6jP0\u0026#39; by=\u0026#39;5dd144b2-3c24-4cbc-a34e-143e951ecf50@room.p1.localhost\u0026#39;/\u0026gt; \u0026lt;/message\u0026gt; Please note the over attributes that indicated that the poll is over.\nIf users are voting just after the poll ends (less than 30 seconds after the poll end), and the vote is anonymous, their votes will be bounced, to avoid leaking votes for late users.\nSecurity Following tags will be stripped of any incoming groupchat message: x-poll, x-poll-question, x-poll-choice. This is to avoid any poll spoofing.\nFronted The poll Converse plugin does multiple things.\nIt checks for the http://jabber.org/protocol/muc#x-poll disco feature to show the \u0026ldquo;create poll\u0026rdquo; button.\nIt uses standards XMPP forms to get the poll creation form and submit it.\nIt uses the parseMUCMessage hook to check if messages have x-poll data.\nIf so, and if message are not archived, it creates or updates the poll banner.\nWhen clicking on a choice in the banner, it just sends a message in the chat (\u0026quot;!1\u0026quot; for example).\nAs the backend does no localization, it also translate on the fly the english sentences coming from the backend (in the form definition, in poll start/end message, and in bounce/error messages).\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/terms/","title":"Terms&amp;Conditions","tags":[],"description":"Terms&amp;Conditions implementation","content":"You can set terms \u0026amp; conditions on the instance level (called \u0026ldquo;global terms\u0026rdquo;), or at the streamers' channels level (called \u0026ldquo;muc terms\u0026rdquo;, as it is related to muc rooms).\nBackend The mod_muc_peertubelivechat_terms prosody modules handles the terms configuration.\nIt has a configuration option for the global terms. It also adds muc terms in the room data.\nWhen a new occupant session is opened, this modules sends them messages containing the global and muc terms (if set).\nHere is an example of sent messages:\n\u0026lt;message xmlns=\u0026#34;jabber:client\u0026#34; id=\u0026#34;_iRSEs061gi5GBjF7zGh7f-M\u0026#34; type=\u0026#34;groupchat\u0026#34; to=\u0026#34;root@p1.localhost/QH1H89H1\u0026#34; from=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.p1.localhost/Peertube\u0026#34;\u0026gt; \u0026lt;body\u0026gt;The global terms.\u0026lt;/body\u0026gt; \u0026lt;x-livechat-terms type=\u0026#34;global\u0026#34; /\u0026gt; \u0026lt;delay xmlns=\u0026#34;urn:xmpp:delay\u0026#34; stamp=\u0026#34;2024-06-25T11:02:25Z\u0026#34; /\u0026gt; \u0026lt;stanza-id by=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.p1.localhost\u0026#34; xmlns=\u0026#34;urn:xmpp:sid:0\u0026#34; id=\u0026#34;InoL5fonvOoR8X9gOlAYsz_N\u0026#34; /\u0026gt; \u0026lt;no-copy xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;no-store xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;no-permanent-store xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;/message\u0026gt; \u0026lt;message xmlns=\u0026#34;jabber:client\u0026#34; id=\u0026#34;_iRSEs061gi5GBjF7zGh7f-M\u0026#34; type=\u0026#34;groupchat\u0026#34; to=\u0026#34;root@p1.localhost/QH1H89H1\u0026#34; from=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.p1.localhost/Peertube\u0026#34;\u0026gt; \u0026lt;body\u0026gt;The muc terms.\u0026lt;/body\u0026gt; \u0026lt;x-livechat-terms type=\u0026#34;muc\u0026#34; /\u0026gt; \u0026lt;delay xmlns=\u0026#34;urn:xmpp:delay\u0026#34; stamp=\u0026#34;2024-06-25T11:02:25Z\u0026#34; /\u0026gt; \u0026lt;stanza-id by=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.p1.localhost\u0026#34; xmlns=\u0026#34;urn:xmpp:sid:0\u0026#34; id=\u0026#34;InoL5fonvOoR8X9gOlAYsz_N\u0026#34; /\u0026gt; \u0026lt;no-copy xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;no-store xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;no-permanent-store xmlns=\u0026#39;urn:xmpp:hints\u0026#39;/\u0026gt; \u0026lt;/message\u0026gt; Notice the x-livechat-terms tag.\nStandard XMPP clients will show these messages as standard message.\nMessage are sent from a \u0026ldquo;service nickname\u0026rdquo;: this occupant does not exist. The service nickname is an option of the module (livechat use \u0026ldquo;Peertube\u0026rdquo;, hard coded for now). This nickname is reserved, no-one can spoof it (the module will bounce any request to use this nickname). We must do so, because without nickname, some XMPP clients won\u0026rsquo;t show the messages (tested with Gajim).\nWe also add a delay tag, to trick the moderation bot (see comments in code). This also ensure clients will not drop the message because there is no occupant with this name.\nWe also add some urn:xmpp:hints to avoid storing or copying these messages.\nWhen muc terms are updated, the new terms will be broadcasted.\nTo avoid anyone spoofing terms \u0026amp; conditions, incoming message stanza are filtered, and any x-livechat-terms tag will be removed.\nMessage history is disabled for message containing the x-livechat-terms, so that messages broadcasted when the terms change are not stored by muc_mam modume (\u0026ldquo;Message Archiving Management\u0026rdquo;).\nFrontend For standard XMPP clients, terms will be shown as delayed messages.\nFor the livechat frontend, there is a livechat-converse-terms Converse plugin that will intercept these messages, and prevent them to be shown in the chat history.\nIt will also create infobox at the top of the chat to display the terms content. If muc terms are updated, the new terms will be shown.\nUsers can hide the terms. To remember that a user has already hidden the terms, we store the content in localStorage. We will only show terms again if the content in this localStorage changes. We do so for both global terms and muc terms, in two separate localStorage keys. The keys in localstorage does not depends on the room JID or the origin peertube instance. This means that message will be shown again:\n if terms are modified if the user switch to another channel if the user switch to a video from a different peertube instance  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/tasks/","title":"Tasks overview","tags":[],"description":"Task Application technical overview","content":"The livechat plugin includes a Task Application. The present document describes how this is implemented.\nBasics This features relies on XEP-0060: Publish-Subscribe. This XEP provide a way to store and retrieve items, and to receive push notifications when an item is created/deleted/modified.\nThere is a Prosody Module, mod_pubsub_peertubelivechat, to implement some specific use of the pubsub mechanism.\nWe use the JID+NodeID addressing to specify some nodes related to each MUC room. The JID is the MUC room JID, the NodeID is functionnality we want to address. For now, this modules only implement one such node: \u0026ldquo;livechat-tasks\u0026rdquo;, to handle tasks and task lists. But the module code anticipates futur uses.\nThe \u0026ldquo;livechat-tasks\u0026rdquo; node contains two type of objects: Task and TaskList (XML Namespaces: urn:peertube-plugin-livechat:tasklist and urn:peertube-plugin-livechat:task). Tasks have an attribute containing their task list id.\nOn the front-end, we have the livechat-converse-tasks plugin for ConverseJS.\nWorkflow Here is the basic workflow used to subscribe to tasks/task-lists, and receive existing items.\n the browsers connect to the chat, and ConverseJS uses the XMPP discovery to get the room features. mod_pubsub_peertubelivechat declares two features: urn:peertube-plugin-livechat:tasklist and urn:peertube-plugin-livechat:task. the browsers detect these feature, and checks that the user has admin or owner affiliation on the MUC component. if not, won\u0026rsquo;t display the Task Application, and stops here. if yes, we will continue: display the Task Application. Create a new PubSubManager object, that will subscribe to the pubsub node. The backend receives the subscription request, test user rights (must be owner/admin on the MUC), and adds the user to the subscribers. Note: a user with multiple browsers tabs will send multiple subscription requests, but this is not an issue. If the node did not exist, the backend automatically created it, and use the MUC name to create a first task-list with that name. Once subscribed, the frontend will request all current entries. The backend tests rights, and send all node entries. On the frontend, the PubSubManager handles the response by dispatching received items to the correct frontend component.  Note: on the backend side, we subscribe all users with the \u0026ldquo;publisher\u0026rdquo; affiliation level. This allows them to publish items, but not change the node configuration.\nHere is the worflow to create/modify/delete items:\n the frontend send a publish request. backend checks rights. backend sends notifications to all subscribers, including the current users. On the front-end PubSubManager receives the notification, and dispatch it to the relevant component.  Unsubscribing When users leaves a MUC room, they are automatically unsubscribed from the \u0026ldquo;livechat-tasks\u0026rdquo; node related to this room.\nWhen users lose the owner/admin affiliation, they are removed from the \u0026ldquo;livechat-tasks\u0026rdquo; node subscriptions.\nItems Here we describes the content of node items.\nListes de tâches  Item tag: tasklist XML Namespace: urn:peertube-plugin-livechat:tasklist item childs:  name: the text content is the task list name    Example: here is an example of IQ stanza to create a task-list item.\n\u0026lt;iq from=\u0026#34;user@example.com\u0026#34; id=\u0026#34;45cf7543-67bf-4d03-bb5d-a55038a0512a:sendIQ\u0026#34; to=\u0026#34;035fcc4b-072f-4827-b296-6998b04e3456@room.example.com\u0026#34; type=\u0026#34;set\u0026#34; xmlns=\u0026#34;jabber:client\u0026#34; \u0026gt; \u0026lt;pubsub xmlns=\u0026#34;http://jabber.org/protocol/pubsub\u0026#34;\u0026gt; \u0026lt;publish node=\u0026#34;livechat-tasks\u0026#34;\u0026gt; \u0026lt;item\u0026gt; \u0026lt;tasklist xmlns=\u0026#34;urn:peertube-plugin-livechat:tasklist\u0026#34;\u0026gt; \u0026lt;name\u0026gt;Task List Name\u0026lt;/name\u0026gt; \u0026lt;/tasklist\u0026gt; \u0026lt;/item\u0026gt; \u0026lt;/publish\u0026gt; \u0026lt;/pubsub\u0026gt; \u0026lt;/iq\u0026gt; Tâches  Item tag: task XML Namespace: urn:peertube-plugin-livechat:task item attributes:  done: if present and equal to \u0026ldquo;true\u0026rdquo;, means that the task is done list: the list id order: the order of the task in the task list   item childs:  name: the text content is the task name description: the text content is the task description    Example: here is an example of IQ stanza to create a task-list item.\n\u0026lt;iq from=\u0026#34;user@example.com\u0026#34; id=\u0026#34;9fd9a162-1b6c-4b38-a2a1-2485b34f0d8d:sendIQ\u0026#34; to=\u0026#34;035fcc4b-072f-4827-b296-6998b04e3456@room.example.com\u0026#34; type=\u0026#34;set\u0026#34; xmlns=\u0026#34;jabber:client\u0026#34; \u0026gt; \u0026lt;pubsub xmlns=\u0026#34;http://jabber.org/protocol/pubsub\u0026#34;\u0026gt; \u0026lt;publish node=\u0026#34;livechat-tasks\u0026#34;\u0026gt; \u0026lt;item\u0026gt; \u0026lt;task list=\u0026#34;8302c024-c16e-4fbd-aca7-c94cdb2025de\u0026#34; order=\u0026#34;0\u0026#34; done=\u0026#34;true\u0026#34; xmlns=\u0026#34;urn:peertube-plugin-livechat:task\u0026#34; \u0026gt; \u0026lt;name\u0026gt;The task name\u0026lt;/name\u0026gt; \u0026lt;description\u0026gt;here is the description\u0026lt;/description\u0026gt; \u0026lt;/task\u0026gt; \u0026lt;/item\u0026gt; \u0026lt;/publish\u0026gt; \u0026lt;/pubsub\u0026gt; \u0026lt;/iq\u0026gt; Note: in the above example, we added done=\u0026quot;true\u0026quot; just for the example. Don\u0026rsquo;t add the attribute if you want not the task to be marked as done (or if you want to undone the task).\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/issues/","title":"Évolutions / Bugs","tags":[],"description":"Évolutions / suivi des bugs","content":"Si vous avez des demandes de nouvelles fonctionnalités, des bugs, ou des difficultés à installer et utiliser le plugin, vous pouvez utiliser l\u0026rsquo;outils Github issue tracker. Si possible, merci d\u0026rsquo;y écrire en anglais ; mais le français sera accepté.\nPour avoir un aperçu de la feuille de routes pour les fonctionnalités à venir, vous pouvez vous référer à :\n ce projet github. les jalons sur github.  Si vous êtes webdesigner ou avez une expertise en ConverseJS/Prosody/XMPP et souhaitez participer à l\u0026rsquo;évolution de ce plugin, n\u0026rsquo;hésitez pas à me contacter.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/technical/","title":"Technical documentation","tags":[],"description":"Technical documentation","content":"  Source code  Source code organization\n   Third party  Displaying the livechat with 3rd party software.\n   Plugin storage  Data files and folders used on the server\n   MUC Slow mode  MUC Slow mode XEP\n   Sondages  Polls technical documentation\n   Terms\u0026amp;Conditions  Terms\u0026amp;Conditions implementation\n   Tasks overview  Task Application technical overview\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/contact/","title":"Me contacter","tags":[],"description":"Contacter l&#39;auteur","content":"Si vous avez des questions ou souhaitez parler de ce plugin, vous pouvez rejoindre ce salon XMPP avec n\u0026rsquo;importe quel client Jabber : plugin-livechat-support@room.im.yiny.org.\nSi vous souhaitez supporter le projet financièrement, vous pouvez me contacter par mail à l\u0026rsquo;adresse git.[arobase].john-livingston.fr, ou passer par mon profil Liberapay.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/credits/","title":"Crédits","tags":[],"description":"Crédits pour le plugin","content":"Les fichiers package.json, COPYRIGHT et LICENSE contiennent les informations sur la licence du présent logiciel (en anglais).\nLe plugin est maintenu par John Livingston.\nMerci à David Revoy pour son travail sur la mascotte de Peertube, Sepia. Le design est en licence CC-By, et les fichiers SVG utilisés pour créer certains logos et avatars en GPLv3.0.\nMerci à Framasoft pour avoir rendu Peertube possible, pour le support financier, et pour héberger les traductions du projet sur leur instance Weblate.\nMerci à ritimo pour le support financier.\nMerci à Code Lutin et à la Rétribution Copie Publique pour le support financier.\nMerci à NlNet et au fond NGI0 Entrust pour le support financier.\nMerci à Octopuce pour le support financier.\nEt merci à toustes les contributeur⋅rices individuel⋅les qui ont fait un don via ma page liberapay.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/basics/","title":"Quelques basiques","tags":[],"description":"Quelques informations de base sur comment configurer et utiliser le tchat pour vos directs","content":"Activer le tchat pour vos diffusions en direct Les administrateur⋅rices de l\u0026rsquo;instance peuvent choisir de désactiver ou activer le tchat dans certains cas spécifiques. Les informations dans cette section ne sont applicables que dans le cas par défaut.\n Quand vous créez ou modifiez un direct Peertube, il y a un onglet «paramètres du plugins» :\nDans l\u0026rsquo;onglet «paramètres du plugin», il y a une case à cocher «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only ». Cochez ou décochez la simplement pour activer ou désactiver le tchat associé à votre vidéo.\nIl peut y avoir d\u0026rsquo;autres paramètres dans cet onglet, en fonction des plugins installés sur votre instance Peertube.\n Tchat par chaîne Au niveau de l\u0026rsquo;instance, les administrateur⋅rices peuvent choisir si les salons de discussions sont uniques par vidéo, ou s\u0026rsquo;ils vont être uniques par chaîne. Veuillez contacter les administrateur⋅rices de votre instance pour plus d\u0026rsquo;information sur la façon dont est configuré le plugin livechat.\nPartager le tchat Au dessus du tchat, il y a un bouton «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only ».\nCe bouton ouvre une popup, où vous trouverez une url pour rejoindre le tchat. Vous pouvez partager cette url.\nL\u0026rsquo;onglet \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; fournit des liens pour intégrer le tchat dans des sites web ou dans votre flux vidéo en direct.\nVous pouvez personnaliser certaines options :\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only : vous ne pourrez que lire le tchat, et non y écrire. Ceci est utile pour inclure le contenu du tchat dans vos diffusions directes (voir la documentation OBS).\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only : si coché, les couleurs de votre thème courant seront ajoutés à l\u0026rsquo;url, de sorte que ls personnes ouvrant ce lien auront le même jeu de couleurs.\n SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only : à la place d\u0026rsquo;une url, vous aurez un extrait HTML que vous pouvez ajouter à votre site web pour inclure le tchat.\nPour plus d\u0026rsquo;information sur l\u0026rsquo;onglet \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;, veuillez vous référer à la documentation OBS.\nDans l\u0026rsquo;onglet \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;, l\u0026rsquo;URL fournie ouvre le tchat dans l\u0026rsquo;interface Peertube. Vous pouvez partager ce lien avec d\u0026rsquo;autres utilisateurs pour les inviter à rejoindre le tchat.\nLa popup «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » peut également contenir un onglet «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only ». Cet onglet n\u0026rsquo;est disponible que si les admintrateur⋅rices de votre instance ont activé et configuré correctement cette option. En utilisant cette option, vous pouvez fournir un lien permettant de rejoindre le salon en utilisant n\u0026rsquo;importe quel client XMPP. En utilisant de tels logiciels, il sera par exemple plus simple de gérer les actions de modération.\nModération Veuillez vous référer à la documentation de modération.\nInclure plusieurs tchats dans votre flux en direct Veuillez vous référer à la documentation OBS.\nPersistance du tchat Par défaut, le tchat est persistant. Cela veut dire que le contenu des salons sera conservé pendant un moment. Les utilisateur⋅rices qui le rejoignent pourront voir les messages envoyés avant leur arrivée.\nVous pouvez changer le comportement de la persistance. Ouvrez le menu déroulant, et cliquez sur «Configurer».\nIl y a plusieurs options qui peuvent être changées.\nVous pouvez par exemple définir la valeur par défaut, et la valeur maximum du nombre de messages à retourner à 0. Ainsi les personnes rejoignant le salon ne pourront voir les messages envoyés précédemment.\nVous pouvez aussi décocher «activer l\u0026rsquo;archivage» : si décoché, les messages seront nettoyés si le serveur redémarre.\nEn décochant «Persistant», le salon sera effacé quand il n\u0026rsquo;y aura plus de participant⋅es.\nDétruire le contenu du tchat Si vous voulez détruire le contenu du tchat, ouvrez le menu déroulant, et cliquez sur «Détruire». Une popup va s\u0026rsquo;ouvrir, demandant confirmation.\nLe tchat sera automatiquement recréé à chaque fois que quelqu\u0026rsquo;un essayera de le rejoindre, tant que la vidéo existe et qu\u0026rsquo;elle a le paramètre «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » activé.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/channel/","title":"Configuration de la chaîne","tags":[],"description":"Configuration des salons de discussion des chaînes Peertube","content":" Cette fonctionnalité arrive avec le plugin livechat version 8.0.0, et peut être désactivée par les admins de votre instance.\n Dans le menu gauche de Peertube, il y a une entrée «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » :\nCe lien «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » vous emmène sur une liste de vos chaînes. En cliquant sur une chaîne, vous pourrez effectuer certains réglages pour vos chaînes :\nIci vous pouvez configurer :\n [SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only ](/peertube-plugin-livechat/fr/documentation/user/streamers/terms)\n Valeur par défaut pour [SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only ](/peertube-plugin-livechat/fr/documentation/user/streamers/moderation)\n Le mode lent Le bot de tchat Emojis personnalisés Nouvelles fonctionnalités à venir\u0026hellip;  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/","title":"Pour les streameur⋅euses","tags":[],"description":"Comment mettre en place le tchat pour vos diffusions en direct","content":"  Quelques basiques  Quelques informations de base sur comment configurer et utiliser le tchat pour vos directs\n   Configuration de la chaîne  Configuration des salons de discussion des chaînes Peertube\n   Modération  Fonctions de modération avancées du plugin peertube-plugin-livechat\n   Conditions d\u0026#39;utilisation  Configurer les conditions d\u0026#39;utilisation des tchats de la chaîne\n   Mode lent  Mode lent du plugin peertube-plugin-livechat\n   Délai de modération  Plugin peertube-plugin-livechat délai de modération\n   Emojis personnalisés  Emojis personnalisés du plugin peertube-plugin-livechat\n   Sondages  Vous pouvez créer des sondages pour demander l\u0026#39;avis des spectateur⋅rices.\n   Tâches / listes de choses à faire  Vous pouvez gérer les tâches et les listes de tâches avec votre équipe de modération.\n   Bot de tchat  Configuration du bot de tchat\n  Mots interdits  Le bot peut automatiquement modérer les messages contenant des mots interdits.\n   Messages pré-enregistrés  Le bot peut envoyer des messages périodiquement.\n   Commandes  Le bot peut répondre à différentes commandes.\n    "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/moderation/","title":"Modération","tags":[],"description":"Fonctions de modération avancées du plugin peertube-plugin-livechat","content":" Cette section est encore incomplète.\n Cette page décrit le comportement des versions de livechat \u0026gt;= 10.0.0. Il y a eu quelques changements dans la façon dont nous gérons les droits d\u0026rsquo;accès pour les administrateur⋅rices et modérateur⋅rices de Peertube.\n Le bot de tchat Vous pouvez utiliser un bot de tchat, qui vous aidera pour la modération. Veuillez vous référer à la documentation du bot de tchat pour plus d\u0026rsquo;informations.\nAccéder aux outils de modération Vous pouvez accéder aux paramètres de la salle et aux outils de modération en utilisant le menu déroulant du tchat en haut à droite de celui-ci.\nLe⋅a propriétaire de la vidéo sera le⋅a propriétaire du salon de discussion. Cela signifie qu\u0026rsquo;iel peut configurer le salon, le supprimer, promouvoir d\u0026rsquo;autres utilisateur⋅rices en tant qu\u0026rsquo;administrateur⋅rices, \u0026hellip;\n Depuis la version 10.0.0 de livechat, les administrateur⋅rices et modérateur⋅rices de l\u0026rsquo;instance Peertube n\u0026rsquo;ont pas de droits particuliers par défaut sur les salons. Cependant, iels ont un bouton spécial disponible en haut du chat : \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;. En cliquant sur ce bouton, iels auront un accès propriétaire à la salle.\n Vous pouvez utiliser les commandes de modération ConverseJS pour modérer le salon. Lorsque vous ouvrez la salle de discussion en plein écran, un menu avec des commandes dédiées s\u0026rsquo;affiche en haut à droite.\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/ SPDX-License-Identifier: AGPL-3.0-only\nCette fonctionnalité arrive avec le plugin livechat version 10.2.0.\n Vous pouvez empêcher les utilisateur⋅rices anonymes d\u0026rsquo;envoyer des messages. Dans ce cas, seuls les utilisateur⋅rices enregistré⋅es pourront parler dans le tchat.\nPour activer ou désactiver cette fonctionnalité, utilisez le menu déroulant du chat, puis ouvrez le menu \u0026ldquo;configurer\u0026rdquo;. Dans le formulaire, vous trouverez une case à cocher \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;.\nLes utilisateur⋅rices anonymes n\u0026rsquo;auront pas le champ message, et verront l\u0026rsquo;invite suivante : \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot;\nLorsque cette fonction est activée, les utilisateur⋅rices anonymes se voient attribuer le rôle de \u0026ldquo;visiteur\u0026rdquo;. Vous pouvez changer leur rôle en \u0026ldquo;participant⋅e\u0026rdquo; si vous voulez permettre à certain⋅es d\u0026rsquo;entre elleux de parler.\nSi vous modifiez la configuration de la salle, tous les utilisateur⋅rices anonymes seront mis en sourdine ou à nouveau autorisé⋅e à parler.\nVous pouvez choisir d\u0026rsquo;activer ou de désactiver cette fonctionnalité pour les nouveaux salons de discussion sur la page de configuration de la chaîne.\nRôles et affiliations Il y a différents rôles qui peuvent être assignés aux utilisateur⋅rices dans les salons de discussion : propriétaire, modérateur⋅rice, membre, \u0026hellip;\nCette section est encore incomplète.\n Vous pouvez promouvoir des utilisateur⋅rices en tant que modérateur⋅rices, si vous avez besoin d\u0026rsquo;aide.\nSupprimer le contenu des salons Vous pouvez supprimer d\u0026rsquo;anciennes salles : rejoignez la salle, et utilisez le menu en haut pour détruire la salle.\nModération de l\u0026rsquo;instance En tant que modérateur⋅rice ou administrateur⋅rice de l\u0026rsquo;instance Peertube, vous allez probablement vouloir vérifier que les utilisateur⋅rices n\u0026rsquo;ont pas de comportement problématique.\nVous pouvez lister toutes les salles de discussion existantes : dans l\u0026rsquo;écran des paramètres du plugin, il y a un bouton \u0026ldquo;Lister les salles\u0026rdquo;.\nDe là, vous pouvez également vous promouvoir en tant que modérateur⋅rice de salon en utilisant le bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; sur la droite.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/terms/","title":"Conditions d&#39;utilisation","tags":[],"description":"Configurer les conditions d&#39;utilisation des tchats de la chaîne","content":" Cette fonctionnalité arrive avec le plugin livechat version 10.2.0.\n Configuration Vous pouvez ajouter des conditions d\u0026rsquo;utilisation à votre chaîne. Ces conditions seront affichées à tous les utilisateur⋅rices qui rejoignent le tchat.\nPour configurer les conditions d\u0026rsquo;utilisation, veuillez vous rendre sur la page de configuration de la chaîne :\nL\u0026rsquo;URL du message sera cliquable. Vous pouvez aussi mettre en forme : Message Styling.\nSpectateur⋅rices Lorsqu\u0026rsquo;iels rejoignent le tchat, les spectateur⋅rices verrons les conditions :\nL\u0026rsquo;administrateur⋅rice de l\u0026rsquo;instance Peertube peut également définir des conditions générales. Si c\u0026rsquo;est le cas, ces conditions seront affichées au-dessus de celles de votre chaîne.\n Les utilisateur⋅rices anonymes ne verront les conditions d\u0026rsquo;utilisation qu\u0026rsquo;une fois qu\u0026rsquo;iels auront choisi leur pseudonyme (en d\u0026rsquo;autres termes : une fois qu\u0026rsquo;iels seront en mesure de parler).\n Vous pouvez modifier le contenu des conditions à tout moment, il sera instantanément mis à jour pour tous les téléspectateur⋅rices.\nLes utilisateur⋅rices peuvent masquer les conditions d\u0026rsquo;utilisation. Dans ce cas, les conditions ne s\u0026rsquo;afficheront plus, sauf si vous en modifiez le contenu.\nSi votre instance Peertube permet de rejoindre le tchat avec des clients XMPP, les utilisateur⋅rices utilisant ces clients verront les conditions comme des messages de tchat provenant d\u0026rsquo;un compte \u0026ldquo;Peertube\u0026rdquo;. Lorsque vous mettez à jour les conditions, iels recevront un nouveau message avec le contenu des conditions d\u0026rsquo;utilisation mis à jour.\n "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/slow_mode/","title":"Mode lent","tags":[],"description":"Mode lent du plugin peertube-plugin-livechat","content":" Cette fonctionnalité arrive avec le plugin livechat version 8.3.0.\n Introduction En tant que streameur⋅euse, vous pouvez choisir de limiter la fréquence des messages de vos spectateur⋅rices dans le tchat.\nCela peut s\u0026rsquo;avérer très utile pour :\n éviter l\u0026rsquo;inondation de messages éviter que le tchat ne devienne illisible si de nombreux⋅ses personnes y parlent  Vous pouvez définir le nombre de secondes que les utilisateur⋅rices devront attendre après avoir envoyé un message avant d\u0026rsquo;en envoyer un autre.\nCette limitation ne s\u0026rsquo;applique pas aux modérateur⋅rices.\nOption du mode lent Sur la page de configuration de la chaîne, vous pouvez définir une valeur pour l\u0026rsquo;option mode lent :\nCette valeur va s\u0026rsquo;appliquer comme valeur par défaut pour tous les salons de discussion de votre chaîne.\nLa valeur 0 désactive la fonctionnalité.\nPositionner la valeur à un nombre entier positif permet de fixer la période pendant laquelle les utilisateur⋅rices ne pourront pas envoyer de messages supplémentaires.\nPour modifier la valeur d\u0026rsquo;un salon déjà existant, il suffit d\u0026rsquo;ouvrir le menu \u0026ldquo;configuration\u0026rdquo; du salon (en haut de la fenêtre de tchat), et de modifier la valeur du mode lent dans le formulaire de configuration.\nPour les spectateur⋅rices Si le mode lent est activé, les utilisateur⋅rices en seront informé⋅es par un message.\nLorsqu\u0026rsquo;iels envoient un message, le champ de saisie est désactivé pendant X secondes (X étant la durée du mode lent).\nCette limitation ne s\u0026rsquo;applique pas aux modérateur⋅rices.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/moderation_delay/","title":"Délai de modération","tags":[],"description":"Plugin peertube-plugin-livechat délai de modération","content":" Cette fonctionnalité arrive avec le plugin livechat version 10.3.0.\n Introduction En tant que streameur⋅euse, vous pouvez choisir d\u0026rsquo;appliquer un délai aux messages dans le tchat, afin de laisser un peu de temps aux modérateur⋅rices pour supprimer des messages avant même qu\u0026rsquo;ils ne soient lus par les autres participant⋅es.\nLorsque cette fonction est activée, les modérateur⋅rices voient tous les messages sans délai. Les participant⋅es au tchat ne verront pas que leurs propres messages sont retardés.\nVeuillez noter que les messages envoyés par les modérateur⋅rices seront également retardés, afin d\u0026rsquo;éviter qu\u0026rsquo;ils ne répondent à des messages qui ne sont même pas encore visibles par les autres participant⋅es.\nOption de délai de modération Sur la page de configuration de la chaîne, vous pouvez définir une valeur pour l\u0026rsquo;option \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; :\nCette valeur va s\u0026rsquo;appliquer comme valeur par défaut pour tous les salons de discussion de votre chaîne.\nLa valeur 0 désactive la fonctionnalité.\nFixer cette valeur à un nombre entier positif permet de régler le délai, en secondes, à appliquer aux messages. Évitez de fixer une valeur trop élevée. Idéalement, elle ne devrait pas dépasser quelques secondes (4 ou 5 secondes par exemple).\nPour modifier la valeur d\u0026rsquo;un salon déjà existant, il suffit d\u0026rsquo;ouvrir le menu \u0026ldquo;configuration\u0026rdquo; du salon (en haut de la fenêtre de tchat), et de modifier la valeur du délai de modération dans le formulaire de configuration.\nActuellement, cette fonctionnalité présente un bogue connu : les utilisateur⋅rices qui rejoignent le tchat recevront tous les messages, même ceux qui sont encore en attente pour les autres participant⋅es. Cependant, les messages envoyés après qu\u0026rsquo;iels aient rejoint le chat seront retardés correctement.\n In the chat As a moderator, you will see the remaining time (in seconds) before the message is broadcasted, just besides the message datetime.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/emojis/","title":"Emojis personnalisés","tags":[],"description":"Emojis personnalisés du plugin peertube-plugin-livechat","content":" Cette fonctionnalité arrive avec le plugin livechat version 10.1.0.\n Emojis de la chaîne Les streameur⋅euses peuvent ajouter des émojis personnalisés à leurs chaînes.\nSur la page de configuration de la chaîne, ouvrez l\u0026rsquo;onglet \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; :\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nSPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only\nImportation / Exportation Sur la page de configuration de la chaîne, il y a un bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; et un bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;. Le bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; génère un fichier que vous pouvez ensuite importer dans la configuration d\u0026rsquo;une autre chaîne.\nVous pouvez également générer un fichier à importer à partir de n\u0026rsquo;importe quelle autre source (par exemple, vous pouvez importer vos émojis personnalisés Twitch). Le fichier doit être un fichier JSON valide, au format suivant :\n[ { \u0026#34;sn\u0026#34;: \u0026#34;:short_name:\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://example.com/image.png\u0026#34; } ] L\u0026rsquo;attribut sn est le code du nom court. L\u0026rsquo;attribut url peut être n\u0026rsquo;importe quelle url d\u0026rsquo;image à laquelle votre navigateur peut accéder, ou une URL de données représentant le fichier que vous souhaitez importer.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/polls/","title":"Sondages","tags":[],"description":"Vous pouvez créer des sondages pour demander l&#39;avis des spectateur⋅rices.","content":" Cette fonctionnalité arrive avec le plugin livechat version 10.2.0.\n Créer un sondage Vous pouvez créer un nouveau sondage en utilisant l\u0026rsquo;action \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; dans le menu du tchat :\nCette fonctionnalité de sondage ne doit pas être considérée comme un système de vote fiable. Il est facile de tricher. Aucun mécanisme n\u0026rsquo;empêche les utilisateur⋅rices anonymes de voter plusieurs fois en rechargeant simplement le tchat. Les votes ne sont jamais totalement anonymes, quelqu\u0026rsquo;un ayant accès au serveur peut voir qui a voté pour quel choix.\n Formulaire de sondage Remplir les champs du formulaire :\n \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only \u0026quot; : la question à poser aux spectateur⋅rices\n \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only \u0026quot; : durée pendant laquelle les spectateur⋅rices peuvent voter\n \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/  SPDX-License-Identifier: AGPL-3.0-only \u0026quot; : si cette case est cochée, les votes ne seront pas visibles publiquement dans le tchat\n \u0026ldquo;Choix N\u0026rdquo; : choix qui seront présentés aux spectateur⋅rices  Vous devez au moins remplir les deux premier choix.\nUne fois que vous aurez soumis le formulaire, le sondage commencera instantanément.\nSi un sondage précédent était inachevé, il se terminera et son résultat sera affiché.\nDroits d\u0026rsquo;accès Les administrateur⋅rices de chaque salon peuvent créer un nouveau sondage.\nLorsque vous promouvez quelqu\u0026rsquo;un en tant qu\u0026rsquo;administrateur⋅rice ou propriétaire du salon, iel obtient un accès instantané à l\u0026rsquo;action \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;.\nLorsque vous retirez les droits d\u0026rsquo;administrateur⋅rice ou de propriétaire à quelqu\u0026rsquo;un, cette personne ne peut plus créer de nouveaux sondages. Mais un éventuel sondage existant continuera jusqu\u0026rsquo;à ce qu\u0026rsquo;il se termine.\nTous les utilisateur⋅rices qui ne sont pas en sourdine peuvent voter. Cela signifie que vous pouvez empêcher les utilisateur⋅rices anonymes de voter en utilisant la fonctionnalité [\u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026ldquo;](/peertube-plugin-livechat/fr/documentation/user/streamers/moderation).\nFlux de travail des sondages Lorsque les sondages commencent, un premier message est envoyé dans le tchat, à partir du compte de l\u0026rsquo;utilisateur⋅rice qui a créé le sondage.\nUne bannière apparaîtra également pour indiquer le sondage en cours, et sera régulièrement mise à jour avec les votes en cours.\nLes spectateur⋅rices peuvent ensuite voter en cliquant sur leur choix, ou en envoyant un message du type \u0026ldquo;!1\u0026rdquo; dans le tchat.\nLe décompte des votes sera mis à jour régulièrement dans la bannière.\nLes spectateur⋅rices peuvent modifier leur vote à tout moment, en faisant un nouveau choix. Le choix précédent sera remplacé par le nouveau.\nLes spectateur⋅rices anonymes ne peuvent voter que lorsqu\u0026rsquo;iels ont choisi leur pseudonyme.\n Si \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; est coché, les votes ne seront pas montrés aux autres utilisateur⋅rices. Si cette option n\u0026rsquo;est pas cochée, les votes seront visibles publiquement sous forme de messages du type \u0026ldquo;!1\u0026rdquo; dans le tchat.\nPour les spectateur⋅rices utilisant des clients XMPP ou des versions obsolètes du plugin livechat, la bannière ne sera pas visible. Mais iels verront le message dans le tchat et pourront voter en envoyant des messages avec leurs choix.\n À la fin du sondage, un nouveau message sera envoyé dans le tchat, avec les résultats.\nLe seul moyen d\u0026rsquo;obtenir les résultats d\u0026rsquo;anciens sondages est de rechercher le message de fin de sondage dans le tchat. Pour l\u0026rsquo;instant, les résultats des sondages ne sont pas sauvegardés par d\u0026rsquo;autres moyens. N\u0026rsquo;oubliez donc pas de noter les résultats des sondages si vous souhaitez les conserver.\n "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/tasks/","title":"Tâches / listes de choses à faire","tags":[],"description":"Vous pouvez gérer les tâches et les listes de tâches avec votre équipe de modération.","content":" Cette fonctionnalité arrive avec le plugin livechat version 10.0.0.\n Introduction Le plugin livechat comprend une Application de Tâches : une sorte de \u0026ldquo;liste de choses à faire\u0026rdquo; où vous pouvez créer des listes de tâches et y ajouter des tâches. Les administrateur⋅rices de chaque salon de discussion ont accès à ces tâches, ce qui vous permet de les modifier de manière collaborative.\nVous pouvez par exemple utiliser l\u0026rsquo;Application de Tâches pour :\n préparez une liste des thèmes que vous souhaitez aborder lors de votre direct, afin d\u0026rsquo;être sûr de ne rien oublier mettre en évidence les questions de vos spectateur⋅rices, afin que vous puissiez y revenir plus tard sans oublier d\u0026rsquo;y répondre \u0026hellip;  Utilisation de l\u0026rsquo;Application Tâches Ouverture de l\u0026rsquo;Application Tâche Pour ouvrir l\u0026rsquo;Application Tâches, il y a un bouton «SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only » dans le menu haut du tchat :\nEn cliquant sur ce bouton, l\u0026rsquo;affichage de l\u0026rsquo;Application de Tâches bascule :\nPour avoir plus d\u0026rsquo;espace et une meilleure lisibilité, ouvrez le tchat en mode pleine page.\n Droits d\u0026rsquo;accès Les administrateur⋅rices de chaque salon de discussion ont accès à l\u0026rsquo;application de tâches (accès en lecture et en écriture).\nLorsque vous promouvez quelqu\u0026rsquo;un en tant qu\u0026rsquo;administrateur⋅rice ou propriétaire d\u0026rsquo;un salon, iel obtient un accès instantané à l\u0026rsquo;Application Tâches. Lorsque vous retirez les droits d\u0026rsquo;admin ou de propriétaire à quelqu\u0026rsquo;un, iel perd instantanément l\u0026rsquo;accès à l\u0026rsquo;Application Tâches.\nListes de tâches Par défaut, il y a une liste de tâches portant le même nom que votre direct.\nVous pouvez utiliser le formulaire en bas de page pour créer une nouvelle liste de tâches. Vous pouvez également modifier les listes de tâches existantes à l\u0026rsquo;aide du bouton \u0026ldquo;modifier\u0026rdquo; ou supprimer n\u0026rsquo;importe quelle liste de tâches. La suppression d\u0026rsquo;une liste de tâches entraîne la suppression de toutes les tâches qu\u0026rsquo;elle contient.\nLes listes de tâches sont triées par ordre alphabétique.\nToutes les modifications sont instantanément visibles dans tous les onglets de votre navigateur, et pour tous les administrateur⋅rices du salon.\n Tâches Créer des tâches Vous pouvez créer une tâche en utilisant le bouton situé à droite des listes de tâches. Un formulaire s\u0026rsquo;ouvre alors avec deux champs : un nom de tâche obligatoire et une description facultative.\nModifier les tâches Les tâches peuvent être modifiées en utilisant le bouton d\u0026rsquo;édition à droite.\nLes tâches peuvent être marquées comme terminées (ou non terminées) en cliquant directement sur la case à cocher dans la liste.\nTrier les tâches / changer de liste des tâches Vous pouvez trier les tâches ou les déplacer d\u0026rsquo;une liste à l\u0026rsquo;autre par simple \u0026ldquo;glisser-déposer\u0026rdquo;.\nCréer une tâche à partir d\u0026rsquo;un message du tchat Vous pouvez créer une tâche à partir d\u0026rsquo;un message du tchat, en utilisant le bouton \u0026ldquo;SPDX-FileCopyrightText: 2024 John Livingston https://www.john-livingston.fr/\nSPDX-License-Identifier: AGPL-3.0-only \u0026quot; dans le menu déroulant à droite du message. Cela ouvrira une boîte de dialogue dans laquelle vous pourrez choisir la liste de tâches dans laquelle vous souhaitez ajouter la tâche. Le nom de la tâche sera le pseudonyme de l\u0026rsquo;utilisateur⋅rice, et la description de la tâche le contenu du message.\nGrâce à cette fonctionnalité, vous pouvez par exemple demander à vos modérateur⋅rices de relever toutes les questions du tchat, afin que vous puissiez les voir d\u0026rsquo;un seul coup d\u0026rsquo;œil pendant votre direct, et vérifier que vous y avez répondu.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/documentation/user/streamers/bot/","title":"Bot de tchat","tags":[],"description":"Configuration du bot de tchat","content":" Cette fonctionnalité arrive avec le plugin livechat version 8.0.0, et peut être désactivée par les admins de votre instance.\n Vous pouvez activer un bot de tchat dans vos salons. La configuration du bot se fait chaîne par chaîne, et s\u0026rsquo;applique aux salons de toutes les vidéos de celles-ci.\nPour accéder à cette page, veuillez vous référer à la documentation sur la configuration des chaînes.\nUne fois ici, vous pouvez activer le bot, et configurer quelques options :\n Mots interdits  Le bot peut automatiquement modérer les messages contenant des mots interdits.\n   Messages pré-enregistrés  Le bot peut envoyer des messages périodiquement.\n   Commandes  Le bot peut répondre à différentes commandes.\n   Le bot recharge automatiquement ses options quand vous sauvegardez la page.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/","title":"","tags":[],"description":"","content":"PeerTube plugin livechat Vous pouvez utiliser le sélecteur de langue dans le menu de gauche pour afficher cette documentation dans différentes langues. Certaines traductions sont manquantes ou incomplètes. Dans ce cas, vous verrez la version anglaise du texte.\n Bienvenue sur la documentation du Plugin Peertube Livechat.\nPeertube est une plateforme de streaming décentralisée, qui peut permettre de diffuser aussi bien des directs que de la vidéo à la demande (VOD : Video On Demand). Ce plugin permet d\u0026rsquo;ajouter la possibilité de tchatter à votre installation Peertube, permettant ainsi des interactions avec les streameur⋅euses.\nPour avoir un aperçu des possibilités de ce plugin, aller jeter un œil à l\u0026rsquo;introduction. Pour des informations plus précises, vous trouverez plus bas le sommaire de cette documentation.\nVous pouvez utiliser la barre de recherche dans le menu gauche pour rapidement trouver des documentations spécifiques.\n Avant de mettre à jour le plugin vers une nouvelle version majeure, merci de lire les notes de version, et la liste des éventuelles modifications non rétro-compatibles : CHANGELOG.\n  Introduction  Introduction\n   Documentation  Documentation du plugin\n  Documentation utilisateur⋅rice  Documentation utilisateur⋅rice du plugin peertube-plugin-livechat\n  Pour les spectateur⋅rices  Comment tchater pour les spectateur⋅rices\n   OBS  Documentation pour diffuser le contenu du tchat à l\u0026#39;aide d\u0026#39;OBS.\n   Clients XMPP  Se connecter au tchat avec un client XMPP\n   Pour les streameur⋅euses  Comment mettre en place le tchat pour vos diffusions en direct\n  Quelques basiques  Quelques informations de base sur comment configurer et utiliser le tchat pour vos directs\n Configuration de la chaîne  Configuration des salons de discussion des chaînes Peertube\n Modération  Fonctions de modération avancées du plugin peertube-plugin-livechat\n Conditions d\u0026#39;utilisation  Configurer les conditions d\u0026#39;utilisation des tchats de la chaîne\n Mode lent  Mode lent du plugin peertube-plugin-livechat\n Délai de modération  Plugin peertube-plugin-livechat délai de modération\n Emojis personnalisés  Emojis personnalisés du plugin peertube-plugin-livechat\n Sondages  Vous pouvez créer des sondages pour demander l\u0026#39;avis des spectateur⋅rices.\n Tâches / listes de choses à faire  Vous pouvez gérer les tâches et les listes de tâches avec votre équipe de modération.\n Bot de tchat  Configuration du bot de tchat\n   Documentation d\u0026#39;installation  Installation du plugin peertube-plugin-livechat\n  En cas de problème  Quelques erreurs classiques, et solutions de contournement.\n   Problème connu : compatibilité CPU  Pour l\u0026#39;instant le plugin ne supporte de base que les architectures CPU x86_64 et arm64. Veuillez trouver ici des instructions pour le faire fonctionner sur d\u0026#39;autres architectures CPU.\n   Mise à jour depuis une version antérieure à 6.0.0  Notes importantes pour la mise à jour depuis une ancienne version du plugin.\n    Documentation administrateur⋅rice  Administration du Plugin Peertube Livechat\n  Paramètres  Paramètres du Plugin Peertube Livechat\n   Authentification externe  Paramètres du Plugin Peertube Livechat - Authentification Externe\n   Usage avancé  Quelques fonctionnalités avancées\n  Clients XMPP  Autoriser la connexion en utilisant des clients XMPP\n Utiliser Matterbridge  Utiliser Matterbridge pour faire un pont vers d\u0026#39;autres tchats\n    Contribuer  Contribuer\n  Code de conduite  Convention de Code de conduite Contributeur⋅rices\n   Traduction  Traduire le plugin\n   Donnez vos retours  Donnez vos retours\n   Développer  Développer\n   Documentation  Documenter le plugin, ou traduire la documentation.\n    Évolutions / Bugs  Évolutions / suivi des bugs\n   Technical documentation  Technical documentation\n  Source code  Source code organization\n   Third party  Displaying the livechat with 3rd party software.\n   Plugin storage  Data files and folders used on the server\n   MUC Slow mode  MUC Slow mode XEP\n   Sondages  Polls technical documentation\n   Terms\u0026amp;Conditions  Terms\u0026amp;Conditions implementation\n   Tasks overview  Task Application technical overview\n    Me contacter  Contacter l\u0026#39;auteur\n   Crédits  Crédits pour le plugin\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/fr/tags/","title":"Tags","tags":[],"description":"","content":""}]