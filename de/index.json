[{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/intro/","title":"Einführung","tags":[],"description":"Einführung","content":"What is the livechat plugin? This Peertube plugin is meant to provide a chat system for Peertube videos.\nBy default, once you have installed the plugin on your Peertube instance, a chat room will automatically be created for each live stream.\nOn the following screenshot, you can see a classic Peertube video page, with a chat room on the right (click on the picture to view it full screen):\nThe chat room will be accessible for all viewers, even those who don\u0026rsquo;t have an account on your instance. Those \u0026ldquo;anonymous\u0026rdquo; users just have to choose a nickname before they can begin talking in the chat.\nBy default, the chat is displayed next to the video. But you can open it in another browser tab, using the button on top of it :\nYou can test the livechat plugin with this demo page.\n Installation As a Peertube administrator, you can setup this plugin on your instance simply by using the Peertube plugin marketplace included in the administration interface. Search for \u0026ldquo;livechat\u0026rdquo;, then click \u0026ldquo;install\u0026rdquo;: that\u0026rsquo;s it!\nLivechat capabilities The plugin has many advanced features. As it is using the XMPP standard \u0026ldquo;under the hood\u0026rdquo;, it is possible for Peertube administrators to allow advanced usages (connection using XMPP clients, chatbots, bridge to other chat protocols, \u0026hellip;). More information in the relevant sections of this documentation.\nFöderation Peertube is part of the fediverse: you can create a network of Peertube instances, sharing content between them.\nThis plugin can handle federation: when viewing a livestream from a remote instance, you will join the chat room with your local account. You will be automatically connected with your current nickname and avatar.\nOf course, for the federation to work, the plugin must be installed on both instances.\nModeration Some times, you have to protect your community from bad people. As an instance administrator, you can choose to disallow federation for the livechat plugin. If remote actors behave badly, streamers, moderators and administrators can ban or mute users.\nChat persistence When joining a room, you will see previous messages. Even those sent before you joined the room.\nThis behaviour can be changed room by room, and default retention duration can be chosen by instance\u0026rsquo;s administrators.\nIntegrate the chat in your live stream When using software as OBS for you live stream, you can embed the chat in the video stream. This is for example useful for replays.\nIn the following screenshot, you can see a live replay, where the chat content is embeded on bottom of the video:\nIn the following screenshot, you can see an OBS setup, where the chat is included as a source in the current scene (background color can be changed, and can be transparent):\nOther usages By default, each streamer will be able to activate/deactivate the chat for their live streams.\nBut on the instance level, administrators can choose to activate the chat for all videos (live and/or VOD).\nYou can even activate the chat for specific VOD videos. This is how the demo page works: it is not a live stream, but I have activated the chat specifically for this video.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/","title":"Benutzer Dokumentation","tags":[],"description":"Plugin peertube-plugin-livechat Benutzer Dokumentation","content":"  For viewers  How to chat for stream viewers\n   For streamers  How to setup the chat for your live stream\n   Moderation  Plugin peertube-plugin-livechat Moderation\n   OBS  Dokumentation zum Streamen des Chat-Inhalts mit OBS.\n   XMPP Clients  Verbindung zum Chat über einen XMPP-Client\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/","title":"Dokumentation","tags":[],"description":"Plugin Dokumentation","content":"  Benutzer Dokumentation  Plugin peertube-plugin-livechat Benutzer Dokumentation\n  For viewers  How to chat for stream viewers\n   For streamers  How to setup the chat for your live stream\n   Moderation  Plugin peertube-plugin-livechat Moderation\n   OBS  Dokumentation zum Streamen des Chat-Inhalts mit OBS.\n   XMPP Clients  Verbindung zum Chat über einen XMPP-Client\n    Installationsanleitung  Plugin peertube-plugin-livechat Installationsanleitung\n  Fehlerbehebung  Some classic mistakes and workarounds.\n   Bekannte Probleme: CPU Kompatibilität  Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.\n   Aktualisieren von Versionen vor 6.0.0  Wichtige Hinweise zum aktualisieren von älteren Versionen.\n    Admin Dokumentation  Plugin Peertube Livechat Administation\n  Einstellungen  Plugin Peertube Livechat Einstellungen\n   Fortgeschrittene Nutzung  Einige erweiterte Funktionen\n  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/settings/","title":"Einstellungen","tags":[],"description":"Plugin Peertube Livechat Einstellungen","content":"Dieser Abschnitt beschreibt die Seite mit den Plugin Einstellungen.\nBestehende Räume auflisten Wenn Sie auf die Schaltfläche «Räume auflisten» klicken, werden alle bestehenden Chaträume aufgelistet. Sie können sie dann finden und moderieren.\nFöderation Die folgenden Einstellungen betreffen die Föderation mit anderen Peertube Instanzen und anderer Fediverse-Software.\nChats von anderen Instanzen nicht anzeigen Wenn Sie diese Einstellung aktivieren, werden in Ihrer Instanz niemals Chats von Videos anderer Instanzen angezeigt. Chat-Information nicht veröffentlichen Wenn Sie diese Einstellung aktivieren, wird Ihre Instanz keine Chat Informationen im Fediverse veröffentlichen. Andere Peertube-Instanzen wissen nicht, dass mit Ihren Videos Chaträume verbunden sind.\nBitte beachten Sie: Wenn Sie bereits Chats geführt haben, ist es möglich, dass die Informationen bereits veröffentlicht wurden. Sie müssen das nächste Video Update abwarten, bevor die Informationen nicht mehr öffentlich zugänglich sind. Wenn Sie diese Einstellung deaktivieren, müssen Sie außerdem warten, bis die Videos aktualisiert wurden, bevor die Informationen erneut veröffentlicht werden. Diese Aktualisierung erfolgt unter anderem, wenn ein Live Event fortgesetzt oder beendet wird.\nBitte beachten Sie: Diese Einstellung betrifft nur die Veröffentlichung von Informationen über das ActivityPub-Protokoll. Dies hindert eine entfernte Anwendung nicht daran, das Vorhandensein von Chats zu erkennen und zu versuchen, eine Verbindung herzustellen. Chatverhalten Raumtyp Sie können hier wählen, ob Sie für jedes Video einen eigenen Raum haben möchten oder ob Sie sie nach Kanälen gruppieren möchten. Chat automatisch öffnen Wenn ausgewählt wird der Chat geladen, sobald Sie auf der Videoseite sind. Zeige den «Chat in neuem Fenster öffnen» Knopf Es wird einen Knopf zum Öffnen des Webchats in einem neuen Fenster geben. Zeige den «Chat Link teilen» Knopf Diese Funktion fügt eine «Chat-Link teilen» Schaltfläche hinzu. Mit dieser Schaltfläche können Sie URLs generieren, um dem Chat beizutreten. Der Chat kann angepasst werden (schreibgeschützter Modus, Verwendung des aktuellen Themas, \u0026hellip;).\nSie können zum Beispiel eine schreibgeschützte URL generieren und diese in OBS verwenden, um den Chat in Ihren Live-Stream zu integrieren!\nMit diesen Einstellungen können Sie festlegen, wer auf diese Schaltfläche zugreifen kann.\nNutzer können den Chat für ihre Live-Videos aktivieren Wenn diese Option aktiviert ist, haben alle Live-Videos in ihren Eigenschaften ein Feld zur Aktivierung des Webchats. Der Eigentümer des Videos kann Webchats aktivieren.\nChat für alle Live-Videos aktivieren Wenn diese Option markiert ist, wird der Chat für alle Live-Videos aktiviert. Chat für alle Nicht-Live-Videos aktivieren Chat für alle Nicht-Live-Videos aktivieren Chat für diese Videos aktivieren Chat für diese Videos aktivieren Chat für anonyme Benutzer ausblenden Wenn die Option aktiviert ist, können anonyme Peertube-Nutzer den Chat nicht sehen. Diese Funktion ist noch experimentell. Wenn Sie diese Option aktiviert haben, wird empfohlen auch die Option \"Chat-Informationen nicht veröffentlichen\" zu aktivieren. Andernfalls könnten einige Tools von Drittanbietern versuchen, den Chat zu öffnen, und ein unvorhersehbares Verhalten verursachen. Hinweis: Im Moment blendet diese Funktion einfach den Chat aus. In einer zukünftigen Version wird der Chat durch eine Meldung ersetzt, die besagt «Bitte melden Sie sich an, um [\u0026hellip;]». Siehe v5.7.0 Release Notes für weitere Informationen.\nFarbthemen ConverseJS Thema Sie können wählen, welches Thema Sie für ConverseJS verwenden möchten:\n Peertube theme: Dies ist ein spezielles Thema, das speziell für die Integration von Peertube entwickelt wurde. Default ConverseJS theme: Dies ist das standard ConverseJS Thema. ConverseJS concord theme: Dies ist ein von ConverseJS bereitgestelltes Thema.  Automatische Farberkennung Versucht, die Farben des aktuellen Themas des Benutzers automatisch zu erkennen.\nWenn diese Einstellung aktiviert ist, versucht das Plugin, die Farben für das Chat-Thema automatisch zu erkennen.\nWenn dies für einige Ihrer Peertube-Themen nicht korrekt funktioniert, können Sie diese Option deaktivieren. Sie können den Fehler im offiziellen Issue Tracker  melden. Vergessen Sie nicht anzugeben, welches Thema nicht funktioniert. Webchat Iframe Stil-Attribut Sie können einige benutzerdefinierte Stile hinzufügen, die dem Iframe hinzugefügt werden. Zum Beispiel eine benutzerdefinierte Breite: width:400px; Erweiterte Einstellungen des Chatservers System Prosody benutzen Das Plugin wird mit einem AppImage geliefert, das zum Ausführen des [Prosody XMPP-Servers] (https://prosody.im) verwendet wird. Wenn dieses AppImage nicht funktioniert, können Sie auf das Prosody-Paket zurückgreifen, das für Ihren Server gepackt ist. Installieren Sie einfach das Paket prosody.\nDiese Einstellung sollte nur verwendet werden, wenn das Plugin defekt ist und auf einen Patch wartet.\nWebsocket deaktivieren Mit Peertube \u0026gt;= 5.0.0 versucht dieses Plugin, eine Websocket-Verbindung zum Chatten zu verwenden. Wenn der Browser oder die Verbindung des Benutzers nicht kompatibel ist, wird der Browser automatisch auf das BOSH-Protokoll zurückgreifen. Aber in seltenen Fällen kann dies fehlschlagen. Zum Beispiel, wenn Sie einen Reverse Proxy vor Peertube haben, der keine Websocket-Verbindung für Plugins erlaubt. In diesem Fall können Sie diese Einstellungen überprüfen, um Websocket-Verbindungen zu deaktivieren. Prosody Port Der Port, der vom integrierten Prosody-Server verwendet wird.\nÄndern Sie ihn, wenn dieser Port bereits auf Ihrem Server verwendet wird.\nSie können diesen Port auf Ihrer Firewall schließen, es wird nicht von der Außenwelt darauf zugegriffen. Hinweis: Dies könnte sich in naher Zukunft ändern, da geplant ist, eine Funktion zum Aktivieren externer Verbindungen hinzuzufügen. Peertube-URL für API-Aufrufe Bitte lassen Sie diese Einstellungen leer, wenn Sie nicht wissen, was Sie tun.\nIn einigen seltenen Fällen kann Prosody die API von Peertube nicht von seiner öffentlichen URI aufrufen. Sie können dieses Feld verwenden, um die URI von Peertube für Prosody-Module anzupassen (z.B. mit «http://localhost:9000» oder «http://127.0.0.1:9000»). Standardmäßig Inhalte von Räumen protokollieren Wenn diese Option aktiviert ist, werden die Rauminhalte standardmäßig gespeichert. Jeder Benutzer, der einem Raum beitritt, sieht, was bereits geschrieben wurde, bevor er dem Chat beitrat.\nBitte beachten Sie, dass es immer möglich ist, die Inhaltsarchivierung für einen bestimmten Raum zu aktivieren/deaktivieren, indem Sie seine Eigenschaften bearbeiten. Ablaufzeit von Raumprotokollen Sie können hier auswählen, wie lange der Inhalt des Chatrooms vom Server aufbewahrt wird. Der Wert kann sein:  60: Der Inhalt wird 60 Sekunden gespeichert. Sie können 60 durch einen beliebigen ganzzahligen Wert ersetzen. 1d: Der Inhalt wird für 1 Tag gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. 1w: Der Inhalt wird für 1 Woche gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. 1m: Der Inhalt wird für 1 Monat gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. 1y: Der Inhalt wird für 1 Jahr gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. nie: Der Inhalt läuft nie ab und wird für immer aufbewahrt.  Verbindung zum Raum mit externen XMPP Konten aktivieren Durch Aktivieren dieser Option ist es möglich, über externe XMPP-Konten und XMPP-Clients eine Verbindung zu Räumen herzustellen.\nAchtung: Durch die Aktivierung dieser Option können zusätzliche Server- und DNS-Konfigurationen erforderlich sein. Bitte beachten Sie die Dokumentation: Aktivieren Sie externe XMPP-Kontoverbindungen.  Prosody Server Port zu Server Port Der Port, der für XMPP s2s-Verbindungen (Server zu Server) verwendet wird.\nSie sollten den Standardport 5269 verwenden. Andernfalls müssen Sie einen bestimmten DNS Eintrag erstellen . Server zu Server Netzwerkschnittstellen Die Netzwerkschnittstellen, die für Server zu Server Verbindungen verwendet werden sollen.\nListe der zu nutzenden IPs, durch Kommata getrennt (Leerzeichen werden entfernt).\nSie können «*» verwenden, um alle IPv4-Schnittstellen zu nutzen, und «::» für alle IPv6-Schnittstellen.\nBeispiele:  *, :: * 127.0.0.1, ::1 172.18.0.42  Zertifikate Ordner Wenn dieses Feld leer ist, erzeugt und verwendet das Plugin selbstsignierte Zertifikate.\nWenn Sie andere Zertifikate verwenden wollen, geben Sie hier einfach den Ordner an, in dem Prosody sie finden kann. Hinweis: Der Benutzer \"peertube\" muss Lesezugriff auf diesen Ordner haben. Aktivieren von Client-Server-Verbindungen Ermöglichen Sie XMPP-Clients die Verbindung zum integrierten Prosody-Server.\nDiese Option allein lässt nur Verbindungen von localhost-Clients zu. Diese Einstellung ermöglicht es XMPP-Clients, sich mit dem eingebauten Prosody-Server zu verbinden. Im Moment erlaubt diese Option nur Verbindungen von localhost-Clients.\nZum Beispiel kann diese Option einer Instanz von Matterbridge (sobald sie einen anonymen Login verwenden kann) auf demselben Rechner erlauben, Ihren Chat mit einem anderen Dienst wie einem Matrix-Raum zu verbinden.\nProsody Client-Server-Verbindungsport Der Port, der vom c2s-Modul des integrierten Prosody-Servers verwendet wird.\nXMPP-Clients müssen diesen Port zum Verbinden verwenden.\nÄndern Sie ihn, wenn dieser Port bereits auf Ihrem Server verwendet wird.\nSie können diesen Port auf Ihrer Firewall vorerst geschlossen halten, es wird nicht von der Außenwelt darauf zugegriffen. Hinweis: Dies könnte sich in naher Zukunft ändern, da geplant ist, eine Funktion zum Aktivieren externer Verbindungen hinzuzufügen. Aktivieren externer XMPP-Komponenten Diese Einstellung ermöglicht es externen XMPP-Komponenten, sich mit dem Server zu verbinden. Im Moment erlaubt diese Option nur Verbindungen von localhost-Komponenten.\nDiese Funktion könnte für die Verbindung von Brücken oder Bots genutzt werden.\nWeitere Informationen zu den externen Komponenten von Prosody finden Sie [hier] (https://prosody.im/doc/components).\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/troubleshooting/","title":"Fehlerbehebung","tags":[],"description":"Some classic mistakes and workarounds.","content":"I just installed/upgraded the plugin, but nothing happens If you have just installed/upgraded the plugin, but nothing happens (no chat, no settings, buttons in the settings page does not work, \u0026hellip;), just try to reload the page.\nDiagnostic tool If the chat does not work, there is a diagnostic tool in the plugin\u0026rsquo;s settings pages.\nOpen the plugin settings, and click on the \u0026ldquo;launch diagnostic\u0026rdquo; button.\nIf there is any error in the diagnostic page, you can search in this page for a solution, or refer to the Bug tracking documentation page if you can\u0026rsquo;t find any response.\nChat does not load Internal API calls In some case (like for some Docker Peertube installation), the diagnostic tools displays an error for the test called \u0026ldquo;API Prosody -\u0026gt; Peertube is KO\u0026rdquo;.\nIn such case, try changing the \u0026ldquo;Peertube-URL für API-Aufrufe\u0026rdquo; settings, by setting http://127.0.0.1:9000 (assuming 9000 is the port on which Peertube listen, ask your instance administrators if you don\u0026rsquo;t know).\nWebsocket If everything is fine in the diagnostic tools, but chat windows remains empty: it can be a Websocket issue. Since Peertube version 5.0.0, there are some additional configuration to do on the server side. Check with the instance administrators that they did not forgot to apply changes listed in the Peertube v5.0.0 release notes.\nYou can confirm that it is a Websocket issue by opening your browser console, and checking for error logs talking about failed Websocket connection.\nIf you can\u0026rsquo;t fix this immediatly, you can disable Websocket by unchecking \u0026ldquo;Websocket deaktivieren\u0026rdquo; in the plugin setting page. In such case, you should also check \u0026ldquo;Chat-Information nicht veröffentlichen\u0026rdquo;, as chat federation won\u0026rsquo;t work without Websocket.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/viewers/","title":"For viewers","tags":[],"description":"How to chat for stream viewers","content":"Joining chat rooms When you are watching a Peertube video that has the chat activated, you will see the chat next to the video:\nThere are two slightly different use cases, depending on wether or not you have an account on the Peertube instance. See bellow for more informations.\nIf you haven\u0026rsquo;t a Peertube account This feature can be disabled by the instance\u0026rsquo;s adminitrators.\n If you are not logged in on the Peertube instance where you are watching the video, you will automatically join the chat. You will be assigned a random nickname (something like \u0026ldquo;Anonymous 12345\u0026rdquo;).\nBefore being able to speak in the chat room, you have to enter a nickname in the field on the bottom of the window.\nIf you have a Peertube account If you are connected with your Peertube account, you will automatically join the room, using your Peertube nickname and avatar.\nIf you are watching a live on an instance on which you have no account, but you have an account on another instance: if the livechat plugin is installed on both instances, it is possible to join the chat using your account. To do so, just open the video on your instance (you can for example copy/paste the video url in the search field of your instance).\n Chatting To send messages, just type them in the \u0026ldquo;message\u0026rdquo; field on the bottom of the screen. You can send them by pressing the enter key on your keyboard, or by clicking on the \u0026ldquo;send\u0026rdquo; button.\nIf you want to add line breaks in your messages, you can use the \u0026ldquo;shift+enter\u0026rdquo; key combinaison.\nYou can add emojis to your messages. You can for example use the emojis menu, or directly type emojis shortcuts like :smiley:.\nYou can mention other participants. To do so, you can type the first nickname letters, then press the tab key. You can also type @: this will directly open the menu. You can also click on a nickname in the participants list to insert it in the message field.\nParticipants list To see the list of participants, just open the right menu:\nYou can see that some participants have special rights (moderator, owner, \u0026hellip;).\nOpening full screen On top of the chat, there is a button to open the chat in fullscreen. This will open a new browser tab with the following content:\nIt can be easier to chat using a full browser tab.\nThis fullscreen view also adds a top menu with advances features. This is especially useful for moderation features.\nChanging nickname You can change your nickname by typing /nickname your_new_nickname in the message field.\nYou can also change your nickname using the top menu when you are in fullscreen mode.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/codeofconduct/","title":"Verhaltenskodex","tags":[],"description":"Vereinbarung über Verhaltenskodex für Mitwirkende","content":" Dieser Verhaltenskodex basiert auf dem Contributor Covenant, Version 2.1, verfügbar unter https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Übersetzungen sind unter https://www.contributor-covenant.org/translations verfügbar. Fälle von beleidigendem, belästigendem oder anderweitig inakzeptablem Verhalten können den für die Durchsetzung verantwortlichen Gemeinschaftsleitern per E-Mail an git.[at].john-livingston.fr gemeldet werden.\n Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\nOur Standards Examples of behavior that contributes to a positive environment for our community include:\n Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community  Examples of unacceptable behavior include:\n The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting  Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\nScope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement by mail at git.[at].john-livingston.fr. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\nEnforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n1. Correction Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n2. Warning Community Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n3. Temporary Ban Community Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n4. Permanent Ban Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla\u0026rsquo;s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/cpu_compatibility/","title":"Bekannte Probleme: CPU Kompatibilität","tags":[],"description":"Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.","content":"Das im Plugin enthaltene Prosody AppImage funktioniert nur mit x86_64 und arm64 CPU Architekturen. Es ist nicht kompatibel mit anderen CPU-Architekturen.\nUm das Plugin zu verwenden, müssen Sie Prosody manuell auf Ihrem Server installieren (siehe unten).\nHinweis: Das Plugin erfordert Prosody \u0026gt;= 0.12.0. Wenn Sie eine ältere Version verwenden, könnte die Chat Federation nicht funktionieren und ein unerwartetes Verhalten zeigen.\nSobald dies geschehen ist, müssen Sie in den Plugin-Einstellungen das Häkchen bei Use system Prosody setzen.\nNicht-Docker Peertube installation Für die Standardinstallation müssen Sie nur das offizielle prosody-Paket für Ihre Linux-Distribution installieren.\nZum Beispiel, auf Debian/Ubuntu:\nsudo apt install prosody Sie können dann den Dienst deaktivieren, der automatisch startet, wenn Sie Prosody installieren (das Plugin startet einen Prosody-Prozess, der Dienst muss nicht dauerhaft laufen). Zum Beispiel unter Debian/Ubuntu (und anderen Systemd-basierten Linux-Distributionen):\nsudo systemctl disable prosody \u0026amp;\u0026amp; sudo systemctl stop prosody Achtung: Deaktivieren Sie Prosody nicht, wenn es für einen anderen Dienst auf Ihrem Server verwendet wird, wie zum Beispiel Jitsi.\nDocker Sie müssen ein Peertube-Image generieren, das Prosody in demselben Container enthält, der auch Peertube beinhaltet. Ich weiß, dass dies nicht der Standardweg ist, um dies mit Docker zu tun, aber bedenken Sie, dass eine vorübergehende Lösung ist.\nUm ein solches Image zu erzeugen und zu verwenden, lesen Sie bitte die Docker-Dokumentation. Die Docker-Datei, um das Paket zu erzeugen, sollte wie folgt sein:\nFROMchocobozzz/peertube:production-bullseyeRUN apt -y update \u0026amp;\u0026amp; apt install -y prosody \u0026amp;\u0026amp; apt -y cleanYunohost Sie müssen metronome (der von Yunohost bereitgestellte XMPP-Server) deaktivieren, und prosody installieren.\nDies wird bereits von der Yunohost Peertube Anwendung gemacht, da es für das Plugin vor v6.0.0 erforderlich war.\nEs kann aber sein, dass es in naher Zukunft entfernt wird (um die Nachteile dieser Methode zu vermeiden). Ich muss mit dem Yunohost Team diskutieren, um zu entscheiden, wie wir die Nachteile minimieren können, und die Kompatibilität zu maximieren.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/","title":"For streamers","tags":[],"description":"How to setup the chat for your live stream","content":"Enabling the chat for you live streams Instance administrators can choose to disable or enable chat in specific cases. Information in this section are only true in the default case.\n When you create or modify a Peertube live, there is a \u0026ldquo;plugin settings\u0026rdquo; tab:\nIn the \u0026ldquo;plugin settings\u0026rdquo; tab, there is a \u0026ldquo;Chat nutzen\u0026rdquo; checkbox. Just check or uncheck it to enable or disable the chat associated to your video.\nThere can be other settings in this tab, depending on plugins installed on your Peertube instance.\n Per channel chat On the instance level, Peertube\u0026rsquo;s administrators can choose if chat rooms are unique per video, or if there will be an unique chat room per channel. Please contact your instance\u0026rsquo;s administrators for more information on how they configure the livechat plugin.\nShare the chat On top of the chat, there is a \u0026ldquo;Chat Link teilen\u0026rdquo; button.\nThis button opens a popup, where you can obtain an url to join the chat. This url can be shared.\nYou can customize some options:\n Nur-Lesen: you will only be able to read the chat, not write. This is useful to include the chat content in your live stream (see the OBS documentation). Die derzeitigen Themenfarben nutzen: if checked, your current theme colors will be added to the url, so that any user that opens the link will have the same color set. IFrame-Element erstellen, um den Chat in eine Webseite zu integrieren: instead of an url, you will obtain an HTML snippet that you can add to your website to embed the chat.  The \u0026ldquo;Chat Link teilen\u0026rdquo; popup can also contain a \u0026ldquo;Mit XMPP verbinden\u0026rdquo; tab. This will only be available if your instance\u0026rsquo;s administators have enabled an correctly configured this option. Using this option, you can provide a link to join the chat using any XMPP client software. Using such softwares can for example facilitate moderation actions.\nModeration Please refer to the moderation documentation.\nInclude the chat in your video stream Please refer to the OBS documentation.\nChat persistence By default, the chat is persistent. This means that the room content will be kept for a while. User joining will see messages posted before their arrival.\nYou can change the persistence behaviour. Open the chat in fullscreen, then open the top menu and click on \u0026ldquo;Configure\u0026rdquo;.\nThere are several options that can be changed.\nYou can for example set the default and maximum number of messages to return to 0, so that new incomers won\u0026rsquo;t see any previously sent message.\nYou can also uncheck \u0026ldquo;enable archiving\u0026rdquo;: if unchecked, messages will be pruned if the server restarts.\nBy unchecking \u0026ldquo;Persistent\u0026rdquo;, the room will be cleared if there is no more participant.\nDelete the chat content If you want to delete the chat content, open the chat in fullscreen, then open the top menu and click on \u0026ldquo;Destroy\u0026rdquo;. A popup will open, asking a confirmation. To avoid errors, the popup will ask you the \u0026ldquo;XMPP address\u0026rdquo; of the chat room. This address can be obtain using the \u0026ldquo;Details\u0026rdquo; menu in the top menu.\nThe chat will be automatically recreated each time someone tries to join it as long as the video exists, and has the \u0026ldquo;Chat nutzen\u0026rdquo; feature activated.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/advanced/","title":"Fortgeschrittene Nutzung","tags":[],"description":"Einige erweiterte Funktionen","content":"  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n   Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/","title":"Installationsanleitung","tags":[],"description":"Plugin peertube-plugin-livechat Installationsanleitung","content":" Bevor Sie auf eine Hauptversion aktualisieren, lesen Sie bitte die Versionshinweise und die Liste der wichtigsten Änderungen : CHANGELOG.\n Um das Plugin zu installieren oder zu aktualisieren einfach das Peertube Web-Admin-Interface benutzen.\n Hier sind weitere, spezifischere Anweisungen:\n Fehlerbehebung  Some classic mistakes and workarounds.\n   Bekannte Probleme: CPU Kompatibilität  Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.\n   Aktualisieren von Versionen vor 6.0.0  Wichtige Hinweise zum aktualisieren von älteren Versionen.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/thirdparty/","title":"Third party","tags":[],"description":"Displaying the livechat with 3rd party software.","content":" This page describes experimental features. These features are available with the plugin version \u0026gt;= 7.2.0.\n Einführung Peertube is part of the Fediverse. So Peertube video can be watched from other Peertube instances, and from various other softwares:\n from a Mastodon (or other fediverse application) instance, from a mobile app (Fedilab, Tusky, \u0026hellip;), from desktop fediverse app, \u0026hellip;  This livechat plugin is using well known standards, so it is possible to join chat rooms even when not viewing the video on Peertube.\nThere are basically 2 ways to join the chat room associated to a video:\n opening a web page (with an url like https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535), using a XMPP client (and joining a room like xmpp://8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld?join)  Joining the chat using a XMPP client is not always possible. It requires some DNS and server configuration. It will only be possible if instance\u0026rsquo;s admins have correctly setup the external XMPP clients connection feature.\n Don\u0026rsquo;t try to gues these url and connection methods yourself. Please report to next chapters.\n Chat discovery Using ActivityPub The livechat plugin adds some data in Video ActivityPub objects, so that the chat can be discovered.\nThis requires Peertube \u0026gt;= 5.1\n This follows the FEP-1970 recommendations.\nAt the time of the writing, this FEP is in draft status, and the livechat plugin is a Proof-of-concept. Until the FEP is adopted, the specification can change, and the livechat plugin will be adapted accordingly.\n Basically, the chat will be declared as attachments on the Video object, using the discussion relation.\nBy default, here is an example of what you will get:\n{ \u0026#34;@context\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams\u0026#34;, \u0026#34;https://w3id.org/security/v1\u0026#34;, { \u0026#34;RsaSignature2017\u0026#34;: \u0026#34;https://w3id.org/security#RsaSignature2017\u0026#34; }, { // ...  } ], \u0026#34;to\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams#Public\u0026#34; ], \u0026#34;cc\u0026#34;: [ \u0026#34;https://yourinstance.tld/accounts/root/followers\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;Video\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;The video title\u0026#34;, // ...  \u0026#34;url\u0026#34;: [ /* ... */ ], \u0026#34;attachment\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; } ] } In case the instance has activated the external XMPP clients connection feature:\n{ \u0026#34;@context\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams\u0026#34;, \u0026#34;https://w3id.org/security/v1\u0026#34;, { \u0026#34;RsaSignature2017\u0026#34;: \u0026#34;https://w3id.org/security#RsaSignature2017\u0026#34; }, { // ...  } ], \u0026#34;to\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams#Public\u0026#34; ], \u0026#34;cc\u0026#34;: [ \u0026#34;https://yourinstance.tld/accounts/root/followers\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;Video\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;The video title\u0026#34;, // ...  \u0026#34;url\u0026#34;: [ /* ... */ ], \u0026#34;attachment\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;xmpp://8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld?join\u0026#34; } ] } Algorithm If you want to display the chat in a web page or in an iframe, here is what you should do:\n get the Video ActivityPub object, if there is no attachment key, stop. loop through the attachment values (if attachment is not an array, just iterate on this single value) search for an entry with rel === discussion, and with href using the https scheme (that begins with https://) if found, open this href  If you want to open the chat room using the XMPP protocol:\n get the Video ActivityPub object, if there is no attachment key, stop. loop through the attachment values (if attachment is not an array, just iterate on this single value) search for an entry with rel === discussion, and with href using the xmpp scheme (that begins with xmpp://) if found, open this xmpp uri with your client, or connect to the XMPP room at that address  Additional notes In the ActivityPub object, there is also a peertubeLiveChat entry. Don\u0026rsquo;t use the content of this entry. This is specific to the livechat plugin, and can be changed or removed in a near future. It is currently required for some endpoint discovery.\nUsing Podcast RSS feed The livechat plugin adds some data in Podcast RSS feeds under the \u0026lt;podcast:liveItem\u0026gt;, so that the chat can be discovered for live streams.\nThis requires Peertube \u0026gt;= 5.2\n The \u0026lt;podcast:chat\u0026gt; element is currently only supported for live streams.\n This follows the \u0026lt;podcast:chat\u0026gt; proposal.\nAt the time of the writing, this proposal is in draft status, and the livechat plugin is a Proof-of-concept. Until the proposal is adopted, the specification can change, and the livechat plugin will be adapted accordingly.\n Basically, the chat will be declared as tag under on the \u0026lt;podcast:liveItem\u0026gt; element.\nBy default, here is an example of what you will get:\n\u0026lt;podcast:liveItem status=\u0026#34;live\u0026#34; start=\u0026#34;2023-07-06T18:00:00.000Z\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The video title\u0026lt;/title\u0026gt; \u0026lt;guid isPermaLink=\u0026#34;false\u0026#34;\u0026gt;e32b4890-983b-4ce5-8b46-f2d6bc1d8819_2023-07-06T18:00:00.000Z\u0026lt;/guid\u0026gt; \u0026lt;link\u0026gt;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026lt;/link\u0026gt; \u0026lt;podcast:socialInteract uri=\u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; protocol=\u0026#34;activitypub\u0026#34; accountUrl=\u0026#34;https://yourinstance.tld/a/youraccount\u0026#34; /\u0026gt; \u0026lt;enclosure url=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; type=\u0026#34;application/x-mpegURL\u0026#34; /\u0026gt; \u0026lt;podcast:alternateEnclosure type=\u0026#34;application/x-mpegURL\u0026#34; lang=\u0026#34;en\u0026#34; title=\u0026#34;HLS\u0026#34; default=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;podcast:source uri=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; /\u0026gt; \u0026lt;/podcast:alternateEnclosure\u0026gt; \u0026lt;itunes:image href=\u0026#34;https://yourinstance.tld/lazy-static/previews/8df24108-6e70-4fc8-b1cc-f2db7fcdd535.jpg\u0026#34; /\u0026gt; \u0026lt;podcast:chat server=\u0026#34;yourinstance.tld\u0026#34; protocol=\u0026#34;xmpp\u0026#34; embedUrl=\u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; /\u0026gt; \u0026lt;/podcast:liveItem\u0026gt; In case the instance has activated the external XMPP clients connection feature:\n\u0026lt;podcast:liveItem status=\u0026#34;live\u0026#34; start=\u0026#34;2023-07-06T18:00:00.000Z\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The video title\u0026lt;/title\u0026gt; \u0026lt;guid isPermaLink=\u0026#34;false\u0026#34;\u0026gt;e32b4890-983b-4ce5-8b46-f2d6bc1d8819_2023-07-06T18:00:00.000Z\u0026lt;/guid\u0026gt; \u0026lt;link\u0026gt;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026lt;/link\u0026gt; \u0026lt;podcast:socialInteract uri=\u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; protocol=\u0026#34;activitypub\u0026#34; accountUrl=\u0026#34;https://yourinstance.tld/a/youraccount\u0026#34; /\u0026gt; \u0026lt;enclosure url=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; type=\u0026#34;application/x-mpegURL\u0026#34; /\u0026gt; \u0026lt;podcast:alternateEnclosure type=\u0026#34;application/x-mpegURL\u0026#34; lang=\u0026#34;en\u0026#34; title=\u0026#34;HLS\u0026#34; default=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;podcast:source uri=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; /\u0026gt; \u0026lt;/podcast:alternateEnclosure\u0026gt; \u0026lt;itunes:image href=\u0026#34;https://yourinstance.tld/lazy-static/previews/8df24108-6e70-4fc8-b1cc-f2db7fcdd535.jpg\u0026#34; /\u0026gt; \u0026lt;podcast:chat server=\u0026#34;yourinstance.tld\u0026#34; protocol=\u0026#34;xmpp\u0026#34; space=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld\u0026#34; embedUrl=\u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; /\u0026gt; \u0026lt;/podcast:liveItem\u0026gt; Algorithm If you want to display the chat in a web page or in an iframe, here is what you should do:\n get the Podcast RSS feed for the channel, if there is no \u0026lt;podcast:liveItem\u0026gt; element under the \u0026lt;channel\u0026gt;, stop. find the \u0026lt;podcast:liveItem\u0026gt; you are looking for  \u0026lt;podcast:socialInteract\u0026gt; can be used to cross-reference the items with ActivityPub   if there is no \u0026lt;podcast:chat\u0026gt; element under the \u0026lt;podcast:liveItem\u0026gt;, stop. loop through the \u0026lt;podcast:chat\u0026gt; values (if \u0026lt;podcast:chat\u0026gt; is not an array, just iterate on this single value)  there should only be one, but you should expect to handle several just in case   search for the first entry protocol === xmpp and an embedUrl attribute if found, open this embedUrl  If you want to open the chat room using the XMPP protocol:\n get the Podcast RSS feed for the channel, if there is no \u0026lt;podcast:liveItem\u0026gt; element under the \u0026lt;channel\u0026gt;, stop. find the \u0026lt;podcast:liveItem\u0026gt; you are looking for  \u0026lt;podcast:socialInteract\u0026gt; can be used to cross-reference the items with ActivityPub   loop through the \u0026lt;podcast:chat\u0026gt; values (if \u0026lt;podcast:chat\u0026gt; is not an array, just iterate on this single value)  there should only be one, but you should expect to handle several just in case   search for the first entry protocol === xmpp and a space attribute  space should be an XMPP JID for a MUC   if found, open this XMPP JID with your client after converting it to a join URI, or connect to the XMPP room at that address  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/translate/","title":"Übersätzen","tags":[],"description":"Das Plugin übersetzen","content":"Sie können zur Übersetzung dieses Plugins beitragen. Die Übersetzungen werden mit der Software Weblate unter Verwendung der Framasoft Weblate Instanz bearbeitet.\nÄndern Sie niemals direkt Dateien im Ordner languages, dies könnte zu Konflikten führen.\n Wie funktioniert es  Erstellen Sie ein Konto: https://weblate.framasoft.org/accounts/register/ Bestätigen Sie Ihre E-Mail und folgen Sie dem zugesandten Link Erstellen Sie Ihr Passwort und richten Sie Ihr Konto ein Rufen Sie die Projektseite des Plugins auf: https://weblate.framasoft.org/projects/peertube-livechat/peertube-plugin-livechat/ Wählen Sie die Sprache, die Sie übersetzen möchten Übersetzen Sie einfach die fehlenden Sätze, oder korrigieren Sie die Sätze, die Ihnen falsch erscheinen.  Es könnte einige «sehr technische» Zeichenfolgen geben. Wenn Sie sich der Bedeutung oder Ihrer Übersetzung nicht 100%ig sicher sind, sollten Sie sie besser nicht übersetzen, damit sie in Englisch angezeigt werden.\n Eine neue Sprache hinzufügen Wenn Sie glauben, dass eine Sprache fehlt, prüfen Sie bitte zuerst, ob sie von Peertube unterstützt wird. Wenn ja, können Sie [ein Problem erstellen] (https://github.com/JohnXLivingston/peertube-plugin-livechat/issues), um danach zu fragen.\nHinzufügen neuer Zeichenfolgen / Verwendung von Übersetzungen im Code Wenn Sie an neuen Funktionen arbeiten und neue Zeichenketten benötigen, können Sie diese direkt in Weblate erstellen. Die englische Version ist obligatorisch. Beginnen Sie mit ihr.\nJede Zeichenfolge ist mit einem Schlüssel verknüpft (z. B. use_chat). Wählen Sie einen expliziten Schlüssel in Englisch und nutzen Sie nur Kleinbuchstaben.\nWenn Sie neue Zeichenketten testen müssen, ohne auf einen Weblate-Zusammenschluss zu warten, können Sie die Dateien languages/*.yml ändern, aber vermeiden Sie es, diese Änderungen zu übertragen (um das Konfliktrisiko zu minimieren).\nÜbersetzungen im Front-End-Code verwenden Bevor Sie eine Zeichenkette im Frontend verwenden, müssen Sie eine neue Konstante in client/@types/global.d.ts deklarieren. Der Name der Konstante muss:\n mit dem Präfix \u0026ldquo;LOC_\u0026rdquo; beginnen den Zeichenketten Schlüssel in Großbuchstaben verwenden Sie müssen nur den Typ angeben, nicht den Wert  Um zum Beispiel \u0026ldquo;use_chat\u0026rdquo; zu verwenden, müssen Sie deklarieren:\ndeclare const LOC_USE_CHAT: string Das Skript build-client.js liest die client/@types/global.d.ts, sucht nach solchen Konstanten und lädt deren Werte aus den Sprachdateien.\nJetzt können Sie einfach peertubeHelpers.translate(LOC_USE_CHAT) in Ihrem Code aufrufen.\nÜbersetzungen im Backend-Code verwenden Theoretisch sind die einzigen Teile des Backend-Codes, für die eine Lokalisierung erforderlich ist, die Deklaration der Einstellungen und standardisierte Daten (ActivityPub, RSS, \u0026hellip;). Hier müssen wir englische Zeichenketten aus dem Übersetzungsschlüssel holen.\nHinweis: Sie sollten nie eine weitere Sprachübersetzung vom Backend-Code benötigen. Die Lokalisierung muss im Frontend erfolgen.\nEs gibt ein lib/loc.ts Modul, das eine loc() Funktion bereitstellt. Übergeben Sie ihr einfach den Schlüssel, um die englische Zeichenkette zu erhalten: loc('diagnostic')'.\nÜbersätzungs-Dokumentation Die Übersetzung der Dokumentation erfolgt mit Hilfe der entsprechenden Weblate-Komponente.\nEs gibt einen speziellen \u0026ldquo;Hugo Shortcode\u0026rdquo;, den Sie verwenden können, um eine Anwendungszeichenkette anzuzeigen. Wenn Sie beispielsweise den Namen der Schaltfläche \u0026ldquo;open_chat_new_window\u0026rdquo; anzeigen möchten, können Sie dies in der Markdown-Datei der Dokumentation verwenden:\n{{% livechat_label open_chat_new_window %}} Sie können auch verhindern, dass eine ganze Seite übersetzt wird, indem Sie livechatnotranslation: true in der Yaml Font Matter Sektion hinzufügen:\n--- title: \u0026#34;Drittanbieter\u0026#34; description: \u0026#34;Anzeige des Livechats mit Software von Drittanbietern.\u0026#34; weight: 20 chapter: false livechatnotranslation: true --- Übersetze niemals eine Zeichenkette in der Datei livechat.en.pot, sie würde ignoriert werden. Bearbeiten Sie stattdessen direkt die Markdown-Dateien.\nWenn eine Zeichenfolge einen Link enthält, können Sie ihn in den richtigen Link in der übersetzten Sprache ändern. Zum Beispiel können Sie für einen Link zu dieser Dokumentation den Sprachcode in die URL einfügen.\nEinige Zeichenfolgen sind Code-Blöcke. Übersetzen Sie den Code nicht. Aber Sie können Kommentare oder Parameter übersetzen, wenn sie relevant sind.\nWenn Sie sich nicht sicher sind, übersetzen Sie einfach nicht und fragen Sie, was zu tun ist.\nThe tool I use to handle translations for the documentation can have strange behaviours. When I add sentences that looks like other existing sentences, it sometimes copies existing translations. So, when you have translations marked as \u0026ldquo;to check\u0026rdquo;, please make sure it doesn\u0026rsquo;t copy a string that has nothing to do with the english one before validating.\nIf you are now sure about the context of a string, you can check the string location in the weblate\u0026rsquo;s right pane, and open the corresponding documentation page. For example, for a string located in the file support/documentation/content/en/documentation/user/streamers.md, the corresponding url is https://livingston.frama.io/peertube-plugin-livechat/documentation/user/streamers/.\nGeneric recommandations Please be inclusive in your wordings, and please respect the code of coduct.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/","title":"Admin Dokumentation","tags":[],"description":"Plugin Peertube Livechat Administation","content":"  Einstellungen  Plugin Peertube Livechat Einstellungen\n   Fortgeschrittene Nutzung  Einige erweiterte Funktionen\n  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n   Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n    "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/feedback/","title":"Geben Sie Ihr Feedback","tags":[],"description":"Geben Sie Ihr Feedback","content":"Sie müssen keine Programmierkenntnisse haben, um zu diesem Plugin beizutragen! Andere Beiträge sind auch sehr wertvoll, darunter: Sie können die Software testen und Fehler melden, Sie können Feedback geben, Funktionen die Sie interessieren, Benutzeroberfläche, Design, \u0026hellip;\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/moderation/","title":"Moderation","tags":[],"description":"Plugin peertube-plugin-livechat Moderation","content":" This section is still incomplete.\n Accessing moderation tools Sie können auf die Raumeinstellungen und Moderationswerkzeuge zugreifen, indem Sie den Chat in einem neuen Fenster öffnen, und das Dropdown-Menü oben rechts verwenden.\nAll instance moderators and admins will be owner of created chat rooms. The video owner will be admin in the chat room.\n Sie können [ConverseJS Moderationsbefehle] (https://conversejs.org/docs/html/features.html#moderating-chatrooms) verwenden, um den Raum zu moderieren. Wenn Sie den Chat-Raum im Vollbildmodus öffnen, finden Sie oben rechts ein Menü mit speziellen Befehlen.\nRoles and affiliations There are several roles that can be assignated to users in chat rooms: owner, moderators, member, \u0026hellip;\nThis section is still incomplete.\n You can promote users as moderators, if you need some help.\nDelete room content Sie können alte Räume löschen: Treten Sie dem Raum bei, und verwenden Sie das Menü oben, um den Raum zu löschen.\nInstance moderation As Peertube instance moderator or administrator, you will probably need to check that your users are not behaving badly.\nSie können alle bestehenden Chaträume auflisten: in den Einstellungen des Plugins gibt es eine Schaltfläche «Räume auflisten».\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/advanced/xmpp_clients/","title":"XMPP-Clients","tags":[],"description":"Verbindungen über XMPP-Clients zulassen","content":"Dieses Chatmodul basiert auf dem XMPP-Protokoll, das auch als Jabber bekannt ist. Es ist daher möglich, sich mit Hilfe von [XMPP-Client-Software] (https://en.wikipedia.org/wiki/XMPP#Clients) mit den Chats zu verbinden. Dies kann zum Beispiel nützlich sein, um Moderationsvorgänge zu erleichtern.\nDie Benutzerdokumentation zu diesen Funktionen finden Sie auf der Seite Benutzerdokumentation.\nDie Aktivierung dieser Funktionen erfordert Konfigurationsänderungen auf dem Server und in den DNS-Einträgen. Es ist nicht möglich, dies nur über die Peertube-Schnittstelle zu konfigurieren, und es erfordert einige grundlegende Systemadministrationskenntnisse.\n Melden Sie sich bei Ihrem Peertube-Konto an Diese Funktion ist noch nicht verfügbar und wird in einer zukünftigen Version des Plugins enthalten sein.\n Verbindung über ein externes XMPP-Konto Um diese Funktion zu aktivieren, müssen Sie Ihren Server und Ihre DNS-Einträge so einrichten, dass XMPP-Clients den Prosody-Server finden und erreichen können, den dieses Plugin intern verwendet.\nPlugin Einstellungen Beginne mit den Einstellungen des Livechat-Plugins deiner Instanz und aktiviere die Einstellung \u0026ldquo;Verbindung zum Raum über externe XMPP-Konten aktivieren\u0026rdquo;. Wenn Sie diese Einstellung aktivieren, erscheinen unterhalb neue Einstellungen.\nZunächst einmal das Feld \u0026ldquo;Prosody-Server-zu-Server-Port\u0026rdquo;. Dieses Feld ist standardmäßig auf 5269 voreingestellt, dem Standardport für diesen Dienst. Sie können jedoch einen anderen Port wählen, wenn dieser bereits auf Ihrem Server verwendet wird.\nAnschließend können Sie im Feld \u0026ldquo;Netzwerkschnittstellen zwischen Server und Server\u0026rdquo; angeben, welche Netzwerkschnittstellen der Server abhören soll. Der Standardwert \u0026ldquo;*, ::\u0026rdquo; bedeutet, dass alle IP-Adressen abgehört werden sollen. Sie können diese Werte ändern, wenn Sie nur bestimmte IP-Adressen abhören möchten. Die Syntax wird neben der Einstellung erklärt.\nDie Einstellung \u0026ldquo;Zertifikatsordner\u0026rdquo; können Sie leer lassen. In diesem Fall wird das Plugin automatisch selbstsignierte Zertifikate erzeugen. Einige XMPP-Server verweigern je nach ihrer Konfiguration möglicherweise die Verbindung. In diesem Fall können Sie hier einen Pfad auf dem Server angeben, in dem Sie die vom Modul zu verwendenden Zertifikate ablegen müssen. Es liegt an Ihnen, diese zu erzeugen und zu erneuern. Für weitere Informationen siehe unten.\nFirewall Sie müssen den konfigurierten Port (standardmäßig 5269) in Ihrer Firewall öffnen.\nWenn Sie Docker für Ihren Peertube verwenden, müssen Sie die Datei docker-compose.yml ändern, um Port 5269 des Peertube-Containers zu öffnen, damit sich die Außenwelt mit ihm verbinden kann.\nDNS Sie müssen einen DNS-Eintrag hinzufügen, der es entfernten Servern ermöglicht, die Komponente \u0026ldquo;room.your_instance.tld\u0026rdquo; zu finden.\nAm einfachsten ist es, einen SRV-Eintrag für die Subdomäne \u0026ldquo;room\u0026rdquo; hinzuzufügen:\n record name: _xmpp-server._tcp.room.ihre_instanz.tld. (ersetzen Sie «ihre_instanz.tld» mit ihrer Instanz Uri) TTL: 3600 class: IN SRV: 0 priority: 0 weight: 5 Port: 5269 (anpassen, wenn Sie den Standardport geändert haben) Ziel: ihre_instanz.tld. (durch Ihre Instanz-URI ersetzen)  Achten Sie darauf, dass der Punkt nach \u0026ldquo;ihre_instanz.tld\u0026rdquo; erhalten bleibt.\nWenn Sie den Befehl dig verwenden, um Ihren Datensatz zu überprüfen, sollten Sie ein ähnliches Ergebnis wie dieses erhalten:\n$ dig +short _xmpp-server._tcp.room.videos.john-livingston.fr. SRV 0 5 5269 videos.john-livingston.fr. Wenn Sie nicht den Standardport 5269 verwenden, müssen Sie auch einen SRV-Eintrag für _xmpp-server._tcp.ihre_instanz.tld. hinzufügen (wie oben, nur ohne das Präfix room.). Natürlich können Sie diesen Eintrag auch hinzufügen, wenn Sie den Standard-Port verwenden. Das wird auch funktionieren.\nVerwendung vertrauenswürdiger Zertifikate Die selbstsignierten Zertifikate, die dieses Plugin standardmäßig verwendet, können von einigen XMPP-Servern aus Sicherheitsgründen abgelehnt werden.\nEs ist möglich, von einer Zertifizierungsstelle validierte Zertifikate zu verwenden. Dies erfordert jedoch fortgeschrittene Kenntnisse in der Systemverwaltung. Aufgrund der Vielzahl möglicher Anwendungsfälle ist es in der Tat unmöglich, hier alle Situationen zu dokumentieren. Diese Dokumentation wird daher nur das zu erreichende Ziel erläutern und ein Beispiel geben, das nur für eine \u0026ldquo;einfache\u0026rdquo; Situation geeignet ist (manuelle Installation von Peertube unter Verwendung von letsencrypt). Wenn Sie sich in einer anderen Situation befinden (Docker-Installation, von einer anderen Autorität signierte Zertifikate, etc\u0026hellip;), müssen Sie diesen Ansatz selbst anpassen.\nGrundlegendes Prinzip Es liegt an Ihnen, gültige Zertifikate für die Domänen ihre_instanz.tld und room.ihre_instanz.tld zu erzeugen. Sie können jede von Prosody unterstützte Methode verwenden.\nSie müssen diese Zertifikate dann in einem Ordner ablegen, auf den der peertube-Benutzer zugreifen kann, und diesen Ordner in der Plugin Einstellung \u0026ldquo;Certificate folder\u0026rdquo; angeben.\nWenn Sie das Programm ProsodyCtl verwenden möchten, um Zertifikate zu importieren, ist es (sobald Peertube gestartet ist) mit folgendem Befehl verfügbar (passen Sie den Pfad zu Ihrem Peertube-Datenordner an und ersetzen Sie \u0026ldquo;xxx\u0026rdquo; durch die Argumente, die Sie an prosodyctl übergeben wollen): sudo -u peertube /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun prosodyctl xxx\n Das Plugin prüft einmal am Tag, ob Dateien in diesem Ordner geändert wurden, und lädt Prosody gegebenenfalls neu.\nMethode für den einfachen Fall Wir gehen hier davon aus, dass Ihre Peertube Installation \u0026ldquo;klassisch\u0026rdquo; ist (keine Verwendung von Docker) und dass die Zertifikate von letsencrypt mit dem Werkzeug certbot erzeugt werden.\nAls erstes müssen wir ein Zertifikat für die Subdomain room.ihre_instanz.tld erstellen: dies ist die Uri der MUC (XMPP chat rooms) Komponente. Auch wenn die Verbindungen über ihre_instanz.tld hergestellt werden, benötigen wir ein gültiges Zertifikat für diese Subdomain.\nBeginnen Sie also damit, einen DNS-Eintrag für room.ihre_instanz.tld einzurichten, der auf Ihren Server verweist. Sie können einen CNAME-Eintrag verwenden (oder einen A-Eintrag und einen AAAA-Eintrag).\nAls Nächstes verwenden wir nginx (bereits für Ihr Peertube installiert), um das certbot-Zertifikat zu erzeugen. Wir werden eine neue Website erstellen. In der Datei /etc/nginx/site-available/room.peertube fügen Sie hinzu:\nserver { listen 80; listen [::]:80; server_name room.ihre_instanz.tld; location /.well-known/acme-challenge/ { default_type \u0026#34;text/plain\u0026#34;; root /var/www/certbot; } location / { return 301 https://ihre_instanz.tld; } } Aktivieren Sie dann die Website:\nln -s /etc/nginx/sites-available/room.peertube /etc/nginx/sites-enabled/ systemc reload nginx Dann bereiten wir den Ordner vor, in den wir später die Zertifikate importieren werden. Wir gehen hier davon aus, dass Sie das Plugin bereits aktiv haben. Wir erstellen den folgenden Ordner (falls er noch nicht existiert), mit dem Benutzer peertube, um sicherzustellen, dass es keine Probleme mit den Berechtigungen gibt:\nsudo -u peertube mkdir /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosody/certs Nun müssen Sie diesen Ordner in den Plugin-Einstellungen für den Parameter \u0026ldquo;Zertifikatsordner\u0026rdquo; konfigurieren. Es ist wichtig, dies jetzt zu tun, da sonst das Skript für den Zertifikatsimport die Zertifikate in den falschen Ordner legt.\nWir werden certbot so konfigurieren, dass die generierten Zertifikate in den Prosody Ordner importiert werden. Wir können das Programm ProsodyCtl verwenden, das im Plugin enthalten ist.\nHinweis: Damit es verfügbar ist, muss das Plugin mindestens einmal gestartet worden sein.\nWir werden eine Datei /etc/letsencrypt/renewal-hooks/deploy/prosody.sh erstellen, die Folgendes enthält:\n#!/bin/sh /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun prosodyctl \\  --root \\  --config /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosody/prosody.cfg.lua \\  cert import \\  room.your_instance.tld your_instance.tld /etc/letsencrypt/live Dann bitten wir um die Erstellung des Zertifikats:\ncertbot -d room.videos.john-livingston.fr Wenn certbot Ihnen mehrere Methoden zur Erstellung des Zertifikats anbietet, wählen Sie \u0026ldquo;nginx\u0026rdquo;.\nNormalerweise sollten Sie die Zertifikate nun in dem konfigurierten Ordner finden.\nHinweis: Wenn Sie dies zum ersten Mal tun, müssen Sie Prosody neu laden. Der einfachste Weg, dies zu tun, ist, Peertube neu zu starten.\nMethode für das Docker-Verfahren Diese Methode funktioniert mit dem offiziell unterstützten [Docker Guide] (https://docs.joinpeertube.org/install/docker) von PeerTube.\nStellen Sie zunächst sicher, dass Sie einen DNS-Eintrag für \u0026ldquo;room.ihre_instanz.tld\u0026rdquo; erstellen, der auf Ihren Server verweist. Sie können einen CNAME-Eintrag (oder einen A-Eintrag und einen AAAA-Eintrag) verwenden. Dies ist erforderlich, damit Let\u0026rsquo;s Encrypt die Domäne für die Zertifikatserstellung validieren kann.\nGeben Sie das Verzeichnis an, in dem sich Ihre Datei docker-compose.yml befindet.\nÖffnen Sie eine Befehlszeile im certbot Container:\ndocker exec -it certbot /bin/sh Starten Sie certbot:\ncertbot Es wird eine Reihe von Eingabeaufforderungen angezeigt. Geben Sie 2 für den Authentifizierungstyp ein:\nHow would you like to authenticate with the ACME CA? Select the appropriate number [1-2] then [enter] (press \u0026#39;c\u0026#39; to cancel): 2 Geben Sie den Domänennamen \u0026ldquo;room.ihre_instanz.tld\u0026rdquo; ein:\nPlease enter the domain name(s) you would like on your certificate (comma and/or space separated) (Enter \u0026#39;c\u0026#39; to cancel): room.your_instance.tld Geben Sie das Verzeichnis an, in dem der PeerTube-Webserver Anfragen für Let\u0026rsquo;s Encrypt bedient, /var/www/certbot:\nInput the webroot for \u0026lt;room.your_instance.tld\u0026gt;: (Enter \u0026#39;c\u0026#39; to cancel): /var/www/certbot Sie sollten eine Ausgabe wie die folgende sehen:\nSuccessfully received certificate. Certificate is saved at: /etc/letsencrypt/live/room.your_instance.tld/fullchain.pem Key is saved at: /etc/letsencrypt/live/room.your_instance.tld/privkey.pem Führen Sie den folgenden Befehl innerhalb des certbot-Containers aus, um der peertube-Gruppe Lesezugriff auf die neuen Zertifikate und privaten Schlüssel zu geben. Hinweis: Dadurch werden die Dateien auch für die Gruppe mit der ID 999 auf dem Host-System lesbar. Überprüfen Sie die Gruppen auf Ihrem System, um dieses Risiko einzuschätzen, bevor Sie diesen Befehl ausführen.\nchown -R root:999 /etc/letsencrypt/live; \\ chmod 750 /etc/letsencrypt/live; \\ chown -R root:999 /etc/letsencrypt/archive; \\ chmod 750 /etc/letsencrypt/archive; \\ find /etc/letsencrypt/ -name \u0026#39;privkey*\u0026#39; -exec chmod 0640 {} \\; Verlassen Sie den certbot-Container:\nexit Ändern Sie Ihre Datei docker-compose.yml, indem Sie die Zeile entrypoint unter dem Dienst certbot wie folgt ändern. Dies ist das Gleiche wie oben, soll aber automatisch nach jeder Zertifikatserneuerung ausgeführt werden.\nentrypoint: /bin/sh -c \u0026#34;trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; chown -R root:999 /etc/letsencrypt/live; chmod 750 /etc/letsencrypt/live; chown -R root:999 /etc/letsencrypt/archive; chmod 750 /etc/letsencrypt/archive; find /etc/letsencrypt/ -name \u0026#39;privkey*\u0026#39; -exec chmod 0640 {} +; sleep 12h \u0026amp; wait $${!}; done;\u0026#34; Fahren Sie mit der Änderung der Datei docker-compose.yml fort und fügen Sie das certbot-Zertifikatsvolumen in den Peertube-Container ein. Es sollte in etwa so aussehen:\nvolumes: - ./docker-volume/certbot/conf:/etc/letsencrypt Den Dienst neustarten:\ndocker-compose down; docker-comopse up -d Setzen Sie in den Livechat-Plugin-Einstellungen in den PeerTube-Administrationseinstellungen den Zertifikatsordner auf den folgenden Wert:\n/etc/letsencrypt/live Speichern Sie die Plugin Einstellungen und überprüfen Sie, ob Prosody die Zertifikate erkennen kann:\ndocker-compose exec -u peertube \\  peertube \\  /data/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun \\  prosodyctl \\  --config /data/plugins/data/peertube-plugin-livechat/prosody/prosody.cfg.lua \\  check certs Fehlerbehebung Wenn Sie es nicht hinbekommen, können Sie das Diagnosetool verwenden (es gibt eine Schaltfläche oben auf der Seite mit den Plugin-Einstellungen) und sich den Abschnitt «Prosody check» genau ansehen.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/develop/","title":"Entwickeln","tags":[],"description":"Entwickeln","content":"Sprechen Sie immer über die Funktionen, die Sie entwickeln wollen, indem Sie das Issue, das Ihr Problem behandelt, erstellen/finden und kommentieren bevor Sie mit der Arbeit daran beginnen und informieren Sie die Gemeinschaft darüber, dass Sie mit der Programmierung beginnen, indem Sie das Thema für sich beanspruchen.\nBitte benutzen Sie den main Zweig.\nBis März 2023 wurden die Beiträge auf dem develop Zweig erstellt. Dieses Verfahren ist nun veraltet.\n Voraussetzung für die Erstellung dieses Plugins Es wird dringend empfohlen, mit den folgenden Konzepten vertraut zu sein:\n Git NodeJS NPM Typescript  Um das Plugin zu erstellen, benötigen Sie die folgenden Pakete:\n git npm (\u0026gt;=8.x) nodejs (\u0026gt;=14.x) build-essential  Das Plugin muss ein AppImage für den Prosody XMPP-Server erstellen. Es scheint, dass die Art und Weise, wie dieses AppImage erstellt wird, apt- und dpkg-Befehle erfordert. Daher wird es nur auf Debian-ähnlichen Systemen funktionieren. Wenn Sie eine andere Linux-Distribution verwenden, können Sie versuchen, apt und dpkg manuell zu installieren. Siehe zum Beispiel dieses [Github issue] (https://github.com/JohnXLivingston/peertube-plugin-livechat/issues/200). Wir werden so bald wie möglich eine andere Lösung anbieten.\nFür die Erstellung dieses AppImage sind außerdem folgende Pakete erforderlich:\n python3-venv squashfs-tools  Diese Abhängigkeiten wurden auf dem Betriebssystem Debian Bullseye getestet. Wenn es Probleme mit den Abhängigkeiten auf Ihrem UNIX/Linux-System gibt, öffnen Sie bitte einen Eintrag auf Github.\n Entwickeln Klonen Sie das Repository, bauen Sie das Plugin, und erstellen Sie Ihren Feature-Zweig:\n# Kopieren Sie das Repository. Vergessen Sie nicht die Option --recursive, um Submodule mit zu kopieren. git clone https://github.com/JohnXLivingston/peertube-plugin-livechat.git --recursive cd peertube-plugin-livechat # Installieren Sie die NPM-Abhängigkeiten und erstellen Sie das Modul zum ersten Mal: npm install # Erstellen des Plugins nach einer Änderung: npm run build # Wenn Sie einen Fork aus dem Repository haben, fügen Sie ihn als Remote hinzu (Beispiel): git remote add me git@github.com:MY_GITHUB_ACCOUNT/peertube-plugin-livechat.git # Erstellen Sie einen lokalen Zweig für Ihre Entwicklungen und testen Sie ihn aus (Beispiel): git checkout my_development # Hinweis: Wenn ein Github Problem damit verbunden ist, verwenden Sie fix_1234 als Zweigname (wobei 1234 die Nummer des Problems ist). # Um Ihre Änderungen vorzuschlagen, schieben Sie Ihren Zweig in Ihr Repository (Beispiel): git push --set-upstream me my_development # Gehen Sie dann mit Ihrem Webbrowser zu Ihrem Github-Repository, um den Pull Request vorzuschlagen (siehe zusätzliche Anweisungen unten) Sobald Sie bereit sind, Ihren Code zu zeigen und um Feedback zu bitten, reichen Sie einen Entwurf für einen Pull Request ein. Sobald Sie bereit für eine Codeüberprüfung vor der Zusammenführung sind, reichen Sie einen Pull Request ein. In jedem Fall sollten Sie Ihren PR mit dem Problem, die er behebt, verlinken, indem Sie die GitHub-Syntax verwenden: \u0026ldquo;fixes #issue_number\u0026rdquo;.\nDer Front-End-Code befindet sich im Ordner client, der Back-End-Code im Ordner server. Es gibt einige gemeinsam genutzte Codes im shared Ordner.\nFür allgemeine Anweisungen (Entwicklung von Plugins, Erstellung, Installation, \u0026hellip;), lesen Sie bitte die Peertube Dokumentation.\nSie können das Plugin mit zusätzlichen Debug-Funktionen bauen, indem Sie es einfach benutzen:\nNODE_ENV=dev npm run build ESBuild vs Typescript Dieses Plugin verwendet ESBuild für die Generierung von Frontend-Code, wie das offizielle peertube-plugin-quickstart Plugin. ESBuild kann mit Typescript umgehen, prüft aber keine Typen (siehe ESBuild-Dokumentation). Deshalb kompilieren wir Typescript zuerst mit der Option -noEmit, nur um die Typen zu überprüfen (check:client:ts in der package.json Datei). Dann, wenn alles in Ordnung ist, führen wir ESBuild aus, um das kompilierte Javascript zu erzeugen.\nDebug Modus Es gibt einen Debug Modus für dieses Plugin, der einige Verzögerungen verkürzt. Zum Beispiel werden einige Protokolldateien alle zwei Minuten erneuert, anstatt einmal pro Tag. Dies ermöglicht es, bestimmte Aktionen, für die man normalerweise Stunden oder Tage warten müsste, leichter zu testen.\nUm diesen Modus zu aktivieren, müssen Sie lediglich die Datei /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/debug_mode erstellen (ersetzen Sie /var/www/peertube/storage/ durch den richtigen Pfad Ihrer Installation).\nDas einfache Vorhandensein dieser Datei reicht aus, um den Debug Modus zu aktivieren. Um sicherzustellen, dass sie berücksichtigt wird, können Sie Ihre Peertube Instanz neu starten.\nDiese Datei kann einige JSON enthalten, um erweiterte Optionen zu ermöglichen. Eine Liste der vorhandenen Parameter finden Sie in server/lib/debug.ts. Starten Sie Peertube nach jeder Änderung des Inhalts neu.\nAktivieren Sie diesen Modus nicht auf einem Produktionsserver und auch nicht auf einem öffentlichen Server. Dies könnte Sicherheitsprobleme verursachen.\n Prosody neustarten Wenn der Debug Modus aktiviert ist, können Sie Prosody mit diesem API-Aufruf neu starten: http://your_instance.tld/plugins/livechat/router/api/restart_prosody. Für diesen Aufruf ist keine Authentifizierung erforderlich. Er kann von einer Befehlszeile aus erfolgen, zum Beispiel mit curl http://your_instance.tld/plugins/livechat/router/api/restart_prosody.\nProsody Debugger Es ist möglich, das Prosody AppImage mit Hilfe von MobDebug mit einem externen Debugger zu verbinden.\nDazu müssen Sie MobDebug in einem Ordner einrichten, auf den der Benutzer peertube zugreifen kann. Dann fügen Sie dies in der Datei debub_mode hinzu:\n{ \u0026#34;debug_prosody\u0026#34;: { \u0026#34;debugger_path\u0026#34;: \u0026#34;/der_pfad_zu_mobdebug/src\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;localhost\u0026#34;, \u0026#34;port\u0026#34;: \u0026#34;8172\u0026#34; } } host und port sind optional. debugger_path muss auf den Ordner zeigen, in dem sich die MobDebug .lua Datei befindet.\nPeertube neustarten.\nStarten Sie Ihren Debugger-Server.\nDamit Prosody eine Verbindung mit dem Debugger herstellen kann, rufen Sie die API http://your_instance.tld/plugins/livechat/router/api/restart_prosody?debugger=true auf. Dieser Aufruf erfordert keine Authentifizierung. Er kann von einer Kommandozeile aus erfolgen, zum Beispiel mit curl http://your_instance.tld/plugins/livechat/router/api/restart_prosody?debugger=true. Sie können sogar Ihren Debug Server so konfigurieren, dass er diese Anfrage automatisch startet.\nProsody startet dann neu und verbindet sich mit dem Debugger.\nSchnelle Entwicklungsumgebung mit Docker Es gibt eine Anleitung in französischer Sprache auf dem le Peertube forum das erklärt, wie man schnell eine Entwicklungsumgebung mit Docker erstellt.\nEs wurde ein Repo daraus gemacht, siehe pt-plugin-dev.\nHinweis: Aus einem unbekannten Grund kann Prosody die DNS-Adresse von Containern nicht auflösen, wenn die lua-unbound-Bibliothek verwendet wird. Es gibt einen unsaubere Lösung dafür im Plugin: Erstellen Sie einfach eine /data/plugins/data/peertube-plugin-livechat/no_lua_unbound Datei in deinen docker-volumes, dann starten Sie die Container neu.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/obs/","title":"OBS","tags":[],"description":"Dokumentation zum Streamen des Chat-Inhalts mit OBS.","content":"OBS is a popular Free And Open Source streaming software, with advanced capacities for your live streams. In the current page, you will find some advices to handle your live chats using OBS.\nOBS Overlay You can easily include the chat in your stream.\nYou can use the \u0026ldquo;Chat Link teilen\u0026rdquo; feature to generate an URL to your chat. This button should be near the chat if you are the video owner (unless it was desactivated by your server admins).\nCheck the \u0026ldquo;Nur-Lesen\u0026rdquo; checkbox in the modal.\nThen use this link as a \u0026ldquo;web browser source\u0026rdquo; in OBS.\nYou can use the \u0026ldquo;Transpatenter Hintergrund (zum Beispiel für die Streamintegration mit OBS)\u0026rdquo; option to have a transparent background in OBS. If you want to customize the background transparency, you can add this CSS in your OBS browser source\u0026rsquo;s settings:\n:root { --livechat-transparent: rgba(255 255 255 / 90%) !important; } In the previous CSS snippet, you can of course change the color or the transparency, by adapting the color values.\nNote: you can entirely customize chat colors. This is undocumented yet, but you can try this: in the modal, check «use curent theme colors», then you can try to manually change color values in the URL. You must use valid CSS color values, and they must be properly URL encoded.\nMischen mehrerer Chats in Ihrem Live-Stream Sie können die social_stream Browsererweiterung verwenden, um mehrere Chat-Quellen (von Peertube, Twitch, Youtube, Facebook, \u0026hellip;) zu mischen und deren Inhalte in Ihren Live-Stream einzubinden. Die Kompatibilität mit diesem Plugin wurde in den letzten Versionen hinzugefügt.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/upgrade_before_6.0.0/","title":"Aktualisieren von Versionen vor 6.0.0","tags":[],"description":"Wichtige Hinweise zum aktualisieren von älteren Versionen.","content":"WICHTIGER HINWEIS Seit Version v6.0.0 benötigt dieses Plugin keine andere Prosody-Installation.\nFalls Sie dieses Plugin vor dieser Version benutzt haben und Sie Prosody manuell installiert haben, können Sie Prosody sicher deinstallieren.\nFalls Sie ein eigenes Peertube Docker Paket genutzt haben, welches Prosody eingebettet hatte, können Sie zu den offiziellen Peertube Paketen zurück wechseln.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/document/","title":"Dokumentation","tags":[],"description":"Dokumentieren Sie das Plugin, oder übersetzen Sie die Dokumentation.","content":"Allgemeine Informationen Informieren Sie die Community immer vor der Arbeit (indem Sie ein neues Problem erstellen oder ein bestehendes kommentieren). Damit soll vermieden werden, dass zwei Personen an der gleichen Sache arbeiten, und Konflikte zu verhindern.\nBitte benutzen Sie den main-Zweig.\nDer Quellcode der Dokumentation befindet sich im Ordner support/documentation/content.\nDie Dokumentation wird mit Hugo erstellt. Sie müssen es auf Ihrem Computer installieren, wenn Sie eine Vorschau Ihrer Arbeit sehen wollen.\nDas verwendete Thema ist hugo-theme-learn. Sie sollten dessen Dokumentation lesen, bevor Sie mit der Bearbeitung der Dokumentation beginnen.\nWenn eine neue Pluginversion veröffentlicht oder die Dokumentation aktualisiert wird, führen die Plugin Verwalter den main-Zweig mit dem documentation-Zweig zusammen. Dadurch werden Github- und Gitlab-Pipelines ausgelöst und die veröffentlichte Dokumentation aktualisiert.\nÜbersätzungen Die Hauptsprache ist Englisch (Code en).\nDer Ordner support/documentation/content/en enthält nur englische Dokumentationsdateien.\nDie Dokumentation wird mit Weblate übersetzt (siehe die Übersetzungsdokumentation). Um dies zu tun, verwenden wir das po4a tool, wie wir später auf dieser Seite sehen werden.\nEine neue Sprache hinzufügen Kopieren und ändern Sie den Abschnitt [Languages.fr] in der Datei support/documentation/config.toml.\nWenn die Übersetzungen nicht vollständig sind, macht das nichts, die fehlenden Zeichenfolgen werden auf Englisch angezeigt.\nVorschau Um eine Vorschau Ihrer Änderungen zu sehen, führen Sie einfach diesen Befehl aus:\nhugo serve -s support/documentation/ Öffnen Sie dann Ihren Browser und gehen Sie auf die Adresse http://localhost:1313/peertube-plugin-livechat/. Diese Seite wird bei jeder Änderung automatisch aktualisiert.\nAktualisierung von Lokalisierungsdateien und Erstellung von Dokumentationsübersetzungen Im Moment haben Sie nur die englische Version. Um die Dokumentationszeichenketten zu aktualisieren und Übersetzungen zu erstellen, müssen Sie das Skript doc-translate.sh ausführen.\nStellen Sie dazu sicher, dass Sie po4a (Version \u0026gt;= 0.69) auf Ihrem Computer installiert haben.\nEinige Linux-Distributionen (wie Debian Bullseye zum Beispiel) haben eine zu alte Version von po4a. Bitte stellen Sie sicher, dass Sie eine kompatible Version installieren. Wenn Sie zum Beispiel Debian Bullseye benutzen, können Sie die Bookworm po4a.deb Datei von https://packages.debian.org herunterladen und manuell installieren.\n Um Übersetzungen zu bearbeiten, machen Sie einfach dies:\nnpm run doc:translate Sie können dann eine Vorschau des Ergebnisses mit hugo serve -s support/documentation/ und unter Verwendung der Sprachauswahl anzeigen.\nDokumentation schreiben Bearbeiten Sie einfach die englischen Dateien in support/documentation/content/en.\nFühren Sie dann vor dem Commit immer npm run doc:translate aus, so dass Änderungen in den englischen Dateien in die Datei support/documentation/po/livechat.en.pot übertragen werden können.\nDu kannst den Shortcode livechat_label verwenden, um Anwendungsstrings zu verwenden. Siehe hier: Dokumentation übersetzen.\nEs ist möglich zu verhindern, dass eine Datei übersetzt wird, indem man livechatnotranslation: true in der Yaml Font Matter Sektion benutzt. Siehe hier: Dokumentation übersetzen.\nBitte verwenden Sie die Option livechatnotranslation für technische Dokumentation. Wir möchten nicht, dass die technische Dokumentation übersetzt wird, um Probleme aufgrund einer falschen Übersetzung zu vermeiden.\nUm den Übersetzern die Arbeit zu erleichtern, sollten Sie zu lange Absätze vermeiden.\nIm Moment ist es nicht möglich, Markdown-Tabellen zu verwenden: Die Übersetzungswerkzeuge würden sie nicht korrekt darstellen.\nThere may be links to documentation elsewhere on the web. Try not to change the urls of the documentation pages. Or at the very least, put links to the new location on the previous url.\n Was ist, wenn ich hugo und/oder po4a nicht verwenden kann? Bearbeiten Sie einfach die englischen Markdown-Dateien und geben Sie an, dass Sie keine Übersetzungen erstellen können, wenn Sie Ihren Pull Request stellen.\nVeröffentlichung Die Veröffentlichung der Dokumentation erfolgt automatisch, sobald die Änderungen in den documentation Zweig eingefügt wurden.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/advanced/matterbridge/","title":"Matterbridge benutzen","tags":[],"description":"Matterbridge als Brücke zu anderen Chats nutzen","content":"Hier ist ein Tutorial um Matterbridge mit diesem Plugin zu benutzen (nur auf englisch): https://gitlab.com/refrac/obs-matterbridge-overlay/-/blob/master/documentation/peertube.md\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/","title":"Beitragen","tags":[],"description":"Beitragen","content":"Interessiert beizutragen? Super!\n Verhaltenskodex  Vereinbarung über Verhaltenskodex für Mitwirkende\n   Übersätzen  Das Plugin übersetzen\n   Geben Sie Ihr Feedback  Geben Sie Ihr Feedback\n   Entwickeln  Entwickeln\n   Dokumentation  Dokumentieren Sie das Plugin, oder übersetzen Sie die Dokumentation.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/xmpp_clients/","title":"XMPP Clients","tags":[],"description":"Verbindung zum Chat über einen XMPP-Client","content":"Dieses Chat-Plugin basiert auf dem XMPP-Protokoll (auch bekannt als Jabber). Es ist daher möglich, eine Verbindung zu den Chats herzustellen mit XMPP-Client-Software. Dies kann zum Beispiel nützlich sein, um Moderationsvorgänge zu erleichtern.\nDie auf dieser Seite beschriebenen Funktionen müssen von den Administratoren Ihrer Peertube-Instanz aktiviert und konfiguriert werden. Sie haben daher möglicherweise keinen Zugriff auf sie.\n Melden Sie sich bei Ihrem Peertube-Konto an Diese Funktion ist noch nicht verfügbar und wird in einer zukünftigen Version des Plugins enthalten sein.\n Verbindung über ein externes XMPP-Konto Wenn diese Funktion in Ihrer Instanz aktiviert ist, können Sie mit jedem XMPP-Konto eine Verbindung zu Peertube Chats über ein beliebiges XMPP-Konto verbinden.\nUm die Adresse des Raums, dem Sie beitreten möchten, zu erhalten, können Sie die Schaltfläche \u0026ldquo;Chat teilen\u0026rdquo; verwenden die sich über dem Chat befindet:\nStandardmäßig ist die Schaltfläche \u0026ldquo;Freigeben\u0026rdquo; nur für den Eigentümer des Videos und die Admins/Moderatoren der Instanz. Administratoren können jedoch festlegen, dass diese Schaltfläche für alle angezeigt wird.\n Wählen Sie dann \u0026ldquo;Verbinden über XMPP\u0026rdquo;:\nDann müssen Sie nur noch auf \u0026ldquo;Öffnen\u0026rdquo; klicken oder die Adresse des Chatraums in Ihren XMPP-Client kopieren/einfügen (mit der Funktion \u0026ldquo;einem Raum beitreten\u0026rdquo;).\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/issues/","title":"Fehlerverfolgung (Bug tracking) und neue Funktionen","tags":[],"description":"Fehler (Bugs) / Neue Funktionsanfragen","content":"Wenn Sie neue Funktionswünsche, Fehler (Bugs) oder Schwierigkeiten bei der Einrichtung des Plugins haben, können Sie den Github issue tracker verwenden.\nEinen Einblick in die Roadmap für kommende Funktionen finden Sie hier:\n Github Project. Meilensteine auf Github.  Wenn Sie ein Webdesigner oder ein ConverseJS/Prosody/XMPP-Experte sind und helfen wollen, dieses Plugin zu verbessern, sind Sie gerne willkommen.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/","title":"Technical documentation","tags":[],"description":"Technical documentation","content":"  Third party  Displaying the livechat with 3rd party software.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contact/","title":"Kontaktieren Sie mich","tags":[],"description":"Den Autor kontaktieren","content":"Wenn Sie eine Frage haben oder über dieses Plugin sprechen möchten, können Sie diesem XMPP-Raum mit einem beliebigen Jabber-Client beitreten: plugin-livechat-support@room.im.yiny.org.\nWenn Sie das Projekt finanziell unterstützen möchten, können Sie mich per E-Mail unter git.[at].john-livingston.fr kontaktieren oder mein Liberapay-Profil ansehen.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/credits/","title":"Impressum","tags":[],"description":"Impressum des Plugins","content":"package.json, COPYRIGHT and LICENSE Dateien beinhalten die Lizenzinformationen für dieses Programm und seiner Abhängigkeiten.\nDas Plugin wird von John Livingston betrieben.\nDank an David Revoy für seine Arbeit an dem Peertube Maskottchen, Sepia. Das Charakterdesign steht unter CC-By-Lizenz, und die SVG-Dateien, die zur Erstellung einiger Logos und Avatare in diesem Plugin verwendet werden, sind GPLv3.0.\nVielen Dank an Framasoftfür die Ermöglichung von Peertube, für die finanzielle Unterstützung, und für das Weblate.\nVielen Dank an ritimo für die finanzielle Unterstützung.\nVielen Dank an Code Lutin und Rétribution Copie Publique für die finanzielle Unterstützung.\nVielen Dank an NlNet und die NGI0 Entrust fund für die finanzielle Unterstützung.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/","title":"","tags":[],"description":"","content":"PeerTube plugin livechat Sie können die Sprachauswahl im linken Menü verwenden, um diese Dokumentation in verschiedenen Sprachen anzuzeigen. Einige Übersetzungen fehlen oder sind unvollständig. In diesem Fall sehen Sie die englische Version des Textes.\n Welcome the Peertube Livechat Plugin documentation.\nPeertube is a decentralized streaming platform, that can provide both live streaming and VOD (Video On Demand) features. The present plugin adds chatting capatibilities to your Peertube installation, allowing viewers to interract with streamers.\nTo have a glimpse on this plugin capabilities, checkout the introduction. For more precise informations, please find bellow the summary of this documentation.\nYou can use the searchbox in the left menu to quickly find specific documentation parts.\n Bevor Sie auf eine Hauptversion aktualisieren, lesen Sie bitte die Versionshinweise und die Liste der wichtigsten Änderungen : CHANGELOG.\n  Einführung  Einführung\n   Dokumentation  Plugin Dokumentation\n  Benutzer Dokumentation  Plugin peertube-plugin-livechat Benutzer Dokumentation\n  For viewers  How to chat for stream viewers\n   For streamers  How to setup the chat for your live stream\n   Moderation  Plugin peertube-plugin-livechat Moderation\n   OBS  Dokumentation zum Streamen des Chat-Inhalts mit OBS.\n   XMPP Clients  Verbindung zum Chat über einen XMPP-Client\n    Installationsanleitung  Plugin peertube-plugin-livechat Installationsanleitung\n  Fehlerbehebung  Some classic mistakes and workarounds.\n   Bekannte Probleme: CPU Kompatibilität  Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.\n   Aktualisieren von Versionen vor 6.0.0  Wichtige Hinweise zum aktualisieren von älteren Versionen.\n    Admin Dokumentation  Plugin Peertube Livechat Administation\n  Einstellungen  Plugin Peertube Livechat Einstellungen\n   Fortgeschrittene Nutzung  Einige erweiterte Funktionen\n  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n    Beitragen  Beitragen\n  Verhaltenskodex  Vereinbarung über Verhaltenskodex für Mitwirkende\n   Übersätzen  Das Plugin übersetzen\n   Geben Sie Ihr Feedback  Geben Sie Ihr Feedback\n   Entwickeln  Entwickeln\n   Dokumentation  Dokumentieren Sie das Plugin, oder übersetzen Sie die Dokumentation.\n    Fehlerverfolgung (Bug tracking) und neue Funktionen  Fehler (Bugs) / Neue Funktionsanfragen\n   Technical documentation  Technical documentation\n  Third party  Displaying the livechat with 3rd party software.\n    Kontaktieren Sie mich  Den Autor kontaktieren\n   Impressum  Impressum des Plugins\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/tags/","title":"Tags","tags":[],"description":"","content":""}]