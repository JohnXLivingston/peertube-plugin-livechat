[{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/intro/","title":"Einführung","tags":[],"description":"Einführung","content":"Was ist das Livechat Plugin? Dieses Peertube Plugin ist dafür gedacht, ein Chatsystem für Peertube-Videos bereitzustellen.\nSobald Sie das Plugin auf Ihrer Peertube-Instanz installiert haben, wird standardmäßig für jeden Live-Stream automatisch ein Chatroom erstellt.\nAuf dem folgenden Bildschirmfoto sehen Sie eine klassische Peertube-Videoseite mit einem Chatroom auf der rechten Seite (klicken Sie auf das Bild, um es im Vollbildmodus anzuzeigen):\nDer Chat-Raum wird für alle Zuschauer zugänglich sein, auch für diejenigen, die kein Konto auf Ihrer Instanz haben. Diese \u0026ldquo;anonymen\u0026rdquo; Benutzer müssen nur einen Spitznamen wählen, bevor sie im Chat sprechen können.\nStandardmäßig wird der Chat neben dem Video angezeigt. Sie können ihn aber in einem anderen Browser-Tab öffnen, indem Sie die Schaltfläche oben verwenden:\nSie können das Livechat-Plugin mit dieser Demo-Seite testen.\n Installation Als Peertube-Administrator können Sie dieses Plugin auf Ihrer Instanz einrichten, indem Sie einfach den Peertube-Plugin-Marktplatz in der Administrationsoberfläche nutzen. Suchen Sie nach \u0026ldquo;livechat\u0026rdquo; und klicken Sie dann auf \u0026ldquo;installieren\u0026rdquo;: Das war\u0026rsquo;s!\nLivechat Funktionen Das Plugin hat viele erweiterte Funktionen. Da es den XMPP-Standard \u0026ldquo;unter der Haube\u0026rdquo; verwendet, ist es für Peertube-Administratoren möglich, fortgeschrittene Nutzungen zu ermöglichen (Verbindung über XMPP-Clients, Chatbots, Brücken zu anderen Chat-Protokollen, \u0026hellip;). Weitere Informationen finden Sie in den entsprechenden Abschnitten dieser Dokumentation.\nFöderation Peertube ist Teil des fediverse: Sie können ein Netzwerk von Peertube-Instanzen erstellen und Inhalte zwischen ihnen austauschen.\nDieses Plugin kann Föderation handhaben: Wenn Sie einen Livestream von einer entfernten Instanz ansehen, werden Sie dem Chatraum mit Ihrem lokalen Konto beitreten. Sie werden automatisch mit Ihrem aktuellen Nickname und Avatar verbunden.\nDamit der Zusammenschluss funktioniert, muss das Plugin natürlich auf beiden Instanzen installiert sein.\nModeration Manchmal muss man seine Community vor bösen Menschen schützen. Als Instanzadministrator können Sie die Föderation für das Livechat-Plugin deaktivieren. Wenn sich entfernte Akteure schlecht benehmen, können Streamer, Moderatoren und Administratoren Nutzer sperren oder stummschalten.\nChatbot Dieses Plugin verfügt über einen eingebauten Chatbot. Weitere Informationen dazu finden Sie in der Dokumentation.\nSie können auch jeden anderen XMPP-Chatbot einbinden, indem Sie XMPP External Components verwenden. Dazu müssen Sie nur den Zugriff auf externe Komponenten in den Plugin-Einstellungen konfigurieren.\nChat Dauerhaftigkeit Wenn Sie einem Raum beitreten, sehen Sie frühere Nachrichten. Auch solche, die gesendet wurden, bevor Sie dem Raum beigetreten sind.\nDieses Verhalten kann von Raum zu Raum geändert werden, und die Standardverweildauer kann von den Instanzadministratoren festgelegt werden.\nIntegrieren Sie den Chat in Ihren Live-Stream Wenn Sie Software wie OBS für Ihren Live-Stream verwenden, können Sie den Chat in den Videostream einbetten. Dies ist zum Beispiel für Wiederholungen nützlich.\nIm folgenden Screenshot sehen Sie eine Live-Wiedergabe, bei der der Chat-Inhalt am unteren Rand des Videos eingebettet ist:\nIm folgenden Screenshot sehen Sie ein OBS-Setup, bei dem der Chat als Quelle in die aktuelle Szene eingebunden ist (die Hintergrundfarbe kann geändert werden und kann transparent sein):\nAndere Verwendungen Standardmäßig kann jeder Streamer den Chat für seine Live-Streams aktivieren/deaktivieren.\nAuf der Instanzebene können Administratoren jedoch den Chat für alle Videos (live und/oder VOD) aktivieren.\nSie können den Chat sogar für bestimmte VOD-Videos aktivieren. So funktioniert die Demonstrationsseite: Es handelt sich nicht um einen Live-Stream, aber ich habe den Chat speziell für dieses Video aktiviert.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/","title":"Benutzer Dokumentation","tags":[],"description":"Plugin peertube-plugin-livechat Benutzer Dokumentation","content":"  Für Zuschauer  Wie man chattet für Live-Stream Zuschauer\n   Für Streamer  So richten Sie den Chat für Ihren Live-Stream ein\n  Einige Grundlagen  Einige grundlegende Informationen zur Einrichtung und Nutzung des Chats für Ihren Livestream\n   Kanalkonfiguration  Peertube Kanal Chaträume Konfiguration\n   Langsamer Modus  Plugin peertube-plugin-livechat Langsamer Modus\n   Chatbot  Chatbot Einrichtung\n  Verbotene Wörter  Der Chatbot kann automatisch Nachrichten moderieren, die verbotene Wörter enthalten.\n Timer  Der Chatbot kann in regelmäßigen Abständen einige Nachrichten senden.\n Befehle  Der Chatbot kann auf verschiedene Befehle reagieren.\n  Moderation  Plugin peertube-plugin-livechat Erweiterte Moderationsfunktionen\n    OBS  Dokumentation zum Streamen des Chat-Inhalts mit OBS.\n   XMPP Clients  Verbindung zum Chat über einen XMPP-Client\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/","title":"Dokumentation","tags":[],"description":"Plugin Dokumentation","content":"  Benutzer Dokumentation  Plugin peertube-plugin-livechat Benutzer Dokumentation\n  Für Zuschauer  Wie man chattet für Live-Stream Zuschauer\n   Für Streamer  So richten Sie den Chat für Ihren Live-Stream ein\n  Einige Grundlagen  Einige grundlegende Informationen zur Einrichtung und Nutzung des Chats für Ihren Livestream\n Kanalkonfiguration  Peertube Kanal Chaträume Konfiguration\n Langsamer Modus  Plugin peertube-plugin-livechat Langsamer Modus\n Chatbot  Chatbot Einrichtung\n Moderation  Plugin peertube-plugin-livechat Erweiterte Moderationsfunktionen\n  OBS  Dokumentation zum Streamen des Chat-Inhalts mit OBS.\n   XMPP Clients  Verbindung zum Chat über einen XMPP-Client\n    Installationsanleitung  Plugin peertube-plugin-livechat Installationsanleitung\n  Fehlerbehebung  Einige klassische Fehler und Umgehungsmöglichkeiten.\n   Bekannte Probleme: CPU Kompatibilität  Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.\n   Aktualisieren von Versionen vor 6.0.0  Wichtige Hinweise zum aktualisieren von älteren Versionen.\n    Admin Dokumentation  Plugin Peertube Livechat Administation\n  Einstellungen  Plugin Peertube Livechat Einstellungen\n   Fortgeschrittene Nutzung  Einige erweiterte Funktionen\n  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/basics/","title":"Einige Grundlagen","tags":[],"description":"Einige grundlegende Informationen zur Einrichtung und Nutzung des Chats für Ihren Livestream","content":"Aktivieren Sie den Chat für Ihre Live-Streams Instanzadministratoren können den Chat in bestimmten Fällen deaktivieren oder aktivieren. Die Informationen in diesem Abschnitt gelten nur für den Standardfall.\n Wenn Sie eine Peertube Live-Stream erstellen oder ändern, gibt es eine Registerkarte \u0026ldquo;Plugin-Einstellungen\u0026rdquo;:\nAuf der Registerkarte \u0026ldquo;Plugin-Einstellungen\u0026rdquo; gibt es ein Kontrollkästchen \u0026ldquo;Chat nutzen\u0026rdquo;. Aktivieren oder deaktivieren Sie es einfach, um den mit Ihrem Video verbundenen Chat zu aktivieren oder zu deaktivieren.\nJe nachdem, welche Plugins auf Ihrer Peertube-Instanz installiert sind, können sich auf dieser Registerkarte weitere Einstellungen befinden.\n Chat pro Kanal Auf der Instanz-Ebene können die Peertube-Administratoren wählen, ob die Chat-Räume pro Video einzigartig sind, oder ob es einen einzigartigen Chat-Raum pro Kanal gibt. Bitte kontaktieren Sie die Administratoren Ihrer Instanz für weitere Informationen zur Konfiguration des Livechat-Plugins.\nTeilen Sie den Chat Oben auf dem Chat gibt es eine Schaltfläche \u0026ldquo;Chat Link teilen\u0026rdquo;.\nDiese Schaltfläche öffnet ein Popup-Fenster, in dem Sie eine URL erhalten, mit der Sie dem Chat beitreten können. Diese Url kann weitergegeben werden.\nSie können einige Optionen individuell anpassen:\n Nur-Lesen: Sie können den Chat nur lesen, nicht schreiben. Dies ist nützlich, um den Inhalt des Chats in Ihren Live-Stream einzubinden (siehe die OBS Dokumentation). Die derzeitigen Themenfarben nutzen: wenn diese Option aktiviert ist, werden die Farben des aktuellen Themas zur URL hinzugefügt, so dass jeder Benutzer, der den Link öffnet, dieselbe Farbe erhält. IFrame-Element erstellen, um den Chat in eine Webseite zu integrieren: Anstelle einer URL erhalten Sie ein HTML-Snippet, das Sie in Ihre Website einfügen können, um den Chat einzubetten.  Das \u0026ldquo;Chat Link teilen\u0026rdquo; Popup-Fenster kann auch einen \u0026ldquo;Mit XMPP verbinden\u0026rdquo; Reiter enthalten. Dieser ist nur verfügbar, wenn die Administratoren Ihrer Instanz diese Option aktiviert und korrekt konfiguriert haben. Mit dieser Option können Sie einen Link bereitstellen, um dem Chat mit einer beliebigen XMPP-Client-Software beizutreten. Die Verwendung solcher Software kann zum Beispiel Moderationsmaßnahmen erleichtern.\nModeration Bitte lesen Sie die Moderationsdokumentation.\nEinbindung des Chats in den Videostream Bitte lesen Sie die OBS-Dokumentation.\nChat Dauerhaftigkeit Standardmäßig ist der Chat dauerhaft. Das bedeutet, dass der Inhalt des Raums eine Zeit lang erhalten bleibt. Benutzer, die dem Raum beitreten, sehen Nachrichten, die vor ihrer Ankunft gesendet wurden.\nSie können das Dauerhaftigkeitsverhalten ändern. [Öffnen Sie den Chat im Vollbildmodus (/peertube-plugin-livechat/de/documentation/user/viewers), öffnen Sie dann das obere Menü und klicken Sie auf \u0026ldquo;Konfigurieren\u0026rdquo;.\nEs gibt mehrere Optionen, die geändert werden können.\nSie können z. B. die Standard- und Höchstzahl der zurückzusendenden Nachrichten auf 0 setzen, so dass neue Empfänger keine zuvor gesendeten Nachrichten sehen.\nSie können auch die Option \u0026ldquo;Archivierung aktivieren\u0026rdquo; deaktivieren: Wenn diese Option nicht aktiviert ist, werden die Nachrichten beim Neustart des Servers gelöscht.\nWenn Sie das Häkchen bei \u0026ldquo;Dauerhaft\u0026rdquo; entfernen, wird der Raum gelöscht, wenn es keinen Teilnehmer mehr gibt.\nLöschen des Chat Inhalts Wenn Sie den Inhalt des Chats löschen möchten, öffnen Sie den Chat im Vollbildmodus, öffnen Sie dann das obere Menü und klicken Sie auf \u0026ldquo;Löschen\u0026rdquo;. Es öffnet sich ein Popup-Fenster, das eine Bestätigung verlangt. Um Fehler zu vermeiden, werden Sie in dem Popup-Fenster nach der \u0026ldquo;XMPP-Adresse\u0026rdquo; des Chatrooms gefragt. Diese Adresse können Sie über das Menü \u0026ldquo;Details\u0026rdquo; im oberen Menü erhalten.\nDer Chat wird automatisch neu erstellt, wenn jemand versucht, ihm beizutreten, solange das Video existiert und die Funktion \u0026ldquo;Chat nutzen\u0026rdquo; aktiviert ist.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/settings/","title":"Einstellungen","tags":[],"description":"Plugin Peertube Livechat Einstellungen","content":"Dieser Abschnitt beschreibt die Seite mit den Plugin Einstellungen.\nBestehende Räume auflisten Wenn Sie auf die Schaltfläche «Räume auflisten» klicken, werden alle bestehenden Chaträume aufgelistet. Sie können sie dann finden und moderieren.\nFöderation Die folgenden Einstellungen betreffen die Föderation mit anderen Peertube Instanzen und anderer Fediverse-Software.\nChats von anderen Instanzen nicht anzeigen Wenn Sie diese Einstellung aktivieren, werden in Ihrer Instanz niemals Chats von Videos anderer Instanzen angezeigt. Chat-Information nicht veröffentlichen Wenn Sie diese Einstellung aktivieren, wird Ihre Instanz keine Chat Informationen im Fediverse veröffentlichen. Andere Peertube-Instanzen wissen nicht, dass mit Ihren Videos Chaträume verbunden sind.\nBitte beachten Sie: Wenn Sie bereits Chats geführt haben, ist es möglich, dass die Informationen bereits veröffentlicht wurden. Sie müssen das nächste Video Update abwarten, bevor die Informationen nicht mehr öffentlich zugänglich sind. Wenn Sie diese Einstellung deaktivieren, müssen Sie außerdem warten, bis die Videos aktualisiert wurden, bevor die Informationen erneut veröffentlicht werden. Diese Aktualisierung erfolgt unter anderem, wenn ein Live Event fortgesetzt oder beendet wird.\nBitte beachten Sie: Diese Einstellung betrifft nur die Veröffentlichung von Informationen über das ActivityPub-Protokoll. Dies hindert eine entfernte Anwendung nicht daran, das Vorhandensein von Chats zu erkennen und zu versuchen, eine Verbindung herzustellen. Erweiterte Kanaleinstellungen Die folgenden Einstellungen betreffen die erweiterten Kanaloptionen: Nutzer können ihre Kanäle individuell anpassen, den Moderationsbot aktivieren, \u0026hellip;\nDie erweiterten Kanalkonfiguration und den Chatbot deaktivieren Wenn Sie Probleme mit dieser Funktion haben, können Sie sie deaktivieren.\nChatverhalten Raumtyp Sie können hier wählen, ob Sie für jedes Video einen eigenen Raum haben möchten oder ob Sie sie nach Kanälen gruppieren möchten. Chat automatisch öffnen Wenn ausgewählt wird der Chat geladen, sobald Sie auf der Videoseite sind. Zeige den «Chat in neuem Fenster öffnen» Knopf Es wird einen Knopf zum Öffnen des Webchats in einem neuen Fenster geben. Zeige den «Chat Link teilen» Knopf Diese Funktion fügt eine «Chat-Link teilen» Schaltfläche hinzu. Mit dieser Schaltfläche können Sie URLs generieren, um dem Chat beizutreten. Der Chat kann angepasst werden (schreibgeschützter Modus, Verwendung des aktuellen Themas, \u0026hellip;).\nSie können zum Beispiel eine schreibgeschützte URL generieren und diese in OBS verwenden, um den Chat in Ihren Live-Stream zu integrieren!\nMit diesen Einstellungen können Sie festlegen, wer auf diese Schaltfläche zugreifen kann.\nNutzer können den Chat für ihre Live-Videos aktivieren Wenn diese Option aktiviert ist, haben alle Live-Videos in ihren Eigenschaften ein Feld zur Aktivierung des Webchats. Der Eigentümer des Videos kann Webchats aktivieren.\nChat für alle Live-Videos aktivieren Wenn diese Option markiert ist, wird der Chat für alle Live-Videos aktiviert. Chat für alle Nicht-Live-Videos aktivieren Chat für alle Nicht-Live-Videos aktivieren Chat für diese Videos aktivieren Chat für diese Videos aktivieren Chat für anonyme Benutzer ausblenden Wenn die Option aktiviert ist, können anonyme Peertube-Nutzer den Chat nicht sehen. Diese Funktion ist noch experimentell. Wenn Sie diese Option aktiviert haben, wird empfohlen auch die Option \"Chat-Informationen nicht veröffentlichen\" zu aktivieren. Andernfalls könnten einige Tools von Drittanbietern versuchen, den Chat zu öffnen, und ein unvorhersehbares Verhalten verursachen. Hinweis: Im Moment blendet diese Funktion einfach den Chat aus. In einer zukünftigen Version wird der Chat durch eine Meldung ersetzt, die besagt «Bitte melden Sie sich an, um [\u0026hellip;]». Siehe v5.7.0 Release Notes für weitere Informationen.\nIP eines anonymen Benutzers sperren, wenn dieser aus einem Chatraum verbannt wird Wenn Sie diese Option aktivieren, wird jedes Mal, wenn ein anonymer Benutzer aus einem Chatraum verbannt wird, seine IP auch vom Chatserver verbannt. Warnung: wenn Ihre Instanz für die Registrierung offen ist, könnte jeder Benutzer einen gefangenen Raum erstellen, Benutzer zum Beitritt einladen und automatisch alle IPs der anonymen Benutzer sperren. Die Liste der gesperrten IPs wird nicht gespeichert, sie wird beim Neustart des Servers gelöscht, oder wenn Sie die Einstellungen eines Plugins ändern. Die gesperrten IPs werden in den Logdateien des Prosody-Servers protokolliert, so dass die Administratoren des Servers eventuell externe Tools (wie fail2ban) verwenden können, um IPs in größerem Umfang zu sperren. Wichtiger Hinweis: Wenn Sie diese Funktion aktivieren und einen benutzerdefinierten Reverse-Proxy vor Peertube verwenden, stellen Sie bitte sicher, dass Ihr Setup korrekt konfiguriert ist, um die IPs echter Benutzer an Peertube weiterzuleiten. Andernfalls könnten alle anonymen Benutzer auf einmal blockiert werden.\nFarbthemen Avatar-Satz Sie können aus mehreren verschiedenen Sets von Standard-Avataren wählen, die für Chat-Benutzer verwendet werden sollen.\nSepia (Peertube-Maskottchen): David Revoy\u0026rsquo;s Peertube Avatargenerator, CC-By Lizenz\nKatzen: David Revoy\u0026rsquo;s Katzen Avatargenerator, CC-By Lizenz\nVögel: David Revoy\u0026rsquo;s Vögel Avatargenerator, CC-By Lizenz\nFenecs (Mobilizon-Maskottchen): David Revoy\u0026rsquo;s Fenec/Mobilizon Avatargenerator, CC-By Lizenz\nAbstrakt: David Revoy\u0026rsquo;s Abstrakt Avatargenerator, CC-By Lizenz\nÄltere Sepia-Avatare (die in früheren Plugin-Versionen enthalten waren): Basierend auf David Revoys Arbeit, AGPL-v3 Lizenz\nWenn Sie die Änderung nicht sofort sehen können, könnte es an Ihrem Browser-Cache liegen. Löschen Sie einfach den Sitzungsspeicher Ihres Browsers, oder starten Sie ihn neu.\nConverseJS Thema Sie können wählen, welches Thema Sie für ConverseJS verwenden möchten:\n Peertube theme: Dies ist ein spezielles Thema, das speziell für die Integration von Peertube entwickelt wurde. Default ConverseJS theme: Dies ist das standard ConverseJS Thema. ConverseJS concord theme: Dies ist ein von ConverseJS bereitgestelltes Thema.  Automatische Farberkennung Versucht, die Farben des aktuellen Themas des Benutzers automatisch zu erkennen.\nWenn diese Einstellung aktiviert ist, versucht das Plugin, die Farben für das Chat-Thema automatisch zu erkennen.\nWenn dies für einige Ihrer Peertube-Themen nicht korrekt funktioniert, können Sie diese Option deaktivieren. Sie können den Fehler im offiziellen Issue Tracker  melden. Vergessen Sie nicht anzugeben, welches Thema nicht funktioniert. Webchat Iframe Stil-Attribut Sie können einige benutzerdefinierte Stile hinzufügen, die dem Iframe hinzugefügt werden. Zum Beispiel eine benutzerdefinierte Breite: width:400px; Erweiterte Einstellungen des Chatservers System Prosody benutzen Das Plugin wird mit einem AppImage geliefert, das zum Ausführen des Prosody XMPP-Servers verwendet wird. Wenn dieses AppImage nicht funktioniert, können Sie auf das Prosody-Paket zurückgreifen, das für Ihren Server gepackt ist. Installieren Sie einfach das Paket prosody.\nDiese Einstellung sollte nur verwendet werden, wenn das Plugin defekt ist und auf einen Patch wartet.\nWebsocket deaktivieren Mit Peertube \u0026gt;= 5.0.0 versucht dieses Plugin, eine Websocket-Verbindung zum Chatten zu verwenden. Wenn der Browser oder die Verbindung des Benutzers nicht kompatibel ist, wird der Browser automatisch auf das BOSH-Protokoll zurückgreifen. Aber in seltenen Fällen kann dies fehlschlagen. Zum Beispiel, wenn Sie einen Reverse Proxy vor Peertube haben, der keine Websocket-Verbindung für Plugins erlaubt. In diesem Fall können Sie diese Einstellungen überprüfen, um Websocket-Verbindungen zu deaktivieren. Prosody Port Der Port, der vom integrierten Prosody-Server verwendet wird.\nÄndern Sie ihn, wenn dieser Port bereits auf Ihrem Server verwendet wird.\nSie können diesen Port auf Ihrer Firewall schließen, es wird nicht von der Außenwelt darauf zugegriffen. Hinweis: Dies könnte sich in naher Zukunft ändern, da geplant ist, eine Funktion zum Aktivieren externer Verbindungen hinzuzufügen. Peertube-URL für API-Aufrufe Bitte lassen Sie diese Einstellungen leer, wenn Sie nicht wissen, was Sie tun.\nIn einigen seltenen Fällen kann Prosody die API von Peertube nicht von seiner öffentlichen URI aufrufen. Sie können dieses Feld verwenden, um die URI von Peertube für Prosody-Module anzupassen (z.B. mit «http://localhost:9000» oder «http://127.0.0.1:9000»). Wenn diese Einstellung leer gelassen wird und Sie Peertube \u0026gt;= 5.1 oder später verwenden, wird das Plugin die Werte aus Ihrer Peertube-Konfigurationsdatei verwenden, um zu erraten, auf welcher Schnittstelle und welchem Port die Anfrage erfolgen muss.\nSchlussendlich wird es Ihre öffentliche Peertube-URI verwenden. So wird jeder API-Aufruf über Ihren Nginx-Server laufen. Dies kann in einigen Fällen fehlschlagen: z.B. wenn Sie sich in einem Docker-Container befinden, wo der öffentliche Hostname nicht zur richtigen IP aufgelöst wird. Versuchen Sie in diesem Fall, die \u0026ldquo;Peertube-URL für API-Aufrufe\u0026rdquo; Einstellungen zu ändern, indem Sie http://127.0.0.1:9000 einstellen (unter der Annahme, dass 9000 der Port ist, auf dem Peertube lauscht; fragen Sie Ihre Instanzadministratoren, wenn Sie es nicht wissen).\nStandardmäßig Inhalte von Räumen protokollieren Wenn diese Option aktiviert ist, werden die Rauminhalte standardmäßig gespeichert. Jeder Benutzer, der einem Raum beitritt, sieht, was bereits geschrieben wurde, bevor er dem Chat beitrat.\nBitte beachten Sie, dass es immer möglich ist, die Inhaltsarchivierung für einen bestimmten Raum zu aktivieren/deaktivieren, indem Sie seine Eigenschaften bearbeiten. Ablaufzeit von Raumprotokollen Sie können hier auswählen, wie lange der Inhalt des Chatrooms vom Server aufbewahrt wird. Der Wert kann sein:  60: Der Inhalt wird 60 Sekunden gespeichert. Sie können 60 durch einen beliebigen ganzzahligen Wert ersetzen. 1d: Der Inhalt wird für 1 Tag gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. 1w: Der Inhalt wird für 1 Woche gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. 1m: Der Inhalt wird für 1 Monat gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. 1y: Der Inhalt wird für 1 Jahr gespeichert. Sie können 1 durch einen beliebigen ganzzahligen Wert ersetzen. nie: Der Inhalt läuft nie ab und wird für immer aufbewahrt.  Verbindung zum Raum mit externen XMPP Konten aktivieren Durch Aktivieren dieser Option ist es möglich, über externe XMPP-Konten und XMPP-Clients eine Verbindung zu Räumen herzustellen.\nAchtung: Durch die Aktivierung dieser Option können zusätzliche Server- und DNS-Konfigurationen erforderlich sein. Bitte beachten Sie die Dokumentation: Aktivieren Sie externe XMPP-Kontoverbindungen.  Prosody Server Port zu Server Port Der Port, der für XMPP s2s-Verbindungen (Server zu Server) verwendet wird.\nSie sollten den Standardport 5269 verwenden. Andernfalls müssen Sie einen bestimmten DNS Eintrag erstellen . Server zu Server Netzwerkschnittstellen Die Netzwerkschnittstellen, die für Server zu Server Verbindungen verwendet werden sollen.\nListe der zu nutzenden IPs, durch Kommata getrennt (Leerzeichen werden entfernt).\nSie können «*» verwenden, um alle IPv4-Schnittstellen zu nutzen, und «::» für alle IPv6-Schnittstellen.\nBeispiele:  *, :: * 127.0.0.1, ::1 172.18.0.42  Zertifikate Ordner Wenn dieses Feld leer ist, erzeugt und verwendet das Plugin selbstsignierte Zertifikate.\nWenn Sie andere Zertifikate verwenden wollen, geben Sie hier einfach den Ordner an, in dem Prosody sie finden kann. Hinweis: Der Benutzer \"peertube\" muss Lesezugriff auf diesen Ordner haben. Aktivieren von Client-Server-Verbindungen Ermöglichen Sie XMPP-Clients die Verbindung zum integrierten Prosody-Server.\nDiese Option allein lässt nur Verbindungen von localhost-Clients zu. Diese Einstellung ermöglicht es XMPP-Clients, sich mit dem eingebauten Prosody-Server zu verbinden. Im Moment erlaubt diese Option nur Verbindungen von localhost-Clients.\nZum Beispiel kann diese Option einer Instanz von Matterbridge (sobald sie einen anonymen Login verwenden kann) auf demselben Rechner erlauben, Ihren Chat mit einem anderen Dienst wie einem Matrix-Raum zu verbinden.\nProsody Client-Server-Verbindungsport Der Port, der vom c2s-Modul des integrierten Prosody-Servers verwendet wird.\nXMPP-Clients müssen diesen Port zum Verbinden verwenden.\nÄndern Sie ihn, wenn dieser Port bereits auf Ihrem Server verwendet wird.\nSie können diesen Port auf Ihrer Firewall vorerst geschlossen halten, es wird nicht von der Außenwelt darauf zugegriffen. Hinweis: Dies könnte sich in naher Zukunft ändern, da geplant ist, eine Funktion zum Aktivieren externer Verbindungen hinzuzufügen. Aktivieren externer XMPP-Komponenten Diese Einstellung ermöglicht es externen XMPP-Komponenten, sich mit dem Server zu verbinden. Standardmäßig erlaubt diese Option nur Verbindungen von localhost-Komponenten. Sie müssen den Wert \u0026ldquo;Prosody externe Komponenten Netzwerkschnittstellen\u0026rdquo; ändern, um an anderen Netzwerkschnittstellen zu lauschen.\nDiese Funktion könnte für die Verbindung von Brücken oder Bots genutzt werden.\nWeitere Informationen zu den externen Komponenten von Prosody finden Sie hier.\nAktivieren externer XMPP-Komponenten Aktivieren Sie die Verwendung externer XMPP-Komponenten.\nDiese Option allein erlaubt nur Verbindungen von localhost. Sie müssen die Netzwerkschnittstellen einrichten und den Port auf Ihrer Firewall öffnen, um sie von entfernten Servern aus verfügbar zu machen.\nDiese Funktion kann beispielsweise verwendet werden, um einige Bots mit den Chatrooms zu verbinden. Port für externe Komponenten zur Verbindung mit Prosody Der Port, der von XMPP-Komponenten verwendet wird, um sich mit dem Prosody-Server zu verbinden.\nÄndern Sie ihn, wenn dieser Port bereits auf Ihrem Server verwendet wird.\nSie können diesen Port in Ihrer Firewall geschlossen lassen, wenn Sie den Zugriff von anderen Schnittstellen als localhost nicht zulassen möchten. Prosody externe Komponenten Netzwerkschnittstellen Die Netzwerkschnittstellen, die für externe Komponentenverbindungen überwacht werden sollen.\nListe der zu überwachenden IP, durch Kommata getrennt (Leerzeichen werden entfernt).\nSie können «*» verwenden, um auf allen IPv4-Schnittstellen zu lauschen, und «::» für alle IPv6-Schnittstellen.\nBeispiele:  *, :: * 127.0.0.1, ::1 172.18.0.42  Externe Komponenten Die zu erstellenden externen Komponenten:  Eine pro Zeile. Verwenden Sie das Format «Komponentenname:Komponenten_Geheimnis» (Leerzeichen werden entfernt) Sie können Kommentare hinzufügen: alles nach dem #-Zeichen wird entfernt und leere Zeilen werden ignoriert. Der Name darf nur alphanumerische Zeichen und Punkte enthalten  Wenn der Name nur alphanumerische Zeichen enthält, wird ihm die XMPP-Domäne angehängt. Aus «bridge» wird zum Beispiel «bridge.your_domain.tld». Sie können auch einen vollständigen Domänennamen angeben, müssen jedoch sicherstellen, dass Ihr DNS korrekt konfiguriert ist.  Verwenden Sie nur alphanumerische Zeichen in der geheimen Passphrase (verwenden Sie mindestens 15 Zeichen).  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/troubleshooting/","title":"Fehlerbehebung","tags":[],"description":"Einige klassische Fehler und Umgehungsmöglichkeiten.","content":"Ich habe das Plugin gerade installiert/aktualisiert, aber es passiert nichts Wenn Sie das Plugin gerade installiert/aktualisiert haben, aber nichts passiert (kein Chat, keine Einstellungen, Schaltflächen auf der Einstellungsseite funktionieren nicht, \u0026hellip;), versuchen Sie einfach, die Seite neu zu laden.\nDiagnosewerkzeug Wenn der Chat nicht funktioniert, gibt es ein Diagnosetool auf den Einstellungsseiten des Plugins.\nÖffnen Sie die Plugin-Einstellungen, und klicken Sie auf die Schaltfläche \u0026ldquo;Diagnose starten\u0026rdquo;.\nWenn auf der Diagnoseseite ein Fehler auftritt, können Sie auf dieser Seite nach einer Lösung suchen oder auf der Bugtracking Dokumentationsseite nachsehen, wenn Sie keine Antwort finden.\nChat wird nicht geladen Interne API-Aufrufe In manchen Fällen (z. B. bei einer Docker-Peertube-Installation) zeigen die Diagnosewerkzeuge einen Fehler für den Test namens \u0026ldquo;API Prosody -\u0026gt; Peertube is KO\u0026rdquo; an.\nVersuchen Sie in diesem Fall, die \u0026ldquo;Peertube-URL für API-Aufrufe\u0026rdquo; Einstellungen zu ändern, indem Sie http://127.0.0.1:9000 einstellen (unter der Annahme, dass 9000 der Port ist, auf dem Peertube lauscht, fragen Sie Ihre Instanzadministratoren, wenn Sie es nicht wissen).\nWeitere Informationen finden Sie in der Hilfe für diese Einstellungen.\nWebsocket Wenn in den Diagnosetools alles in Ordnung ist, aber die Chat-Fenster leer bleiben: Es kann ein Websocket-Problem sein. Seit Peertube Version 5.0.0 müssen einige zusätzliche Konfigurationen auf der Serverseite vorgenommen werden. Vergewissern Sie sich bei den Instanzadministratoren, dass sie nicht vergessen haben, die in den Peertube v5.0.0 release notes aufgeführten Änderungen anzuwenden.\nSie können bestätigen, dass es sich um ein Websocket-Problem handelt, indem Sie Ihre Browserkonsole öffnen und nach Fehlerprotokollen suchen, in denen von einer fehlgeschlagenen Websocket-Verbindung die Rede ist.\nWenn Sie dies nicht sofort beheben können, können Sie Websocket deaktivieren, indem Sie das Häkchen bei \u0026ldquo;Websocket deaktivieren\u0026rdquo; auf der Plugin Einstellungsseite entfernen. In diesem Fall sollten Sie auch das Häkchen bei \u0026ldquo;Chat-Information nicht veröffentlichen\u0026rdquo; setzen, da die Chat-Föderation ohne Websocket nicht funktioniert.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/viewers/","title":"Für Zuschauer","tags":[],"description":"Wie man chattet für Live-Stream Zuschauer","content":"Chaträumen beitreten Wenn Sie ein Peertube-Video ansehen, bei dem der Chat aktiviert ist, sehen Sie den Chat neben dem Video:\nEs gibt zwei leicht unterschiedliche Anwendungsfälle, je nachdem, ob Sie ein Konto auf der Peertube-Instanz haben oder nicht. Siehe unten für weitere Informationen.\nWenn Sie kein Peertube-Konto haben Diese Funktion kann von den Administratoren der Instanz deaktiviert werden.\n Wenn Sie auf der Peertube-Instanz, auf der Sie das Video ansehen, nicht eingeloggt sind, treten Sie automatisch dem Chat bei. Ihnen wird ein zufälliger Spitzname zugewiesen (z. B. \u0026ldquo;Anonymous 12345\u0026rdquo;).\nBevor Sie im Chatraum sprechen können, müssen Sie einen Spitznamen in das Feld am unteren Rand des Fensters eingeben.\nWenn Sie ein Peertube-Konto haben Wenn Sie mit Ihrem Peertube-Konto verbunden sind, treten Sie dem Raum automatisch bei, indem Sie Ihren Peertube Spitznamen und Avatar verwenden.\nWenn Sie ein Live-Video auf einer Instanz ansehen, auf der Sie kein Konto haben, aber ein Konto auf einer anderen Instanz: Wenn das Livechat-Plugin auf beiden Instanzen installiert ist, ist es möglich, dem Chat mit Ihrem Konto beizutreten. Öffnen Sie dazu einfach das Video auf Ihrer Instanz (Sie können zum Beispiel die Video-URL in das Suchfeld Ihrer Instanz kopieren/einfügen).\n Chatten Um Nachrichten zu senden, geben Sie sie einfach in das Feld \u0026ldquo;Nachricht\u0026rdquo; am unteren Rand des Bildschirms ein. Sie können sie durch Drücken der Eingabetaste auf Ihrer Tastatur oder durch Klicken auf die Schaltfläche \u0026ldquo;Senden\u0026rdquo; senden.\nWenn Sie in Ihren Nachrichten Zeilenumbrüche einfügen möchten, können Sie die Tastenkombination \u0026ldquo;Umschalt+Eingabe\u0026rdquo; verwenden.\nSie können Emojis zu Ihren Nachrichten hinzufügen. Sie können zum Beispiel das Emojis-Menü verwenden oder direkt Emojis-Kurzbefehle wie :smiley: eingeben.\nSie können andere Teilnehmer erwähnen. Dazu können Sie die ersten Buchstaben des Spitznamens eingeben und dann die Tabulatortaste drücken. Sie können auch \u0026ldquo;@\u0026rdquo; tippen: Damit öffnen Sie direkt das Menü. Sie können auch auf einen Spitznamen in der Teilnehmerliste klicken, um ihn in das Nachrichtenfeld einzufügen.\nTeilnehmerliste Um die Liste der Teilnehmer zu sehen, öffnen Sie einfach das rechte Menü:\nSie können sehen, dass einige Teilnehmer besondere Rechte haben (Moderator, Eigentümer, \u0026hellip;).\nVollbild öffnen Oben im Chat gibt es eine Schaltfläche, um den Chat im Vollbildmodus zu öffnen. Dadurch wird eine neue Browser-Registerkarte mit dem folgenden Inhalt geöffnet:\nEs kann einfacher sein, in einer seperaten Browser-Registerkarte zu chatten.\nDiese Vollbildansicht fügt auch ein oberes Menü mit erweiterten Funktionen hinzu. Dies ist besonders nützlich für Moderationsfunktionen.\nSpitznamen ändern Sie können Ihren Spitznamen ändern, indem Sie /nick ihr_neuer_spitzname in das Nachrichtenfeld eingeben.\nSie können Ihren Spitznamen auch über das obere Menü ändern, wenn Sie sich im Vollbildmodus befinden.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/sourcecode/","title":"Source code","tags":[],"description":"Source code organization","content":"This page describes the different source code folders and their content.\nbuild files Files in the root dir that begins with build- are files used to build the plugin. See the package.json file for more information.\nassets assets/images The assets/images folder contains all icons files used by the plugin.\nThere is also the assets/images/avatars folders, which contains avatars used for anonymous chat users. These files are used to generate multiple avatars (see the build-avatars.js script for more information).\n assets/images/avatars/legacy contains legacy avatar set (livechat versions until 8.1.0 included) assets/images/avatars/sepia contains new sepia avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/cat contains new cats avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/bird contains new birds avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/fenec contains new fenecs avatar set, based on the work of David Revoy (see copyright informations) assets/images/avatars/abstract contains new abstract avatar set, based on the work of David Revoy (see copyright informations)  assets/styles The assets/styles folder contains the livechat plugin SCSS source files.\nbuild The build folder is not part of the source code, but is used to put some files during the build process.\nFor example, build-conversejs.js use the folder build/conversejs to build a customized ConverseJS version.\nclient The client folder contains the front-end source code.\nFiles like client/common-client-plugin.ts, client/videowatch-client-plugin.ts, \u0026hellip; are the base files that are loaded by Peertube for different \u0026ldquo;scopes\u0026rdquo; (common, videowatch, \u0026hellip;). Please refer to the Peertube plugin documentation for more information.\nconversejs The conversejs folder contains code relative to the use of ConverseJS.\nconversejs/custom The conversejs/custom folder contains some files that are used to customize ConverseJS. See the build-conversejs.sh script for more information.\ndist The dist folder is where goes all files created during the build process. It is not part of the source code.\ndocumentation The folder documentation is deprecated. We only keep files in this folder to avoid dead links (links to these files were shared on many websites or social media posts).\nThe source code for the new documentation is in support/documentation/content/en, and is used to generate the documentation web site.\nlanguages The folder languages contains the languages files. These files are translated using Weblate).\nprosody-modules The prosody-modules folder contains some modules used by Prosody.\nSome of them are \u0026ldquo;officials\u0026rdquo; plugins, others are specific to this plugin.\nserver The server folder contains the backend source code.\nshared The shared folder contains comme code that will be used both on frontend and backend.\nsupport/documentation The support/documentation contains the documentation source code.\nvendor The vendor folder is not part of the source code. It is used during the build process to download some external source code.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/bot/forbidden_words/","title":"Verbotene Wörter","tags":[],"description":"Der Chatbot kann automatisch Nachrichten moderieren, die verbotene Wörter enthalten.","content":"Sie können einige Wörter konfigurieren, die vom Chatbot automatisch moderiert werden (Nachrichten, die solche Wörter enthalten, werden sofort gelöscht). Sie können auch einen optionalen Grund hinzufügen, der an der Stelle der gelöschten Nachrichten angezeigt wird. Mehrere Beispiele finden Sie auf der Dokumentationsseite. Sie können mehrere \u0026ldquo;Verbotene Wörter oder Ausdrücke\u0026rdquo;-Felder ausfüllen. Wenn ein Benutzer eine Nachricht sendet, die den konfigurierten Kriterien entspricht, wird die Nachricht automatisch gelöscht.\nVerbotene Wörter oder Ausdrücke In diesem Feld können Sie mehrere Wörter, Wortgruppen oder \u0026ldquo;reguläre Ausdrücke\u0026rdquo; (regex) eingeben.\nEin Wort oder Ausdruck pro Zeile. Wenn Sie mehrere Wörter in eine Zeile schreiben, werden nur Nachrichten gefunden, die die gesamte Sequenz enthalten. Jedes Mal, wenn ein Benutzer eine Nachricht sendet, werden diese Wörter getestet. Wenn die Nachricht eines dieser Wörter enthält, wird die Nachricht gelöscht.\nSie können dieses Feld zum Beispiel mit einer Liste von Schimpfwörtern füllen.\nEinige Beispiele finden Sie in den Vorschlägen für verbotene Wörter.\nWenn Sie einige nützliche Wörterlisten haben, können Sie die gerne zu dieser Vorschlagsseite beitragen. Sie befinden sich im Ordner support/forbidden_words des Livechat-Quellcodes. Siehe die Beitragen Seite für weitere Informationen.\nBei diesen Wörtern wird die Groß- und Kleinschreibung nicht berücksichtigt.\n Diese Funktion ist noch experimentell. Es könnte einige Probleme mit nicht-lateinischen Alphabeten geben. Sie können ein Problem öffnen, um Ihre Probleme zu melden.\n Als reguläre Ausdrücke (regex) betrachten Wenn Sie diese Option aktivieren, wird jede Zeile des Feldes \u0026ldquo;Verbotene Wörter oder Ausdrücke\u0026rdquo; als regulärer Ausdruck betrachtet.\nAuch Nachrichten von Moderatoren moderieren Standardmäßig werden Nachrichten von Moderatoren nicht gelöscht, wenn sie verbotene Wörter enthalten. Wenn Sie diese Option aktivieren, werden auch Nachrichten von Moderatoren gelöscht. Grund Anzuzeigender Grund anstelle der gelöschen Nachricht Kommentare Sie können hier einige Kommentare zu dieser Regel hinzufügen, um sich daran zu erinnern, wie und warum Sie sie erstellt haben. Diese Kommentare sind rein indikativ und haben keinen Einfluss auf das Verhalten des Chatbots. "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/codeofconduct/","title":"Verhaltenskodex","tags":[],"description":"Vereinbarung über Verhaltenskodex für Mitwirkende","content":" Dieser Verhaltenskodex basiert auf dem Contributor Covenant, Version 2.1, verfügbar unter https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Übersetzungen sind unter https://www.contributor-covenant.org/translations verfügbar. Fälle von beleidigendem, belästigendem oder anderweitig inakzeptablem Verhalten können den für die Durchsetzung verantwortlichen Gemeinschaftsleitern per E-Mail an git.[at].john-livingston.fr gemeldet werden.\n Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\nOur Standards Examples of behavior that contributes to a positive environment for our community include:\n Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community  Examples of unacceptable behavior include:\n The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting  Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\nScope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement by mail at git.[at].john-livingston.fr. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\nEnforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n1. Correction Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n2. Warning Community Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n3. Temporary Ban Community Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n4. Permanent Ban Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla\u0026rsquo;s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/cpu_compatibility/","title":"Bekannte Probleme: CPU Kompatibilität","tags":[],"description":"Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.","content":"Das im Plugin enthaltene Prosody AppImage funktioniert nur mit x86_64 und arm64 CPU Architekturen. Es ist nicht kompatibel mit anderen CPU-Architekturen.\nUm das Plugin zu verwenden, müssen Sie Prosody manuell auf Ihrem Server installieren (siehe unten).\nHinweis: Das Plugin erfordert Prosody \u0026gt;= 0.12.0. Wenn Sie eine ältere Version verwenden, könnte die Chat Federation nicht funktionieren und ein unerwartetes Verhalten zeigen.\nSobald dies geschehen ist, müssen Sie in den Plugin-Einstellungen das Häkchen bei Use system Prosody setzen.\nNicht-Docker Peertube installation Für die Standardinstallation müssen Sie nur das offizielle prosody-Paket für Ihre Linux-Distribution installieren.\nZum Beispiel, auf Debian/Ubuntu:\nsudo apt install prosody Sie können dann den Dienst deaktivieren, der automatisch startet, wenn Sie Prosody installieren (das Plugin startet einen Prosody-Prozess, der Dienst muss nicht dauerhaft laufen). Zum Beispiel unter Debian/Ubuntu (und anderen Systemd-basierten Linux-Distributionen):\nsudo systemctl disable prosody \u0026amp;\u0026amp; sudo systemctl stop prosody Achtung: Deaktivieren Sie Prosody nicht, wenn es für einen anderen Dienst auf Ihrem Server verwendet wird, wie zum Beispiel Jitsi.\nDocker Sie müssen ein Peertube-Image generieren, das Prosody in demselben Container enthält, der auch Peertube beinhaltet. Ich weiß, dass dies nicht der Standardweg ist, um dies mit Docker zu tun, aber bedenken Sie, dass eine vorübergehende Lösung ist.\nUm ein solches Image zu erzeugen und zu verwenden, lesen Sie bitte die Docker-Dokumentation. Die Docker-Datei, um das Paket zu erzeugen, sollte wie folgt sein:\nFROMchocobozzz/peertube:production-bullseyeRUN apt -y update \u0026amp;\u0026amp; apt install -y prosody \u0026amp;\u0026amp; apt -y cleanYunohost Sie müssen metronome (der von Yunohost bereitgestellte XMPP-Server) deaktivieren, und prosody installieren.\nDies wird bereits von der Yunohost Peertube Anwendung gemacht, da es für das Plugin vor v6.0.0 erforderlich war.\nEs kann aber sein, dass es in naher Zukunft entfernt wird (um die Nachteile dieser Methode zu vermeiden). Ich muss mit dem Yunohost Team diskutieren, um zu entscheiden, wie wir die Nachteile minimieren können, und die Kompatibilität zu maximieren.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/advanced/","title":"Fortgeschrittene Nutzung","tags":[],"description":"Einige erweiterte Funktionen","content":"  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n   Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/","title":"Für Streamer","tags":[],"description":"So richten Sie den Chat für Ihren Live-Stream ein","content":"  Einige Grundlagen  Einige grundlegende Informationen zur Einrichtung und Nutzung des Chats für Ihren Livestream\n   Kanalkonfiguration  Peertube Kanal Chaträume Konfiguration\n   Langsamer Modus  Plugin peertube-plugin-livechat Langsamer Modus\n   Chatbot  Chatbot Einrichtung\n  Verbotene Wörter  Der Chatbot kann automatisch Nachrichten moderieren, die verbotene Wörter enthalten.\n   Timer  Der Chatbot kann in regelmäßigen Abständen einige Nachrichten senden.\n   Befehle  Der Chatbot kann auf verschiedene Befehle reagieren.\n    Moderation  Plugin peertube-plugin-livechat Erweiterte Moderationsfunktionen\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/","title":"Installationsanleitung","tags":[],"description":"Plugin peertube-plugin-livechat Installationsanleitung","content":" Bevor Sie auf eine Hauptversion aktualisieren, lesen Sie bitte die Versionshinweise und die Liste der wichtigsten Änderungen : CHANGELOG.\n Um das Plugin zu installieren oder zu aktualisieren einfach das Peertube Web-Admin-Interface benutzen.\n Hier sind weitere, spezifischere Anweisungen:\n Fehlerbehebung  Einige klassische Fehler und Umgehungsmöglichkeiten.\n   Bekannte Probleme: CPU Kompatibilität  Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.\n   Aktualisieren von Versionen vor 6.0.0  Wichtige Hinweise zum aktualisieren von älteren Versionen.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/thirdparty/","title":"Third party","tags":[],"description":"Displaying the livechat with 3rd party software.","content":" This page describes experimental features. These features are available with the plugin version \u0026gt;= 7.2.0.\n Einführung Peertube is part of the Fediverse. So Peertube video can be watched from other Peertube instances, and from various other softwares:\n from a Mastodon (or other fediverse application) instance, from a mobile app (Fedilab, Tusky, \u0026hellip;), from desktop fediverse app, \u0026hellip;  This livechat plugin is using well known standards, so it is possible to join chat rooms even when not viewing the video on Peertube.\nThere are basically 2 ways to join the chat room associated to a video:\n opening a web page (with an url like https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535), using a XMPP client (and joining a room like xmpp://8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld?join)  Joining the chat using a XMPP client is not always possible. It requires some DNS and server configuration. It will only be possible if instance\u0026rsquo;s admins have correctly setup the external XMPP clients connection feature.\n Don\u0026rsquo;t try to gues these url and connection methods yourself. Please report to next chapters.\n Chat discovery Using ActivityPub The livechat plugin adds some data in Video ActivityPub objects, so that the chat can be discovered.\nThis requires Peertube \u0026gt;= 5.1\n This follows the FEP-1970 recommendations.\nAt the time of the writing, this FEP is in draft status, and the livechat plugin is a Proof-of-concept. Until the FEP is adopted, the specification can change, and the livechat plugin will be adapted accordingly.\n Basically, the chat will be declared as attachments on the Video object, using the discussion relation.\nBy default, here is an example of what you will get:\n{ \u0026#34;@context\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams\u0026#34;, \u0026#34;https://w3id.org/security/v1\u0026#34;, { \u0026#34;RsaSignature2017\u0026#34;: \u0026#34;https://w3id.org/security#RsaSignature2017\u0026#34; }, { // ...  } ], \u0026#34;to\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams#Public\u0026#34; ], \u0026#34;cc\u0026#34;: [ \u0026#34;https://yourinstance.tld/accounts/root/followers\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;Video\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;The video title\u0026#34;, // ...  \u0026#34;url\u0026#34;: [ /* ... */ ], \u0026#34;attachment\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; } ] } In case the instance has activated the external XMPP clients connection feature:\n{ \u0026#34;@context\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams\u0026#34;, \u0026#34;https://w3id.org/security/v1\u0026#34;, { \u0026#34;RsaSignature2017\u0026#34;: \u0026#34;https://w3id.org/security#RsaSignature2017\u0026#34; }, { // ...  } ], \u0026#34;to\u0026#34;: [ \u0026#34;https://www.w3.org/ns/activitystreams#Public\u0026#34; ], \u0026#34;cc\u0026#34;: [ \u0026#34;https://yourinstance.tld/accounts/root/followers\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;Video\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;The video title\u0026#34;, // ...  \u0026#34;url\u0026#34;: [ /* ... */ ], \u0026#34;attachment\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;Link\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Chat for live stream: The video title\u0026#34;, \u0026#34;rel\u0026#34;: \u0026#34;discussion\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;xmpp://8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld?join\u0026#34; } ] } Algorithm If you want to display the chat in a web page or in an iframe, here is what you should do:\n get the Video ActivityPub object, if there is no attachment key, stop. loop through the attachment values (if attachment is not an array, just iterate on this single value) search for an entry with rel === discussion, and with href using the https scheme (that begins with https://) if found, open this href  If you want to open the chat room using the XMPP protocol:\n get the Video ActivityPub object, if there is no attachment key, stop. loop through the attachment values (if attachment is not an array, just iterate on this single value) search for an entry with rel === discussion, and with href using the xmpp scheme (that begins with xmpp://) if found, open this xmpp uri with your client, or connect to the XMPP room at that address  Additional notes In the ActivityPub object, there is also a peertubeLiveChat entry. Don\u0026rsquo;t use the content of this entry. This is specific to the livechat plugin, and can be changed or removed in a near future. It is currently required for some endpoint discovery.\nUsing Podcast RSS feed The livechat plugin adds some data in Podcast RSS feeds under the \u0026lt;podcast:liveItem\u0026gt;, so that the chat can be discovered for live streams.\nThis requires Peertube \u0026gt;= 5.2\n The \u0026lt;podcast:chat\u0026gt; element is currently only supported for live streams.\n This follows the \u0026lt;podcast:chat\u0026gt; proposal.\nAt the time of the writing, this proposal is in draft status, and the livechat plugin is a Proof-of-concept. Until the proposal is adopted, the specification can change, and the livechat plugin will be adapted accordingly.\n Basically, the chat will be declared as tag under on the \u0026lt;podcast:liveItem\u0026gt; element.\nBy default, here is an example of what you will get:\n\u0026lt;podcast:liveItem status=\u0026#34;live\u0026#34; start=\u0026#34;2023-07-06T18:00:00.000Z\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The video title\u0026lt;/title\u0026gt; \u0026lt;guid isPermaLink=\u0026#34;false\u0026#34;\u0026gt;e32b4890-983b-4ce5-8b46-f2d6bc1d8819_2023-07-06T18:00:00.000Z\u0026lt;/guid\u0026gt; \u0026lt;link\u0026gt;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026lt;/link\u0026gt; \u0026lt;podcast:socialInteract uri=\u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; protocol=\u0026#34;activitypub\u0026#34; accountUrl=\u0026#34;https://yourinstance.tld/a/youraccount\u0026#34; /\u0026gt; \u0026lt;enclosure url=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; type=\u0026#34;application/x-mpegURL\u0026#34; /\u0026gt; \u0026lt;podcast:alternateEnclosure type=\u0026#34;application/x-mpegURL\u0026#34; lang=\u0026#34;en\u0026#34; title=\u0026#34;HLS\u0026#34; default=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;podcast:source uri=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; /\u0026gt; \u0026lt;/podcast:alternateEnclosure\u0026gt; \u0026lt;itunes:image href=\u0026#34;https://yourinstance.tld/lazy-static/previews/8df24108-6e70-4fc8-b1cc-f2db7fcdd535.jpg\u0026#34; /\u0026gt; \u0026lt;podcast:chat server=\u0026#34;yourinstance.tld\u0026#34; protocol=\u0026#34;xmpp\u0026#34; embedUrl=\u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; /\u0026gt; \u0026lt;/podcast:liveItem\u0026gt; In case the instance has activated the external XMPP clients connection feature:\n\u0026lt;podcast:liveItem status=\u0026#34;live\u0026#34; start=\u0026#34;2023-07-06T18:00:00.000Z\u0026#34;\u0026gt; \u0026lt;title\u0026gt;The video title\u0026lt;/title\u0026gt; \u0026lt;guid isPermaLink=\u0026#34;false\u0026#34;\u0026gt;e32b4890-983b-4ce5-8b46-f2d6bc1d8819_2023-07-06T18:00:00.000Z\u0026lt;/guid\u0026gt; \u0026lt;link\u0026gt;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026lt;/link\u0026gt; \u0026lt;podcast:socialInteract uri=\u0026#34;https://yourinstance.tld/videos/watch/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; protocol=\u0026#34;activitypub\u0026#34; accountUrl=\u0026#34;https://yourinstance.tld/a/youraccount\u0026#34; /\u0026gt; \u0026lt;enclosure url=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; type=\u0026#34;application/x-mpegURL\u0026#34; /\u0026gt; \u0026lt;podcast:alternateEnclosure type=\u0026#34;application/x-mpegURL\u0026#34; lang=\u0026#34;en\u0026#34; title=\u0026#34;HLS\u0026#34; default=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;podcast:source uri=\u0026#34;https://yourinstance.tld/path/to/video/master.m3u8\u0026#34; /\u0026gt; \u0026lt;/podcast:alternateEnclosure\u0026gt; \u0026lt;itunes:image href=\u0026#34;https://yourinstance.tld/lazy-static/previews/8df24108-6e70-4fc8-b1cc-f2db7fcdd535.jpg\u0026#34; /\u0026gt; \u0026lt;podcast:chat server=\u0026#34;yourinstance.tld\u0026#34; protocol=\u0026#34;xmpp\u0026#34; space=\u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535@room.yourinstance.tld\u0026#34; embedUrl=\u0026#34;https://yourinstance.tld/plugins/livechat/router/webchat/room/8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; /\u0026gt; \u0026lt;/podcast:liveItem\u0026gt; Algorithm If you want to display the chat in a web page or in an iframe, here is what you should do:\n get the Podcast RSS feed for the channel, if there is no \u0026lt;podcast:liveItem\u0026gt; element under the \u0026lt;channel\u0026gt;, stop. find the \u0026lt;podcast:liveItem\u0026gt; you are looking for  \u0026lt;podcast:socialInteract\u0026gt; can be used to cross-reference the items with ActivityPub   if there is no \u0026lt;podcast:chat\u0026gt; element under the \u0026lt;podcast:liveItem\u0026gt;, stop. loop through the \u0026lt;podcast:chat\u0026gt; values (if \u0026lt;podcast:chat\u0026gt; is not an array, just iterate on this single value)  there should only be one, but you should expect to handle several just in case   search for the first entry protocol === xmpp and an embedUrl attribute if found, open this embedUrl  If you want to open the chat room using the XMPP protocol:\n get the Podcast RSS feed for the channel, if there is no \u0026lt;podcast:liveItem\u0026gt; element under the \u0026lt;channel\u0026gt;, stop. find the \u0026lt;podcast:liveItem\u0026gt; you are looking for  \u0026lt;podcast:socialInteract\u0026gt; can be used to cross-reference the items with ActivityPub   loop through the \u0026lt;podcast:chat\u0026gt; values (if \u0026lt;podcast:chat\u0026gt; is not an array, just iterate on this single value)  there should only be one, but you should expect to handle several just in case   search for the first entry protocol === xmpp and a space attribute  space should be an XMPP JID for a MUC   if found, open this XMPP JID with your client after converting it to a join URI, or connect to the XMPP room at that address  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/bot/quotes/","title":"Timer","tags":[],"description":"Der Chatbot kann in regelmäßigen Abständen einige Nachrichten senden.","content":"Sie können mehrere voraufgezeichnete Nachrichten (Timer) konfigurieren, die in regelmäßigen Abständen gesendet werden. Diese Nachrichten werden vom Chatbot alle X Minuten gesendet. Sie können beispielsweise festlegen, dass der Bot alle 5 Minuten eine Sponsor-Information sendet. Wenn sich kein Benutzer im Chatraum befindet, sendet der Chatbot keine Nachricht.\n Konfiguration der Timer\nTimer Sie können mehrere voraufgezeichnete Nachrichten (Timer) konfigurieren, die in regelmäßigen Abständen gesendet werden. Diese Nachrichten werden vom Chatbot alle X Minuten gesendet. Sie können beispielsweise festlegen, dass der Bot alle 5 Minuten eine Sponsor-Information sendet. Eine Nachricht pro Zeile. Wenn mehrere Nachrichten vorhanden sind, wird alle X Minuten eine zufällig ausgewählt. Alle X Minuten senden Der Chatbot wird die Nachricht alle X Minuten veröffentlichen. "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/translate/","title":"Übersätzen","tags":[],"description":"Das Plugin übersetzen","content":"Sie können zur Übersetzung dieses Plugins beitragen. Die Übersetzungen werden mit der Software Weblate unter Verwendung der Framasoft Weblate Instanz bearbeitet.\nÄndern Sie niemals direkt Dateien im Ordner languages, dies könnte zu Konflikten führen.\n Wie funktioniert es  Erstellen Sie ein Konto: https://weblate.framasoft.org/accounts/register/ Bestätigen Sie Ihre E-Mail und folgen Sie dem zugesandten Link Erstellen Sie Ihr Passwort und richten Sie Ihr Konto ein Rufen Sie die Projektseite des Plugins auf: https://weblate.framasoft.org/projects/peertube-livechat/peertube-plugin-livechat/ Wählen Sie die Sprache, die Sie übersetzen möchten Übersetzen Sie einfach die fehlenden Sätze, oder korrigieren Sie die Sätze, die Ihnen falsch erscheinen.  Es könnte einige «sehr technische» Zeichenfolgen geben. Wenn Sie sich der Bedeutung oder Ihrer Übersetzung nicht 100%ig sicher sind, sollten Sie sie besser nicht übersetzen, damit sie in Englisch angezeigt werden.\n ConverseJS Übersetzungen Dieses Plugin verlässt sich auf ConverseJS für das Chat-Frontend. ConverseJS hat seine eigenen Übersetzungen, in seiner eigenen Weblateinstanz. Sie können auch direkt im Code-Repository übersetzen. Weitere Informationen finden Sie in der ConverseJS Übersetzungsdokumentation.\nEine neues Sprachgebiet hinzufügen Wenn Sie glauben, dass eine Sprache fehlt, prüfen Sie bitte zuerst, ob sie von Peertube unterstützt wird. Wenn ja, können Sie ein Problem erstellen, um danach zu fragen.\nHinzufügen neuer Zeichenfolgen / Verwendung von Übersetzungen im Code Wenn Sie an neuen Funktionen arbeiten und neue Zeichenketten benötigen, können Sie diese direkt in Weblate erstellen. Die englische Version ist obligatorisch. Beginnen Sie mit ihr.\nJede Zeichenfolge ist mit einem Schlüssel verknüpft (z. B. use_chat). Wählen Sie einen expliziten Schlüssel in Englisch und nutzen Sie nur Kleinbuchstaben.\nWenn Sie neue Zeichenketten testen müssen, ohne auf einen Weblate-Zusammenschluss zu warten, können Sie die Dateien languages/*.yml ändern, aber vermeiden Sie es, diese Änderungen zu übertragen (um das Konfliktrisiko zu minimieren).\nÜbersetzungen im Front-End-Code verwenden Bevor Sie eine Zeichenkette im Frontend verwenden, müssen Sie eine neue Konstante in client/@types/global.d.ts deklarieren. Der Name der Konstante muss:\n mit dem Präfix \u0026ldquo;LOC_\u0026rdquo; beginnen den Zeichenketten Schlüssel in Großbuchstaben verwenden Sie müssen nur den Typ angeben, nicht den Wert  Um zum Beispiel \u0026ldquo;use_chat\u0026rdquo; zu verwenden, müssen Sie deklarieren:\ndeclare const LOC_USE_CHAT: string Das Skript build-client.js liest die client/@types/global.d.ts, sucht nach solchen Konstanten und lädt deren Werte aus den Sprachdateien.\nJetzt können Sie einfach peertubeHelpers.translate(LOC_USE_CHAT) in Ihrem Code aufrufen.\nÜbersetzungen im Backend-Code verwenden Theoretisch sind die einzigen Teile des Backend-Codes, für die eine Lokalisierung erforderlich ist, die Deklaration der Einstellungen und standardisierte Daten (ActivityPub, RSS, \u0026hellip;). Hier müssen wir englische Zeichenketten aus dem Übersetzungsschlüssel holen.\nHinweis: Sie sollten nie eine weitere Sprachübersetzung vom Backend-Code benötigen. Die Lokalisierung muss im Frontend erfolgen.\nEs gibt ein lib/loc.ts Modul, das eine loc() Funktion bereitstellt. Übergeben Sie ihr einfach den Schlüssel, um die englische Zeichenkette zu erhalten: loc('diagnostic')'.\nÜbersätzungs-Dokumentation Die Übersetzung der Dokumentation erfolgt mit Hilfe der entsprechenden Weblate-Komponente.\nEs gibt einen speziellen \u0026ldquo;Hugo Shortcode\u0026rdquo;, den Sie verwenden können, um eine Anwendungszeichenkette anzuzeigen. Wenn Sie beispielsweise den Namen der Schaltfläche \u0026ldquo;open_chat_new_window\u0026rdquo; anzeigen möchten, können Sie dies in der Markdown-Datei der Dokumentation verwenden:\n{{% livechat_label open_chat_new_window %}} Sie können auch verhindern, dass eine ganze Seite übersetzt wird, indem Sie livechatnotranslation: true in der Yaml Font Matter Sektion hinzufügen:\n--- title: \u0026#34;Drittanbieter\u0026#34; description: \u0026#34;Anzeige des Livechats mit Software von Drittanbietern.\u0026#34; weight: 20 chapter: false livechatnotranslation: true --- Übersetze niemals eine Zeichenkette in der Datei livechat.en.pot, sie würde ignoriert werden. Bearbeiten Sie stattdessen direkt die Markdown-Dateien.\nWenn eine Zeichenfolge einen Link enthält, können Sie ihn in den richtigen Link in der übersetzten Sprache ändern. Zum Beispiel können Sie für einen Link zu dieser Dokumentation den Sprachcode in die URL einfügen.\nEinige Zeichenfolgen sind Code-Blöcke. Übersetzen Sie den Code nicht. Aber Sie können Kommentare oder Parameter übersetzen, wenn sie relevant sind.\nWenn Sie sich nicht sicher sind, übersetzen Sie einfach nicht und fragen Sie, was zu tun ist.\nDas Tool, mit dem ich die Übersetzungen für die Dokumentation bearbeite, verhält sich manchmal seltsam. Wenn ich Sätze hinzufüge, die anderen bestehenden Sätzen ähneln, kopiert es manchmal bestehende Übersetzungen. Wenn Sie also Übersetzungen als \u0026ldquo;zu prüfen\u0026rdquo; markiert haben, stellen Sie bitte sicher, dass es vor der Validierung keine Zeichenfolge kopiert, die nichts mit der englischen zu tun hat.\nWenn Sie sich nun über den Kontext einer Zeichenkette sicher sind, können Sie die Position der Zeichenkette im rechten Fensterbereich von weblate überprüfen und die entsprechende Dokumentationsseite öffnen. Für eine Zeichenfolge in der Datei support/documentation/content/de/documentation/user/streamers.md lautet die entsprechende URL beispielsweise https://livingston.frama.io/peertube-plugin-livechat/de/documentation/user/streamers/.\nAllgemeine Empfehlungen Bitte formulieren Sie umfassend und beachten Sie den Verhaltenskodex.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/","title":"Admin Dokumentation","tags":[],"description":"Plugin Peertube Livechat Administation","content":"  Einstellungen  Plugin Peertube Livechat Einstellungen\n   Fortgeschrittene Nutzung  Einige erweiterte Funktionen\n  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n   Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n    "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/feedback/","title":"Geben Sie Ihr Feedback","tags":[],"description":"Geben Sie Ihr Feedback","content":"Sie müssen keine Programmierkenntnisse haben, um zu diesem Plugin beizutragen! Andere Beiträge sind auch sehr wertvoll, darunter: Sie können die Software testen und Fehler melden, Sie können Feedback geben, Funktionen die Sie interessieren, Benutzeroberfläche, Design, \u0026hellip;\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/channel/","title":"Kanalkonfiguration","tags":[],"description":"Peertube Kanal Chaträume Konfiguration","content":" Diese Funktion wird mit dem Livechatplugin Version 8.0.0 geliefert und kann von den Administratoren Ihrer Instanz deaktiviert werden.\n Im linken Menü von Peertube gibt es einen Eintrag \u0026ldquo;Chaträume\u0026rdquo;:\nDieser \u0026ldquo;Chaträume\u0026rdquo; Link führt Sie zu einer Liste Ihrer Kanäle. Wenn Sie auf einen Kanal klicken, können Sie einige Optionen für Ihre Kanäle einrichten:\nHier können Sie konfigurieren:\n Der langsame Modus Den Chatbot Weitere Funktionen werden folgen\u0026hellip;  "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/slow_mode/","title":"Langsamer Modus","tags":[],"description":"Plugin peertube-plugin-livechat Langsamer Modus","content":" Diese Funktionen werden mit dem Livechatplugin Version 8.3.0 verfügbar sein.\n Einführung Als Streamer haben Sie die Möglichkeit, die Anzahl der Nachrichten Ihrer Zuschauer im Chat zeitlich zu begrenzen.\nDies kann sehr nützlich sein, um:\n eine Nachrichtenüberflutung zu vermeiden einen unleserlichen Chat vermeiden, wenn viele Zuschauer schreiben  Sie können eine Anzahl von Sekunden festlegen, die die Benutzer nach dem Senden einer Nachricht warten müssen, bevor sie eine weitere senden können.\nDiese Einschränkung gilt nicht für Moderatoren.\nStandard Kanalwert Auf der Kanal Konfigurations Seite können Sie einen Standardwert für den langsamen Modus einstellen:\nDieser Wert gilt als Standardwert für neue Chaträume. Er gilt nicht für bereits bestehende Chaträume.\nWird der Wert auf \u0026ldquo;0\u0026rdquo; gesetzt, wird die Funktion deaktiviert.\nWenn Sie den Wert auf eine positive ganze Zahl setzen, wird der Zeitraum festgelegt, in dem die Benutzer keine weiteren Nachrichten senden können.\nÄndern des Wertes für einen bestehenden Chatraum Um die Dauer des langsamen Modus für einen bestehenden Chatroom zu ändern, müssen Sie ihn zunächst im Vollbildmodus öffnen. Öffnen Sie dann das obere Menü und klicken Sie auf \u0026ldquo;Konfigurieren\u0026rdquo;.\nSie müssen nur den Wert des Feldes \u0026ldquo;langsamer Modus\u0026rdquo; ändern.\nWird der Wert auf \u0026ldquo;0\u0026rdquo; gesetzt, wird die Funktion deaktiviert.\nWenn Sie den Wert auf eine positive ganze Zahl setzen, wird der Zeitraum festgelegt, in dem die Benutzer keine weiteren Nachrichten senden können.\nDie Änderung wird sofort wirksam.\nFür Zuschauer Wenn der langsame Modus aktiviert ist, wird der Benutzer durch eine Nachricht informiert.\nWenn sie eine Nachricht senden, wird das Eingabefeld für X Sekunden deaktiviert (wobei X die Dauer des langsamen Modus ist).\nDiese Einschränkung gilt nicht für Moderatoren.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/advanced/xmpp_clients/","title":"XMPP-Clients","tags":[],"description":"Verbindungen über XMPP-Clients zulassen","content":"Dieses Chatmodul basiert auf dem XMPP-Protokoll, das auch als Jabber bekannt ist. Es ist daher möglich, sich mit Hilfe von XMPP-Client-Software mit den Chats zu verbinden. Dies kann zum Beispiel nützlich sein, um Moderationsvorgänge zu erleichtern.\nDie Benutzerdokumentation zu diesen Funktionen finden Sie auf der Seite Benutzerdokumentation.\nDie Aktivierung dieser Funktionen erfordert Konfigurationsänderungen auf dem Server und in den DNS-Einträgen. Es ist nicht möglich, dies nur über die Peertube-Schnittstelle zu konfigurieren, und es erfordert einige grundlegende Systemadministrationskenntnisse.\n Melden Sie sich bei Ihrem Peertube-Konto an Diese Funktion ist noch nicht verfügbar und wird in einer zukünftigen Version des Plugins enthalten sein.\n Verbindung über ein externes XMPP-Konto Um diese Funktion zu aktivieren, müssen Sie Ihren Server und Ihre DNS-Einträge so einrichten, dass XMPP-Clients den Prosody-Server finden und erreichen können, den dieses Plugin intern verwendet.\nPlugin Einstellungen Beginne mit den Einstellungen des Livechat-Plugins deiner Instanz und aktiviere die Einstellung \u0026ldquo;Verbindung zum Raum über externe XMPP-Konten aktivieren\u0026rdquo;. Wenn Sie diese Einstellung aktivieren, erscheinen unterhalb neue Einstellungen.\nZunächst einmal das Feld \u0026ldquo;Prosody-Server-zu-Server-Port\u0026rdquo;. Dieses Feld ist standardmäßig auf 5269 voreingestellt, dem Standardport für diesen Dienst. Sie können jedoch einen anderen Port wählen, wenn dieser bereits auf Ihrem Server verwendet wird.\nAnschließend können Sie im Feld \u0026ldquo;Netzwerkschnittstellen zwischen Server und Server\u0026rdquo; angeben, welche Netzwerkschnittstellen der Server abhören soll. Der Standardwert \u0026ldquo;*, ::\u0026rdquo; bedeutet, dass alle IP-Adressen abgehört werden sollen. Sie können diese Werte ändern, wenn Sie nur bestimmte IP-Adressen abhören möchten. Die Syntax wird neben der Einstellung erklärt.\nDie Einstellung \u0026ldquo;Zertifikatsordner\u0026rdquo; können Sie leer lassen. In diesem Fall wird das Plugin automatisch selbstsignierte Zertifikate erzeugen. Einige XMPP-Server verweigern je nach ihrer Konfiguration möglicherweise die Verbindung. In diesem Fall können Sie hier einen Pfad auf dem Server angeben, in dem Sie die vom Modul zu verwendenden Zertifikate ablegen müssen. Es liegt an Ihnen, diese zu erzeugen und zu erneuern. Für weitere Informationen siehe unten.\nFirewall Sie müssen den konfigurierten Port (standardmäßig 5269) in Ihrer Firewall öffnen.\nWenn Sie Docker für Ihren Peertube verwenden, müssen Sie die Datei docker-compose.yml ändern, um Port 5269 des Peertube-Containers zu öffnen, damit sich die Außenwelt mit ihm verbinden kann.\nDNS Sie müssen einen DNS-Eintrag hinzufügen, der es entfernten Servern ermöglicht, die Komponente \u0026ldquo;room.your_instance.tld\u0026rdquo; zu finden.\nAm einfachsten ist es, einen SRV-Eintrag für die Subdomäne \u0026ldquo;room\u0026rdquo; hinzuzufügen:\n record name: _xmpp-server._tcp.room.ihre_instanz.tld. (ersetzen Sie «ihre_instanz.tld» mit ihrer Instanz Uri) TTL: 3600 class: IN SRV: 0 priority: 0 weight: 5 Port: 5269 (anpassen, wenn Sie den Standardport geändert haben) Ziel: ihre_instanz.tld. (durch Ihre Instanz-URI ersetzen)  Achten Sie darauf, dass der Punkt nach \u0026ldquo;ihre_instanz.tld\u0026rdquo; erhalten bleibt.\nWenn Sie den Befehl dig verwenden, um Ihren Datensatz zu überprüfen, sollten Sie ein ähnliches Ergebnis wie dieses erhalten:\n$ dig +short _xmpp-server._tcp.room.videos.john-livingston.fr. SRV 0 5 5269 videos.john-livingston.fr. Wenn Sie nicht den Standardport 5269 verwenden, müssen Sie auch einen SRV-Eintrag für _xmpp-server._tcp.ihre_instanz.tld. hinzufügen (wie oben, nur ohne das Präfix room.). Natürlich können Sie diesen Eintrag auch hinzufügen, wenn Sie den Standard-Port verwenden. Das wird auch funktionieren.\nVerwendung vertrauenswürdiger Zertifikate Die selbstsignierten Zertifikate, die dieses Plugin standardmäßig verwendet, können von einigen XMPP-Servern aus Sicherheitsgründen abgelehnt werden.\nEs ist möglich, von einer Zertifizierungsstelle validierte Zertifikate zu verwenden. Dies erfordert jedoch fortgeschrittene Kenntnisse in der Systemverwaltung. Aufgrund der Vielzahl möglicher Anwendungsfälle ist es in der Tat unmöglich, hier alle Situationen zu dokumentieren. Diese Dokumentation wird daher nur das zu erreichende Ziel erläutern und ein Beispiel geben, das nur für eine \u0026ldquo;einfache\u0026rdquo; Situation geeignet ist (manuelle Installation von Peertube unter Verwendung von letsencrypt). Wenn Sie sich in einer anderen Situation befinden (Docker-Installation, von einer anderen Autorität signierte Zertifikate, etc\u0026hellip;), müssen Sie diesen Ansatz selbst anpassen.\nGrundlegendes Prinzip Es liegt an Ihnen, gültige Zertifikate für die Domänen ihre_instanz.tld und room.ihre_instanz.tld zu erzeugen. Sie können jede von Prosody unterstützte Methode verwenden.\nSie müssen diese Zertifikate dann in einem Ordner ablegen, auf den der peertube-Benutzer zugreifen kann, und diesen Ordner in der Plugin Einstellung \u0026ldquo;Certificate folder\u0026rdquo; angeben.\nWenn Sie das Programm ProsodyCtl verwenden möchten, um Zertifikate zu importieren, ist es (sobald Peertube gestartet ist) mit folgendem Befehl verfügbar (passen Sie den Pfad zu Ihrem Peertube-Datenordner an und ersetzen Sie \u0026ldquo;xxx\u0026rdquo; durch die Argumente, die Sie an prosodyctl übergeben wollen): sudo -u peertube /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun prosodyctl xxx\n Das Plugin prüft einmal am Tag, ob Dateien in diesem Ordner geändert wurden, und lädt Prosody gegebenenfalls neu.\nMethode für den einfachen Fall Wir gehen hier davon aus, dass Ihre Peertube Installation \u0026ldquo;klassisch\u0026rdquo; ist (keine Verwendung von Docker) und dass die Zertifikate von letsencrypt mit dem Werkzeug certbot erzeugt werden.\nAls erstes müssen wir ein Zertifikat für die Subdomain room.ihre_instanz.tld erstellen: dies ist die Uri der MUC (XMPP chat rooms) Komponente. Auch wenn die Verbindungen über ihre_instanz.tld hergestellt werden, benötigen wir ein gültiges Zertifikat für diese Subdomain.\nBeginnen Sie also damit, einen DNS-Eintrag für room.ihre_instanz.tld einzurichten, der auf Ihren Server verweist. Sie können einen CNAME-Eintrag verwenden (oder einen A-Eintrag und einen AAAA-Eintrag).\nAls Nächstes verwenden wir nginx (bereits für Ihr Peertube installiert), um das certbot-Zertifikat zu erzeugen. Wir werden eine neue Website erstellen. In der Datei /etc/nginx/site-available/room.peertube fügen Sie hinzu:\nserver { listen 80; listen [::]:80; server_name room.ihre_instanz.tld; location /.well-known/acme-challenge/ { default_type \u0026#34;text/plain\u0026#34;; root /var/www/certbot; } location / { return 301 https://ihre_instanz.tld; } } Aktivieren Sie dann die Website:\nln -s /etc/nginx/sites-available/room.peertube /etc/nginx/sites-enabled/ systemc reload nginx Dann bereiten wir den Ordner vor, in den wir später die Zertifikate importieren werden. Wir gehen hier davon aus, dass Sie das Plugin bereits aktiv haben. Wir erstellen den folgenden Ordner (falls er noch nicht existiert), mit dem Benutzer peertube, um sicherzustellen, dass es keine Probleme mit den Berechtigungen gibt:\nsudo -u peertube mkdir /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosody/certs Nun müssen Sie diesen Ordner in den Plugin-Einstellungen für den Parameter \u0026ldquo;Zertifikatsordner\u0026rdquo; konfigurieren. Es ist wichtig, dies jetzt zu tun, da sonst das Skript für den Zertifikatsimport die Zertifikate in den falschen Ordner legt.\nWir werden certbot so konfigurieren, dass die generierten Zertifikate in den Prosody Ordner importiert werden. Wir können das Programm ProsodyCtl verwenden, das im Plugin enthalten ist.\nHinweis: Damit es verfügbar ist, muss das Plugin mindestens einmal gestartet worden sein.\nWir werden eine Datei /etc/letsencrypt/renewal-hooks/deploy/prosody.sh erstellen, die Folgendes enthält:\n#!/bin/sh /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun prosodyctl \\  --root \\  --config /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/prosody/prosody.cfg.lua \\  cert import \\  room.your_instance.tld your_instance.tld /etc/letsencrypt/live Dann bitten wir um die Erstellung des Zertifikats:\ncertbot -d room.videos.john-livingston.fr Wenn certbot Ihnen mehrere Methoden zur Erstellung des Zertifikats anbietet, wählen Sie \u0026ldquo;nginx\u0026rdquo;.\nNormalerweise sollten Sie die Zertifikate nun in dem konfigurierten Ordner finden.\nHinweis: Wenn Sie dies zum ersten Mal tun, müssen Sie Prosody neu laden. Der einfachste Weg, dies zu tun, ist, Peertube neu zu starten.\nMethode für das Docker-Verfahren Diese Methode funktioniert mit dem offiziell unterstützten Docker Guide von PeerTube.\nStellen Sie zunächst sicher, dass Sie einen DNS-Eintrag für \u0026ldquo;room.ihre_instanz.tld\u0026rdquo; erstellen, der auf Ihren Server verweist. Sie können einen CNAME-Eintrag (oder einen A-Eintrag und einen AAAA-Eintrag) verwenden. Dies ist erforderlich, damit Let\u0026rsquo;s Encrypt die Domäne für die Zertifikatserstellung validieren kann.\nGeben Sie das Verzeichnis an, in dem sich Ihre Datei docker-compose.yml befindet.\nÖffnen Sie eine Befehlszeile im certbot Container:\ndocker exec -it certbot /bin/sh Starten Sie certbot:\ncertbot Es wird eine Reihe von Eingabeaufforderungen angezeigt. Geben Sie 2 für den Authentifizierungstyp ein:\nHow would you like to authenticate with the ACME CA? Select the appropriate number [1-2] then [enter] (press \u0026#39;c\u0026#39; to cancel): 2 Geben Sie den Domänennamen \u0026ldquo;room.ihre_instanz.tld\u0026rdquo; ein:\nPlease enter the domain name(s) you would like on your certificate (comma and/or space separated) (Enter \u0026#39;c\u0026#39; to cancel): room.your_instance.tld Geben Sie das Verzeichnis an, in dem der PeerTube-Webserver Anfragen für Let\u0026rsquo;s Encrypt bedient, /var/www/certbot:\nInput the webroot for \u0026lt;room.your_instance.tld\u0026gt;: (Enter \u0026#39;c\u0026#39; to cancel): /var/www/certbot Sie sollten eine Ausgabe wie die folgende sehen:\nSuccessfully received certificate. Certificate is saved at: /etc/letsencrypt/live/room.your_instance.tld/fullchain.pem Key is saved at: /etc/letsencrypt/live/room.your_instance.tld/privkey.pem Führen Sie den folgenden Befehl innerhalb des certbot-Containers aus, um der peertube-Gruppe Lesezugriff auf die neuen Zertifikate und privaten Schlüssel zu geben. Hinweis: Dadurch werden die Dateien auch für die Gruppe mit der ID 999 auf dem Host-System lesbar. Überprüfen Sie die Gruppen auf Ihrem System, um dieses Risiko einzuschätzen, bevor Sie diesen Befehl ausführen.\nchown -R root:999 /etc/letsencrypt/live; \\ chmod 750 /etc/letsencrypt/live; \\ chown -R root:999 /etc/letsencrypt/archive; \\ chmod 750 /etc/letsencrypt/archive; \\ find /etc/letsencrypt/ -name \u0026#39;privkey*\u0026#39; -exec chmod 0640 {} \\; Verlassen Sie den certbot-Container:\nexit Ändern Sie Ihre Datei docker-compose.yml, indem Sie die Zeile entrypoint unter dem Dienst certbot wie folgt ändern. Dies ist das Gleiche wie oben, soll aber automatisch nach jeder Zertifikatserneuerung ausgeführt werden.\nentrypoint: /bin/sh -c \u0026#34;trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; chown -R root:999 /etc/letsencrypt/live; chmod 750 /etc/letsencrypt/live; chown -R root:999 /etc/letsencrypt/archive; chmod 750 /etc/letsencrypt/archive; find /etc/letsencrypt/ -name \u0026#39;privkey*\u0026#39; -exec chmod 0640 {} +; sleep 12h \u0026amp; wait $${!}; done;\u0026#34; Fahren Sie mit der Änderung der Datei docker-compose.yml fort und fügen Sie das certbot-Zertifikatsvolumen in den Peertube-Container ein. Es sollte in etwa so aussehen:\nvolumes: - ./docker-volume/certbot/conf:/etc/letsencrypt Den Dienst neustarten:\ndocker-compose down; docker-comopse up -d Setzen Sie in den Livechat-Plugin-Einstellungen in den PeerTube-Administrationseinstellungen den Zertifikatsordner auf den folgenden Wert:\n/etc/letsencrypt/live Speichern Sie die Plugin Einstellungen und überprüfen Sie, ob Prosody die Zertifikate erkennen kann:\ndocker-compose exec -u peertube \\  peertube \\  /data/plugins/data/peertube-plugin-livechat/prosodyAppImage/squashfs-root/AppRun \\  prosodyctl \\  --config /data/plugins/data/peertube-plugin-livechat/prosody/prosody.cfg.lua \\  check certs Fehlerbehebung Wenn Sie es nicht hinbekommen, können Sie das Diagnosetool verwenden (es gibt eine Schaltfläche oben auf der Seite mit den Plugin-Einstellungen) und sich den Abschnitt «Prosody check» genau ansehen.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/bot/commands/","title":"Befehle","tags":[],"description":"Der Chatbot kann auf verschiedene Befehle reagieren.","content":"Sie können den Chatbot so konfigurieren, dass er auf Befehle reagiert. Ein Befehl ist eine Nachricht, die mit einem \"!\" beginnt, wie zum Beispiel \"!help\" den Befehl \"help\" aufruft. Sie können mehrere Befehle einrichten.\nBefehl Den Befehl, ohne das beginnende \"!\" eintragen. Zum Beispiel \"help\", \"sponsor\", ... Alle X Minuten senden Der Chatbot wird die Nachricht alle X Minuten veröffentlichen. "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/bot/","title":"Chatbot","tags":[],"description":"Chatbot Einrichtung","content":" Diese Funktion wird mit dem Livechatplugin Version 8.0.0 geliefert und kann von den Administratoren Ihrer Instanz deaktiviert werden.\n Sie können einen Chatbot für Ihre Chaträume aktivieren. Die Chatbotkonfiguration wird für jeden Kanal vorgenommen und gilt für alle Chaträume der zugehörigen Videos.\nUm auf diese Seite zuzugreifen, sehen Sie sich die Kanal Konfigurations Dokumentation an.\nDort können Sie den Chatbot aktivieren und verschiedene Optionen einstellen:\n Verbotene Wörter  Der Chatbot kann automatisch Nachrichten moderieren, die verbotene Wörter enthalten.\n   Timer  Der Chatbot kann in regelmäßigen Abständen einige Nachrichten senden.\n   Befehle  Der Chatbot kann auf verschiedene Befehle reagieren.\n   Der Chatbot wird sofort neu geladen, wenn Sie die Seite speichern.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/develop/","title":"Entwickeln","tags":[],"description":"Entwickeln","content":"Sprechen Sie immer über die Funktionen, die Sie entwickeln wollen, indem Sie das Issue, das Ihr Problem behandelt, erstellen/finden und kommentieren bevor Sie mit der Arbeit daran beginnen und informieren Sie die Gemeinschaft darüber, dass Sie mit der Programmierung beginnen, indem Sie das Thema für sich beanspruchen.\nBitte benutzen Sie den main Zweig.\nBis März 2023 wurden die Beiträge auf dem develop Zweig erstellt. Dieses Verfahren ist nun veraltet.\n Voraussetzung für die Erstellung dieses Plugins Es wird dringend empfohlen, mit den folgenden Konzepten vertraut zu sein:\n Git NodeJS NPM Typescript  Um das Plugin zu erstellen, benötigen Sie die folgenden Pakete:\n git npm (\u0026gt;=8.x) nodejs (\u0026gt;=14.x) build-essential coreutils wget  Bitte beachten Sie, dass dieses Plugin ein AppImage für den Prosody XMPP Server benötigt. Dieses AppImage wird vom Prosody AppImage Seitenprojekt bereitgestellt. Das Skript build-prosody.sh lädt Binärdateien herunter, die an dieses entfernte Repository angehängt sind, und überprüft, ob ihre sha256-Hashsumme korrekt ist.\nEntwickeln Klonen Sie das Repository, bauen Sie das Plugin, und erstellen Sie Ihren Feature-Zweig:\n# Kopieren Sie das Repository. Vergessen Sie nicht die Option --recursive, um Submodule mit zu kopieren. git clone https://github.com/JohnXLivingston/peertube-plugin-livechat.git --recursive cd peertube-plugin-livechat # Installieren Sie die NPM-Abhängigkeiten und erstellen Sie das Modul zum ersten Mal: npm install # Erstellen des Plugins nach einer Änderung: npm run build # Wenn Sie einen Fork aus dem Repository haben, fügen Sie ihn als Remote hinzu (Beispiel): git remote add me git@github.com:MY_GITHUB_ACCOUNT/peertube-plugin-livechat.git # Erstellen Sie einen lokalen Zweig für Ihre Entwicklungen und testen Sie ihn aus (Beispiel): git checkout my_development # Hinweis: Wenn ein Github Problem damit verbunden ist, verwenden Sie fix_1234 als Zweigname (wobei 1234 die Nummer des Problems ist). # Um Ihre Änderungen vorzuschlagen, schieben Sie Ihren Zweig in Ihr Repository (Beispiel): git push --set-upstream me my_development # Gehen Sie dann mit Ihrem Webbrowser zu Ihrem Github-Repository, um den Pull Request vorzuschlagen (siehe zusätzliche Anweisungen unten) Sobald Sie bereit sind, Ihren Code zu zeigen und um Feedback zu bitten, reichen Sie einen Entwurf für einen Pull Request ein. Sobald Sie bereit für eine Codeüberprüfung vor der Zusammenführung sind, reichen Sie einen Pull Request ein. In jedem Fall sollten Sie Ihren PR mit dem Problem, die er behebt, verlinken, indem Sie die GitHub-Syntax verwenden: \u0026ldquo;fixes #issue_number\u0026rdquo;.\nDer Front-End-Code befindet sich im Ordner client, der Back-End-Code im Ordner server. Es gibt einige gemeinsam genutzte Codes im shared Ordner.\nFür allgemeine Anweisungen (Entwicklung von Plugins, Erstellung, Installation, \u0026hellip;), lesen Sie bitte die Peertube Dokumentation.\nSie können das Plugin mit zusätzlichen Debug-Funktionen bauen, indem Sie es einfach benutzen:\nNODE_ENV=dev npm run build ESBuild vs Typescript Dieses Plugin verwendet ESBuild für die Generierung von Frontend-Code, wie das offizielle peertube-plugin-quickstart Plugin. ESBuild kann mit Typescript umgehen, prüft aber keine Typen (siehe ESBuild-Dokumentation). Deshalb kompilieren wir Typescript zuerst mit der Option -noEmit, nur um die Typen zu überprüfen (check:client:ts in der package.json Datei). Dann, wenn alles in Ordnung ist, führen wir ESBuild aus, um das kompilierte Javascript zu erzeugen.\nDebug Modus Es gibt einen Debug Modus für dieses Plugin, der einige Verzögerungen verkürzt. Zum Beispiel werden einige Protokolldateien alle zwei Minuten erneuert, anstatt einmal pro Tag. Dies ermöglicht es, bestimmte Aktionen, für die man normalerweise Stunden oder Tage warten müsste, leichter zu testen.\nUm diesen Modus zu aktivieren, müssen Sie lediglich die Datei /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/debug_mode erstellen (ersetzen Sie /var/www/peertube/storage/ durch den richtigen Pfad Ihrer Installation).\nDas einfache Vorhandensein dieser Datei reicht aus, um den Debug Modus zu aktivieren. Um sicherzustellen, dass sie berücksichtigt wird, können Sie Ihre Peertube Instanz neu starten.\nDiese Datei kann einige JSON enthalten, um erweiterte Optionen zu ermöglichen. Eine Liste der vorhandenen Parameter finden Sie in server/lib/debug.ts. Starten Sie Peertube nach jeder Änderung des Inhalts neu.\nAktivieren Sie diesen Modus nicht auf einem Produktionsserver und auch nicht auf einem öffentlichen Server. Dies könnte Sicherheitsprobleme verursachen.\n Prosody neustarten Wenn der Debug Modus aktiviert ist, können Sie Prosody mit diesem API-Aufruf neu starten: http://your_instance.tld/plugins/livechat/router/api/restart_prosody. Für diesen Aufruf ist keine Authentifizierung erforderlich. Er kann von einer Befehlszeile aus erfolgen, zum Beispiel mit curl http://your_instance.tld/plugins/livechat/router/api/restart_prosody.\nProsody Debugger Es ist möglich, das Prosody AppImage mit Hilfe von MobDebug mit einem externen Debugger zu verbinden.\nDazu müssen Sie MobDebug in einem Ordner einrichten, auf den der Benutzer peertube zugreifen kann. Dann fügen Sie dies in der Datei debub_mode hinzu:\n{ \u0026#34;debug_prosody\u0026#34;: { \u0026#34;debugger_path\u0026#34;: \u0026#34;/der_pfad_zu_mobdebug/src\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;localhost\u0026#34;, \u0026#34;port\u0026#34;: \u0026#34;8172\u0026#34; } } host und port sind optional. debugger_path muss auf den Ordner zeigen, in dem sich die MobDebug .lua Datei befindet.\nPeertube neustarten.\nStarten Sie Ihren Debugger-Server.\nDamit Prosody eine Verbindung mit dem Debugger herstellen kann, rufen Sie die API http://your_instance.tld/plugins/livechat/router/api/restart_prosody?debugger=true auf. Dieser Aufruf erfordert keine Authentifizierung. Er kann von einer Kommandozeile aus erfolgen, zum Beispiel mit curl http://your_instance.tld/plugins/livechat/router/api/restart_prosody?debugger=true. Sie können sogar Ihren Debug Server so konfigurieren, dass er diese Anfrage automatisch startet.\nProsody startet dann neu und verbindet sich mit dem Debugger.\nSchnelle Entwicklungsumgebung mit Docker Es gibt eine Anleitung in französischer Sprache auf dem le Peertube forum das erklärt, wie man schnell eine Entwicklungsumgebung mit Docker erstellt.\nEs wurde ein Repo daraus gemacht, siehe pt-plugin-dev.\nHinweis: Aus einem unbekannten Grund kann Prosody die DNS-Adresse von Containern nicht auflösen, wenn die lua-unbound-Bibliothek verwendet wird. Es gibt einen unsaubere Lösung dafür im Plugin: Erstellen Sie einfach eine /data/plugins/data/peertube-plugin-livechat/no_lua_unbound Datei in deinen docker-volumes, dann starten Sie die Container neu.\nLeistungstests Das livechat-perf-test Repository enthält einige Werkzeuge zur Durchführung von Leistungstests. Sie können verwendet werden, um Code-Verbesserungen zu bewerten oder Engpässe zu finden.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/obs/","title":"OBS","tags":[],"description":"Dokumentation zum Streamen des Chat-Inhalts mit OBS.","content":"OBS ist eine beliebte kostenlose and quellcodeoffene Streaming Software, mit erweiterten Funktionen für Ihre Live-Streams. Auf dieser Seite finden Sie einige Ratschläge, wie Sie Ihre Live-Chats mit OBS verwalten können.\nOBS Overlay Sie können den Chat ganz einfach in Ihren Stream integrieren.\nSie können die Funktion \u0026ldquo;Chat Link teilen\u0026rdquo; verwenden, um eine URL zu Ihrem Chat zu generieren. Diese Schaltfläche sollte sich in der Nähe des Chats befinden, wenn Sie der Videoeigentümer sind (es sei denn, sie wurde von Ihren Serveradministratoren deaktiviert).\nAktivieren Sie das Kontrollkästchen \u0026ldquo;Nur-Lesen\u0026rdquo; im Fenster.\nVerwenden Sie dann diesen Link als \u0026ldquo;Webbrowser-Quelle\u0026rdquo; in OBS.\nSie können die \u0026ldquo;Transpatenter Hintergrund (zum Beispiel für die Streamintegration mit OBS)\u0026rdquo; Option verwenden, um einen transparenten Hintergrund in OBS zu erhalten. Wenn Sie die Hintergrundtransparenz anpassen möchten, können Sie dieses CSS in den Einstellungen Ihrer OBS-Browserquelle hinzufügen:\n:root { --livechat-transparent: rgba(255 255 255 / 90%) !important; } Im vorherigen CSS-Schnipsel können Sie natürlich die Farbe oder die Transparenz ändern, indem Sie die Farbwerte anpassen.\nHinweis: Sie können vollständig die Chat-Farben anpassen. Dies ist noch nicht dokumentiert, aber Sie können dies versuchen: Aktivieren Sie im Fenster die Option \u0026ldquo;Aktuelle Themenfarben verwenden\u0026rdquo;, und versuchen Sie dann, die Farbwerte in der URL manuell zu ändern. Sie müssen gültige CSS-Farbwerte verwenden, und diese müssen in der URL korrekt kodiert sein.\nMischen mehrerer Chats in Ihrem Live-Stream Sie können die social_stream Browsererweiterung verwenden, um mehrere Chat-Quellen (von Peertube, Twitch, Youtube, Facebook, \u0026hellip;) zu mischen und deren Inhalte in Ihren Live-Stream einzubinden. Die Kompatibilität mit diesem Plugin wurde in den letzten Versionen hinzugefügt.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/installation/upgrade_before_6.0.0/","title":"Aktualisieren von Versionen vor 6.0.0","tags":[],"description":"Wichtige Hinweise zum aktualisieren von älteren Versionen.","content":"WICHTIGER HINWEIS Seit Version v6.0.0 benötigt dieses Plugin keine andere Prosody-Installation.\nFalls Sie dieses Plugin vor dieser Version benutzt haben und Sie Prosody manuell installiert haben, können Sie Prosody sicher deinstallieren.\nFalls Sie ein eigenes Peertube Docker Paket genutzt haben, welches Prosody eingebettet hatte, können Sie zu den offiziellen Peertube Paketen zurück wechseln.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/document/","title":"Dokumentation","tags":[],"description":"Dokumentieren Sie das Plugin, oder übersetzen Sie die Dokumentation.","content":"Allgemeine Informationen Informieren Sie die Community immer vor der Arbeit (indem Sie ein neues Problem erstellen oder ein bestehendes kommentieren). Damit soll vermieden werden, dass zwei Personen an der gleichen Sache arbeiten, und Konflikte zu verhindern.\nBitte benutzen Sie den main-Zweig.\nDer Quellcode der Dokumentation befindet sich im Ordner support/documentation/content.\nDie Dokumentation wird mit Hugo erstellt. Sie müssen es auf Ihrem Computer installieren, wenn Sie eine Vorschau Ihrer Arbeit sehen wollen.\nDas verwendete Thema ist hugo-theme-learn. Sie sollten dessen Dokumentation lesen, bevor Sie mit der Bearbeitung der Dokumentation beginnen.\nWenn eine neue Pluginversion veröffentlicht oder die Dokumentation aktualisiert wird, führen die Plugin Verwalter den main-Zweig mit dem documentation-Zweig zusammen. Dadurch werden Github- und Gitlab-Pipelines ausgelöst und die veröffentlichte Dokumentation aktualisiert.\nÜbersätzungen Die Hauptsprache ist Englisch (Code en).\nDer Ordner support/documentation/content/en enthält nur englische Dokumentationsdateien.\nDie Dokumentation wird mit Weblate übersetzt (siehe die Übersetzungsdokumentation). Um dies zu tun, verwenden wir das po4a tool, wie wir später auf dieser Seite sehen werden.\nEine neue Sprache hinzufügen Kopieren und ändern Sie den Abschnitt [Languages.fr] in der Datei support/documentation/config.toml.\nWenn die Übersetzungen nicht vollständig sind, macht das nichts, die fehlenden Zeichenfolgen werden auf Englisch angezeigt.\nVorschau Um eine Vorschau Ihrer Änderungen zu sehen, führen Sie einfach diesen Befehl aus:\nhugo serve -s support/documentation/ Öffnen Sie dann Ihren Browser und gehen Sie auf die Adresse http://localhost:1313/peertube-plugin-livechat/. Diese Seite wird bei jeder Änderung automatisch aktualisiert.\nAktualisierung von Lokalisierungsdateien und Erstellung von Dokumentationsübersetzungen Im Moment haben Sie nur die englische Version. Um die Dokumentationszeichenketten zu aktualisieren und Übersetzungen zu erstellen, müssen Sie das Skript doc-translate.sh ausführen.\nStellen Sie dazu sicher, dass Sie po4a (Version \u0026gt;= 0.69) auf Ihrem Computer installiert haben.\nEinige Linux-Distributionen (wie Debian Bullseye zum Beispiel) haben eine zu alte Version von po4a. Bitte stellen Sie sicher, dass Sie eine kompatible Version installieren. Wenn Sie zum Beispiel Debian Bullseye benutzen, können Sie die Bookworm po4a.deb Datei von https://packages.debian.org herunterladen und manuell installieren.\n Um Übersetzungen zu bearbeiten, machen Sie einfach dies:\nnpm run doc:translate Sie können dann eine Vorschau des Ergebnisses mit hugo serve -s support/documentation/ und unter Verwendung der Sprachauswahl anzeigen.\nDokumentation schreiben Bearbeiten Sie einfach die englischen Dateien in support/documentation/content/en.\nFühren Sie dann vor dem Commit immer npm run doc:translate aus, so dass Änderungen in den englischen Dateien in die Datei support/documentation/po/livechat.en.pot übertragen werden können.\nDu kannst den Shortcode livechat_label verwenden, um Anwendungsstrings zu verwenden. Siehe hier: Dokumentation übersetzen.\nEs ist möglich zu verhindern, dass eine Datei übersetzt wird, indem man livechatnotranslation: true in der Yaml Font Matter Sektion benutzt. Siehe hier: Dokumentation übersetzen.\nBitte verwenden Sie die Option livechatnotranslation für technische Dokumentation. Wir möchten nicht, dass die technische Dokumentation übersetzt wird, um Probleme aufgrund einer falschen Übersetzung zu vermeiden.\nUm den Übersetzern die Arbeit zu erleichtern, sollten Sie zu lange Absätze vermeiden.\nIm Moment ist es nicht möglich, Markdown-Tabellen zu verwenden: Die Übersetzungswerkzeuge würden sie nicht korrekt darstellen.\nMöglicherweise gibt es Links zur Dokumentation an anderer Stelle im Web. Versuchen Sie nicht, die URLs der Dokumentationsseiten zu ändern. Oder setzen Sie zumindest Links zum neuen Ort auf die vorherige URL.\n Was ist, wenn ich hugo und/oder po4a nicht verwenden kann? Bearbeiten Sie einfach die englischen Markdown-Dateien und geben Sie an, dass Sie keine Übersetzungen erstellen können, wenn Sie Ihren Pull Request stellen.\nVeröffentlichung Die Veröffentlichung der Dokumentation erfolgt automatisch, sobald die Änderungen in den documentation Zweig eingefügt wurden.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/admin/advanced/matterbridge/","title":"Matterbridge benutzen","tags":[],"description":"Matterbridge als Brücke zu anderen Chats nutzen","content":"Hier ist ein Tutorial um Matterbridge mit diesem Plugin zu benutzen (nur auf englisch): https://gitlab.com/refrac/obs-matterbridge-overlay/-/blob/master/documentation/peertube.md\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/data/","title":"Plugin storage","tags":[],"description":"Data files and folders used on the server","content":"The livechat plugin stores some data on the server, in the /var/www/peertube/storage/plugins/data/peertube-plugin-livechat/ folder. This page describes these data.\nprosody The prosody folder is used by the Prosody XMPP server to store its data and logs.\nprosodyAppImage This plugin uses the Prosoxy XMPP server in background. This server code is embedded as an AppImage.\nWhen the plugin starts, it deflate this AppImage in the prosodyAppImage folder.\nserverInfos To handle federation between Peertube instances, the plugin needs to store some information concerning remote instances (available protocols, \u0026hellip;).\nThe plugin stores these data in the serverInfos/instance_uri folder (where instance_uri is replaced by the instance uri).\nIn each instance\u0026rsquo;s folder, there can be these files:\n last-update: json file containing the timestamp of the last information update. So we can avoid refreshing too often. ws-s2s: if the server allows XMPP S2S Websocket connections, here are the endpoint information s2s: if the server allows direct XMPP S2S connections, here are the port and url information  videoInfos To handle federation the plugin needs to store some information about remote videos.\nSo, each time we open a new remote chat, a file videoInfos/remote/instance_uri/video_uuid.json is created (where instance_uri is the origin instance uri, and video_uuid is the video uuid).\nThis JSON files contain some data about the remote chat (is it enabled, are anonymous users authorized, which protocol can we use, \u0026hellip;). These data can then be read by the Prosody server to connect to the remote chat.\nMoreover, when the current instance builds such data for local videos, it stores it in videoInfos/local/video_uuid.json (where video_uuid is the video uuid).\nchannelConfigurationOptions The channelConfigurationOptions folder contains JSON files describing channels advanced configuration. Filenames are like 1.json where 1 is the channel id. The content of the files are similar to the content sent by the front-end when saving these configuration.\nroom-channel/muc_domain.json Some parts of the plugin need a quick way to get the channel id from the room Jabber ID, or the all room Jabber ID from a channel id. We won\u0026rsquo;t use SQL queries, because we only want such information for video that have a chatroom.\nSo we will store in the room-channel/muc_domain.json file (where muc_domain is the current MUC domain, something like room.instance.tld) a JSON object representing these relations).\nIn the JSON object, keys are the channel ID (as string), values are arrays of strings representing the rooms JIDs local part (without the MUC domain).\nWhen a chatroom is created, the corresponding entry will be added.\nHere is a sample file:\n{ \u0026#34;1\u0026#34;: [ \u0026#34;8df24108-6e70-4fc8-b1cc-f2db7fcdd535\u0026#34; ] } This file is loaded at the plugin startup into an object that can manipulate these data.\nSo we can easily list all rooms for a given channel id or get the channel id for a room JID (Jabber ID).\nNote: we include the MUC domain (room.instance.tld) in the filename in case the instance domain changes. In such case, existing rooms could get lost, and we want a way to ignore them to avoid gettings errors.\nNote: there could be some inconsistencies, when video or rooms are deleted. The code must take this into account, and always double check room or channel existence. There will be some cleaning batch, to delete deprecated files.\nbot/muc_domain The bot/muc_domain (where muc_domain is the current MUC domain) folder contains configuration files that are read by the moderation bot. This bot uses the xmppjs-chat-bot package.\nNote: we include the MUC domain (room.instance.tld) in the dirname in case the instance domain changes. In such case, existing rooms could get lost, and we want a way to ignore them to avoid gettings errors.\nbot/muc_domain/moderation.json The bot/muc_domain/moderation.json file contains the moderation bot global configuration. This bot uses the xmppjs-chat-bot package, see it\u0026rsquo;s README file for more information.\nNote: this includes the bot username and password. Don\u0026rsquo;t let it leak.\nbot/muc_domain/rooms The bot/muc_domain/rooms folder contains room configuration files. See the xmppjs-chat-bot package help for more information.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contributing/","title":"Beitragen","tags":[],"description":"Beitragen","content":"Interessiert beizutragen? Super!\n Verhaltenskodex  Vereinbarung über Verhaltenskodex für Mitwirkende\n   Übersätzen  Das Plugin übersetzen\n   Geben Sie Ihr Feedback  Geben Sie Ihr Feedback\n   Entwickeln  Entwickeln\n   Dokumentation  Dokumentieren Sie das Plugin, oder übersetzen Sie die Dokumentation.\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/streamers/moderation/","title":"Moderation","tags":[],"description":"Plugin peertube-plugin-livechat Erweiterte Moderationsfunktionen","content":" Dieser Abschnitt ist noch unvollständig.\n Der Chatbot Sie können einen Chatbot verwenden, der Sie bei der Moderation unterstützt. Weitere Informationen finden Sie in der Chatbot Dokumentation.\nZugang zu den Moderationswerkzeugen Sie können auf die Raumeinstellungen und Moderationswerkzeuge zugreifen, indem Sie den Chat in einem neuen Fenster öffnen, und das Dropdown-Menü oben rechts verwenden.\nAlle Instanzmoderatoren und Admins sind Eigentümer der erstellten Chaträume. Der Eigentümer des Videos wird der Administrator des Chatraums sein.\n Sie können ConverseJS Moderationsbefehle verwenden, um den Raum zu moderieren. Wenn Sie den Chat-Raum im Vollbildmodus öffnen, finden Sie oben rechts ein Menü mit speziellen Befehlen.\nRollen und Zugehörigkeiten Es gibt verschiedene Rollen, die Benutzern in Chaträumen zugewiesen werden können: Eigentümer, Moderatoren, Mitglieder, \u0026hellip;\nDieser Abschnitt ist noch unvollständig.\n Sie können Benutzer zu Moderatoren befördern, wenn Sie Hilfe benötigen.\nRauminhalt löschen Sie können alte Räume löschen: Treten Sie dem Raum bei, und verwenden Sie das Menü oben, um den Raum zu löschen.\nInstanz-Moderation Als Moderator oder Administrator einer Peertube-Instanz müssen Sie wahrscheinlich überprüfen, dass sich Ihre Benutzer nicht schlecht benehmen.\nSie können alle bestehenden Chaträume auflisten: in den Einstellungen des Plugins gibt es eine Schaltfläche «Räume auflisten».\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/slow_mode/","title":"MUC Slow mode","tags":[],"description":"MUC Slow mode XEP","content":"The livechat plugin includes a \u0026ldquo;slow mode\u0026rdquo; feature, to rate limit the number of messages that a user can send to a given MUC room. At time of writing, there were no XEP to describe such feature. Please find below a XEP draft, that will be submitted for review.\nWork In Progress, this page is not done yet. For an updated version of this documented, you can check the draft XEP XMP file.\n XEP: MUC Slow Mode Abstract: This specification describes a way to rate limit messages a single user can send to a MUC room, from the room configuration to the server and client handling of such a feature.\nAuthor: John Livingston\n1. Introduction There are some contexts in which you want to be able to rate limit MUC messages. This could have multiple motivations: avoid flooding, garantee a better readability of the room when there are hundreds of active users, \u0026hellip;\nThis specification propose a new option to MUC rooms, allowing room owners to fix a duration that users MUST wait between two messages. We will also specify how the server MUST reject messages send too quickly, and how clients SHOULD handle this feature (by preventing users to send messages without waiting the delay to be over).\n2. Terminology Clients: the client software used by end-users to join MUC rooms.\nModerator: A room role that is usually associated with room admins but that can be granted to non-admins.\nMUC: The multi-user chat protocol for text-based conferencing.\nParticipant: An occupant who does not have admin status; in a moderated room, a participant is further defined as having voice (in contrast to a visitor). A participant has a role of \u0026ldquo;participant\u0026rdquo;.\nRole: A temporary position or privilege level within a room, distinct from a user\u0026rsquo;s long-lived affiliation with the room; the possible roles are \u0026ldquo;moderator\u0026rdquo;, \u0026ldquo;participant\u0026rdquo;, and \u0026ldquo;visitor\u0026rdquo; (it is also possible to have no defined role). A role lasts only for the duration of an occupant\u0026rsquo;s visit to a room. See XEP-0045.\nRoom administrator: A user empowered by the room owner to perform administrative functions such as banning users; however, a room administrator is not allowed to change the room configuration or to destroy the room. An admin has an affiliation of \u0026ldquo;admin\u0026rdquo;. See XEP-0045.\nRoom owner: users that have special access to a room, and that can edit room configuration. See XEP-0045 - Owner Use Cases.\nService Discovery Extensions: XEP-0128: Service Discovery Extensions.\nSlow Mode: feature allowing to rate limit user messages in a MUC room.\nSlow Mode duration: when the Slow Mode feature is active, specifies the duration, in seconds, users must wait between two text messages.\n3. Requirements This document addresses the following requirements:\n How to allow room owners to enable and configure the feature by editing the MUC room discovery information. How to enable and configure the feature without allowing room owners to change the configuration. How the server MUST reject messages that does not respect the parameters. How clients SHOULD handle rooms with such feature enabled.  4. MUC configuration 4.1 Activating Slow Mode in the MUC Room configuration Your implementation MAY allow the Slow Mode feature to be set room by room, by its owners.\nIf room owners can configure the Slow Mode feature, the server MUST add a muc#roomconfig_slow_mode_duration field in the room configuration form.\nThis field MUST have its type equal to text-single.\nThis field SHOULD use Data Forms Validation, having its datatype equal to xs:integer.\nThe value of the field MUST be a positive integer, so you MUST add a range validation, as described in RFC-0122.\n0 value means that the slow mode is disabled for this room. Any positive value is the duration, in seconds, users must wait between two messages.\nHere is an example of response the server could send when a client is querying room configuration form:\n\u0026lt;iq from=\u0026#39;coven@chat.shakespeare.lit\u0026#39; id=\u0026#39;config1\u0026#39; to=\u0026#39;crone1@shakespeare.lit/desktop\u0026#39; type=\u0026#39;result\u0026#39;\u0026gt; \u0026lt;query xmlns=\u0026#39;http://jabber.org/protocol/muc#owner\u0026#39;\u0026gt; \u0026lt;x xmlns=\u0026#39;jabber:x:data\u0026#39; type=\u0026#39;form\u0026#39;\u0026gt; \u0026lt;title\u0026gt;Configuration for \u0026#34;coven\u0026#34; Room\u0026lt;/title\u0026gt; \u0026lt;instructions\u0026gt; Complete this form to modify the configuration of your room. \u0026lt;/instructions\u0026gt; \u0026lt;field type=\u0026#39;hidden\u0026#39; var=\u0026#39;FORM_TYPE\u0026#39;\u0026gt; \u0026lt;value\u0026gt;http://jabber.org/protocol/muc#roomconfig\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;field var=\u0026#39;muc#roomconfig_slow_mode_duration\u0026#39; type=\u0026#39;text-single\u0026#39; label=\u0026#39;Slow Mode (0=disabled, any positive integer= users can send a message every X seconds.)\u0026#39; \u0026gt; \u0026lt;validate xmlns=\u0026#39;http://jabber.org/protocol/xdata-validate\u0026#39; datatype=\u0026#39;xs:integer\u0026#39;\u0026gt; \u0026lt;range min=\u0026#39;0\u0026#39;/\u0026gt; \u0026lt;/validate\u0026gt; \u0026lt;value\u0026gt;20\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;!-- and any other field... --\u0026gt; \u0026lt;/x\u0026gt; \u0026lt;/query\u0026gt; \u0026lt;/iq\u0026gt; If the configuration is changed, the server SHOULD send a status code 104, as specified in XEP-0045 - Notification of configuration changes.\n4.2 Client discovering The feature can be enabled on a room:\n by the room owner, if your implementation allow them to set this option by a server-wide parameter  In other words: you can enable this feature, without adding the field in the room configuration form. This allows for example server admins to apply a rate limit server-wide, or to set the slow mode programmatically on any wanted criteria (number of users in the room, current server load, room context, \u0026hellip;).\nIn any case, to allow clients to discover that the feature is active, the server MUST respond on room information queries by adding a muc#roominfo_slow_mode_duration field. This field type MUST be text-single, and its value MUST be a positive integer.\n0 value means that the slow mode is disabled for this room. Any positive value is the duration, in seconds, users must wait between two messages. Any invalid (non-positive integer) value sent by the server MUST be considered as equal to 0 (in case of a bad implementation).\nHere is an example of response the server could send when a client is querying room information:\n\u0026lt;iq from=\u0026#39;coven@chat.shakespeare.lit\u0026#39; id=\u0026#39;ik3vs715\u0026#39; to=\u0026#39;hag66@shakespeare.lit/pda\u0026#39; type=\u0026#39;result\u0026#39;\u0026gt; \u0026lt;query xmlns=\u0026#39;http://jabber.org/protocol/disco#info\u0026#39;\u0026gt; \u0026lt;identity category=\u0026#39;conference\u0026#39; name=\u0026#39;The place to be\u0026#39; type=\u0026#39;text\u0026#39;/\u0026gt; \u0026lt;feature var=\u0026#39;http://jabber.org/protocol/muc\u0026#39;/\u0026gt; \u0026lt;x xmlns=\u0026#39;jabber:x:data\u0026#39; type=\u0026#39;result\u0026#39;\u0026gt; \u0026lt;field var=\u0026#39;FORM_TYPE\u0026#39; type=\u0026#39;hidden\u0026#39;\u0026gt; \u0026lt;value\u0026gt;http://jabber.org/protocol/muc#roominfo\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;field var=\u0026#39;muc#roominfo_slow_mode_duration\u0026#39; type=\u0026#39;text-single\u0026#39;\u0026gt; \u0026lt;value\u0026gt;2\u0026lt;/value\u0026gt; \u0026lt;/field\u0026gt; \u0026lt;!-- and any other field... --\u0026gt; \u0026lt;/x\u0026gt; \u0026lt;/query\u0026gt; \u0026lt;/iq\u0026gt; If the slow mode duration has changed (either because the room configuration was modified, or because a server parameter has changed), the server SHOULD send a status code 104, as specified in XEP-0045 - Notification of configuration changes.\n5. Server-side rate limiting When the Slow Mode is enabled, server MUST NOT accept two consecutive messages from the same user, to the same room, until the slow mode duration has elapsed. Only messages containing at least one \u0026lt;body/\u0026gt; element must be taking into account (to avoid counting chatstate messages for example).\nRoom administrators and owners MUST NOT be rate limited.\nIf a user bypass the limit, the server MUST reply an error stanza, that respects RFC 6120, especially:\n error_type MUST be wait, as described in RFC 6120 - Stanzas error - Syntax, error_condition MUST be policy-violation, as described in RFC 6120 - Stanzas error - Defined Stream Error Conditions, the stanza SHOULD contain a \u0026lt;text\u0026gt; element explaining why the message was rejected, and this message SHOULD mention the slow mode duration so that user can understand why they can\u0026rsquo;t post their message.  Here is an example or error stanza:\n\u0026lt;message xmlns=\u0026#34;jabber:client\u0026#34; type=\u0026#34;error\u0026#34; to=\u0026#34;crone1@shakespeare.lit/desktop\u0026#34; id=\u0026#34;528df978-aa6b-422a-b987-056a810c4733\u0026#34; from=\u0026#34;coven@chat.shakespeare.lit\u0026#34; \u0026gt; \u0026lt;error type=\u0026#34;wait\u0026#34;\u0026gt; \u0026lt;policy-violation xmlns=\u0026#34;urn:ietf:params:xml:ns:xmpp-stanzas\u0026#34; /\u0026gt; \u0026lt;text xmlns=\u0026#34;urn:ietf:params:xml:ns:xmpp-stanzas\u0026#34;\u0026gt; You have exceeded the limit imposed by the slow mode in this room. You have to wait 2 seconds between messages. Please try again later \u0026lt;/text\u0026gt; \u0026lt;/error\u0026gt; \u0026lt;/message\u0026gt; 6. Client handling When a participant joins a room, the client SHOULD request room information as described in section \u0026ldquo;4.2 Client discovering\u0026rdquo;, and look for the muc#roominfo_slow_mode_duration field.\nIf this field is present, and contains a valid strictly positive integer value, the client SHOULD display an information somewhere, to tell users that there is a slow mode limitation that applies to this room. This information MAY also be displayed to users for which the rate limit does not apply (administrators, owners, \u0026hellip;).\nMoreover, each time a participant sends a text message, the client SHOULD prevent the user to send another message before the timeout is passed. This MAY be done either by disabling the input field, or the submit button. If the user has at least the administrator acces level, the client SHOULD NOT disable the input field or the submit button.\nTo avoid some frustrating behaviour, in case there is some lag on the server for example, the client MAY start counting time after receiving the message echo. Indeed, if the first message is processed with some delay by the server, it could consider that the duration is not passed yet when receiving the next one.\n7. Security Considerations As a same user can join a room with multiple sessions and/or nicknames, the server MUST use the appropriate key to identify the account, and apply the same limits to all user\u0026rsquo;s sessions.\nAppendices Appendix A: Document information TO BE DONE\nAppendix B: Author Information John Livingston\nWebsite: https://www.john-livingston.fr\nAppendix C: Legal Notices TO BE DONE\nAppendix D: Relation to XMPP The Extensible Messaging and Presence Protocol (XMPP) is defined in the XMPP Core (RFC 6120) and XMPP IM (RFC 6121) specifications contributed by the XMPP Standards Foundation to the Internet Standards Process, which is managed by the Internet Engineering Task Force in accordance with RFC 2026. Any protocol defined in this document has been developed outside the Internet Standards Process and is to be understood as an extension to XMPP rather than as an evolution, development, or modification of XMPP itself.\nAppendix E: Discussion Venue TO BE DONE\nAppendix F: Requirements Conformance The following requirements keywords as used in this document are to be interpreted as described in RFC 2119: \u0026ldquo;MUST\u0026rdquo;, \u0026ldquo;SHALL\u0026rdquo;, \u0026ldquo;REQUIRED\u0026rdquo;; \u0026ldquo;MUST NOT\u0026rdquo;, \u0026ldquo;SHALL NOT\u0026rdquo;; \u0026ldquo;SHOULD\u0026rdquo;, \u0026ldquo;RECOMMENDED\u0026rdquo;; \u0026ldquo;SHOULD NOT\u0026rdquo;, \u0026ldquo;NOT RECOMMENDED\u0026rdquo;; \u0026ldquo;MAY\u0026rdquo;, \u0026ldquo;OPTIONAL\u0026rdquo;.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/documentation/user/xmpp_clients/","title":"XMPP Clients","tags":[],"description":"Verbindung zum Chat über einen XMPP-Client","content":"Dieses Chat-Plugin basiert auf dem XMPP-Protokoll (auch bekannt als Jabber). Es ist daher möglich, eine Verbindung zu den Chats herzustellen mit XMPP-Client-Software. Dies kann zum Beispiel nützlich sein, um Moderationsvorgänge zu erleichtern.\nDie auf dieser Seite beschriebenen Funktionen müssen von den Administratoren Ihrer Peertube-Instanz aktiviert und konfiguriert werden. Sie haben daher möglicherweise keinen Zugriff auf sie.\n Melden Sie sich bei Ihrem Peertube-Konto an Diese Funktion ist noch nicht verfügbar und wird in einer zukünftigen Version des Plugins enthalten sein.\n Verbindung über ein externes XMPP-Konto Wenn diese Funktion in Ihrer Instanz aktiviert ist, können Sie mit jedem XMPP-Konto eine Verbindung zu Peertube Chats über ein beliebiges XMPP-Konto verbinden.\nUm die Adresse des Raums, dem Sie beitreten möchten, zu erhalten, können Sie die Schaltfläche \u0026ldquo;Chat teilen\u0026rdquo; verwenden die sich über dem Chat befindet:\nStandardmäßig ist die Schaltfläche \u0026ldquo;Freigeben\u0026rdquo; nur für den Eigentümer des Videos und die Admins/Moderatoren der Instanz. Administratoren können jedoch festlegen, dass diese Schaltfläche für alle angezeigt wird.\n Wählen Sie dann \u0026ldquo;Verbinden über XMPP\u0026rdquo;:\nDann müssen Sie nur noch auf \u0026ldquo;Öffnen\u0026rdquo; klicken oder die Adresse des Chatraums in Ihren XMPP-Client kopieren/einfügen (mit der Funktion \u0026ldquo;einem Raum beitreten\u0026rdquo;).\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/issues/","title":"Fehlerverfolgung (Bug tracking) und neue Funktionen","tags":[],"description":"Fehler (Bugs) / Neue Funktionsanfragen","content":"Wenn Sie neue Funktionswünsche, Fehler (Bugs) oder Schwierigkeiten bei der Einrichtung des Plugins haben, können Sie den Github issue tracker verwenden.\nEinen Einblick in die Roadmap für kommende Funktionen finden Sie hier:\n Github Project. Meilensteine auf Github.  Wenn Sie ein Webdesigner oder ein ConverseJS/Prosody/XMPP-Experte sind und helfen wollen, dieses Plugin zu verbessern, sind Sie gerne willkommen.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/technical/","title":"Technical documentation","tags":[],"description":"Technical documentation","content":"  Source code  Source code organization\n   Third party  Displaying the livechat with 3rd party software.\n   Plugin storage  Data files and folders used on the server\n   MUC Slow mode  MUC Slow mode XEP\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/contact/","title":"Kontaktieren Sie mich","tags":[],"description":"Den Autor kontaktieren","content":"Wenn Sie eine Frage haben oder über dieses Plugin sprechen möchten, können Sie diesem XMPP-Raum mit einem beliebigen Jabber-Client beitreten: plugin-livechat-support@room.im.yiny.org.\nWenn Sie das Projekt finanziell unterstützen möchten, können Sie mich per E-Mail unter git.[at].john-livingston.fr kontaktieren oder mein Liberapay-Profil ansehen.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/credits/","title":"Impressum","tags":[],"description":"Impressum des Plugins","content":"package.json, COPYRIGHT and LICENSE Dateien beinhalten die Lizenzinformationen für dieses Programm und seiner Abhängigkeiten.\nDas Plugin wird von John Livingston betrieben.\nVielen Dank an David Revoy für seine Arbeit am Peertube-Maskottchen, [Sepia] (https://www.davidrevoy.com/index.php?tag/peertube). Das Charakterdesign steht unter CC-By-Lizenz, und die SVG-Dateien, die zur Erstellung einiger Logos und Avatare in diesem Plugin verwendet wurden, stehen unter GPLv3.0. Die PNG-Dateien stehen unter CC-By-Lizenzen und stammen aus dem online Sepia Avatar Generator.\nVielen Dank an Framasoftfür die Ermöglichung von Peertube, für die finanzielle Unterstützung, und für das Weblate.\nVielen Dank an ritimo für die finanzielle Unterstützung.\nVielen Dank an Code Lutin und Rétribution Copie Publique für die finanzielle Unterstützung.\nVielen Dank an NlNet und die NGI0 Entrust fund für die finanzielle Unterstützung.\n"},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/","title":"","tags":[],"description":"","content":"PeerTube plugin livechat Sie können die Sprachauswahl im linken Menü verwenden, um diese Dokumentation in verschiedenen Sprachen anzuzeigen. Einige Übersetzungen fehlen oder sind unvollständig. In diesem Fall sehen Sie die englische Version des Textes.\n Willkommen in der Peertube Livechat Plugin Dokumentation.\nPeertube ist eine dezentrale Streaming-Plattform, die sowohl Live-Streaming als auch VOD (Video On Demand) anbieten kann. Das vorliegende Plugin fügt Ihrer Peertube-Installation Chat-Funktionen hinzu, die es den Zuschauern ermöglichen, sich mit den Streamern auszutauschen.\nUm einen Einblick in die Fähigkeiten dieses Plugins zu bekommen, schauen Sie sich die Einführung an. Für genauere Informationen, finden Sie unten die Zusammenfassung dieser Dokumentation.\nSie können das Suchfeld im linken Menü verwenden, um bestimmte Teile der Dokumentation schnell zu finden.\n Bevor Sie auf eine Hauptversion aktualisieren, lesen Sie bitte die Versionshinweise und die Liste der wichtigsten Änderungen : CHANGELOG.\n  Einführung  Einführung\n   Dokumentation  Plugin Dokumentation\n  Benutzer Dokumentation  Plugin peertube-plugin-livechat Benutzer Dokumentation\n  Für Zuschauer  Wie man chattet für Live-Stream Zuschauer\n   Für Streamer  So richten Sie den Chat für Ihren Live-Stream ein\n  Einige Grundlagen  Einige grundlegende Informationen zur Einrichtung und Nutzung des Chats für Ihren Livestream\n Kanalkonfiguration  Peertube Kanal Chaträume Konfiguration\n Langsamer Modus  Plugin peertube-plugin-livechat Langsamer Modus\n Chatbot  Chatbot Einrichtung\n Moderation  Plugin peertube-plugin-livechat Erweiterte Moderationsfunktionen\n  OBS  Dokumentation zum Streamen des Chat-Inhalts mit OBS.\n   XMPP Clients  Verbindung zum Chat über einen XMPP-Client\n    Installationsanleitung  Plugin peertube-plugin-livechat Installationsanleitung\n  Fehlerbehebung  Einige klassische Fehler und Umgehungsmöglichkeiten.\n   Bekannte Probleme: CPU Kompatibilität  Derzeit funktioniert das Plugin standartmäßig nur für x86_64 CPU Architekturen. Hier sind einige Anleitungen für andere CPU Architekturen.\n   Aktualisieren von Versionen vor 6.0.0  Wichtige Hinweise zum aktualisieren von älteren Versionen.\n    Admin Dokumentation  Plugin Peertube Livechat Administation\n  Einstellungen  Plugin Peertube Livechat Einstellungen\n   Fortgeschrittene Nutzung  Einige erweiterte Funktionen\n  XMPP-Clients  Verbindungen über XMPP-Clients zulassen\n Matterbridge benutzen  Matterbridge als Brücke zu anderen Chats nutzen\n    Beitragen  Beitragen\n  Verhaltenskodex  Vereinbarung über Verhaltenskodex für Mitwirkende\n   Übersätzen  Das Plugin übersetzen\n   Geben Sie Ihr Feedback  Geben Sie Ihr Feedback\n   Entwickeln  Entwickeln\n   Dokumentation  Dokumentieren Sie das Plugin, oder übersetzen Sie die Dokumentation.\n    Fehlerverfolgung (Bug tracking) und neue Funktionen  Fehler (Bugs) / Neue Funktionsanfragen\n   Technical documentation  Technical documentation\n  Source code  Source code organization\n   Third party  Displaying the livechat with 3rd party software.\n   Plugin storage  Data files and folders used on the server\n   MUC Slow mode  MUC Slow mode XEP\n    Kontaktieren Sie mich  Den Autor kontaktieren\n   Impressum  Impressum des Plugins\n   "},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://johnxlivingston.github.io/peertube-plugin-livechat/de/tags/","title":"Tags","tags":[],"description":"","content":""}]